ÅloadMoreWidgetBuilderallowedViewsallowViewNavigationshowDatePickerButtonshowCurrentTimeIndicatorviewminDatemaxDatemonthCellBuilderappointmentBuildertimeRegionBuilderheaderDateFormatscheduleViewMonthHeaderBuilderfirstDayOfWeekappointmentTimeTextFormatcellBorderColorscheduleViewSettingsheaderStyleviewHeaderStyleheaderHeightcellEndPaddingappointmentTextStyleviewHeaderHeighttodayHighlightColortodayTextStylebackgroundColorshowNavigationArrowviewNavigationModetimeSlotViewSettingsresourceViewSettingsmonthViewSettingsblackoutDatesblackoutDatesTextStyleselectionDecorationinitialDisplayDatetimeZoneinitialSelectedDateonViewChangedonTaponLongPressonSelectionChanged
dataSourcespecialRegionsshowWeekNumberweekNumberStyleresourceViewHeaderBuilderallowDragAndDropdragAndDropSettingsonDragStartonDragUpdate	onDragEnd
controllerallowAppointmentResizeonAppointmentResizeStartonAppointmentResizeUpdateonAppointmentResizeEndgetRecurrenceDateTimeCollection
parseRRulegenerateRRulecreateStatedebugFillProperties_currentViewVisibleDates_currentDate_selectedDate_visibleAppointments _allDayAppointmentViewCollection_allDayPanelHeight_agendaScrollController_resourcePanelScrollController_agendaSelectedDate _timelineMonthWeekNumberNotifier_headerUpdateNotifier_locale_localizations	_minWidth
_minHeight_textScaleFactor_calendarTheme_headerHoverNotifier_resourceHoverNotifier_agendaDateNotifier_agendaViewNotifier_resourceImageNotifier_scheduleViewKey
_scrollKey_customScrollViewKey_previousDates
_nextDates_forwardWidgetHeights_backwardWidgetHeights_minDate_maxDate_agendaDateViewWidth_timeZoneLoaded_appointments_controller_actualWidth_blackoutDates_isRTL_view_showHeader_calendarViewWidth_viewChangeNotifier_scheduleDisplayDate_isMobilePlatform_useMobilePlatformUI_fadeInController_fadeIn_opacity_isLoadMoreLoaded_isNeedLoadMore_isScheduleStartLoadMore_scheduleMinDate_scheduleMaxDate
_focusNode_resourceCollection_imagePainterCollection_canScrollTimeSlotView	initStatedidChangeDependenciesdidUpdateWidgetbuild_getCalendarDetails_getScheduleViewDetailsdispose_getThemeDataValue_updateFadeAnimation_loadDataBase_getAppointment_updateVisibleAppointments_updateViewHeaderHover_initScheduleViewProperties_handleScheduleViewScrolled_updateSelectionChangedCallback_calendarValueChangedListener_updateDisplayDate_updateCurrentVisibleDates_dataSourceChangedListener!_loadScheduleViewAppointmentDates#_removeScheduleViewAppointmentDates_disposeResourceImagePainter#_updateVisibleAppointmentCollection_agendaSelectedDateListener_updateCurrentDate_updateAppointmentView_updateAppointmentViewPosition(_updateAppointmentPositionAndMaxPosition_getAppointmentOnPosition)_updateIntersectAppointmentViewCollection_updateAllDayAppointment_updateAllDayPanelHeight_getMonthAgendaHeight_updateMouseHoveringForHeader_updateMouseHoverPosition_pointerEnterEvent_pointerHoverEvent_pointerExitEvent_getMaxAppointmentDate_getMinAppointmentDate_isAppointmentBetweenDates_isAllDayAppointmentView_getAllDayCount$_getAppointmentCollectionOnDateBasis_getItem_getMonthOrWeekHeader_getDisplayDateView_raiseCallbackForScheduleView	addAgenda_getInitialScrollPositionaddAgendaWithLoadMore
_onKeyDownloadMoreAppointments_updateViewChangePopup_getCalendarViewPopup_addResourcePanel"_handleOnLongPressForResourcePanel_handleOnTapForResourcePanel _getSelectedResourceAppointments_getTappedResource_addCustomScrollView_addChildren_removeDatePicker_updateDatePicker_addDatePicker_getCalendarStateDetails_updateCalendarState_handleOnTapForHeader_handleOnLongPressForHeader_getTappedHeaderDate_handleTapForAgenda_handleLongPressForAgenda_getSelectedAppointments_addAgendaViewchildopacity_update	alignment_animationController
_animationvisibleDatescalendarThemecurrentDatenumberOfWeeksInViewisRTLlocalewidthheightnonWorkingDaysnavigationDirectionremovePickerheaderTapCallbackheaderLongPressCallbacklocalizationsvalueChangeNotifierviewChangeNotifierisPickerShowntextScaleFactorisMobilePlatformenableInteractiontimelineMonthWeekNumberNotifiernumberOfDaysInView_calendarViews_updateHeaderChanged(_updateWeekNumberChangedForTimelineMonth	_backward_forward_getCalendarViewWidget_getWeekNumberString_getHeaderText	startDateendDateisMonthLabeluseMobilePlatformUIagendaViewNotifierisDisplayDate_textPainter_backgroundPainterpaint_addDisplayDateLabel_addWeekLabel_addMonthLabel_updateTextPaintershouldRepaint_getSemanticsBuildersemanticsBuildershouldRebuildSemanticscreateRenderObjectupdateRenderObject_scrollableState_stackViewPortscrollableStateattachdetachupdateHeaderOffset_scrollableHeight_getCurrentOffset_getHeaderOffsetcreate	_position_borderRadius_targetRadius_clipCallback_repositionToReferenceBox_radius_radiusController_alpha_alphaControllerconfirmcancel_handleAlphaStatusChangedpaintFeatureselectedDateagendaDateNotifier	viewWidth_linePainter_addDayLabelForMobile_addDayLabelForWeb_drawTodayCircle_height_intersectPoint!_kUnconfirmedRippleSplashDuration_kSplashFadeDuration_CalendarHeaderCallback
SfCalendar_SfCalendarState_OpacityWidget_OpacityWidgetState_PopupWidget_PopupWidgetState_CalendarHeaderView_CalendarHeaderViewState_ScheduleLabelPainter_ScheduleAppointmentView"_AppointmentViewHeaderRenderObject_CustomSplashFactory_CustomSplash_AgendaDateTimePainter_ScheduleViewDetails_getTargetRadius_getClipCallback_getTextWidgetWidth_getCalendarViewsText_getAgendaViewDayLabelWidthÇ˚
DateFormatDurationsecondsmillisecondsvoiddoubleAppointmentCalendarViewdayCalendarControllerviewweekworkWeekmonthtimelineDaytimelineWeektimelineWorkWeektimelineMonthscheduleCalendarDataSourceCalendarElementSfCalendarThemeDataSfCalendarThemeSfThemecalendarThemeMonthViewSettingsMonthCellStyleAgendaStyleCalendarHeaderStyleViewHeaderStyleTimeSlotViewSettingsResourceViewSettingsScheduleViewSettingsSfDateRangePicker	immutableStatefulWidget
DataSourceKeyDateTime	TextStylecolorColorswhitefontSize
fontWeight
FontWeightw500
fontFamilyViewNavigationModesnapWeekNumberStyleDragAndDropSettingsisBeforeisAfternowyearkeyhandleLoadMorenotifyListenersLoadMoreWidgetBuilderonViewChangedListbooldisplayDateappointmentDisplayModeMonthCellBuilderCalendarAppointmentBuilder
TimeRegionTimeRegionBuilderStringScheduleViewMonthHeaderBuilderintColormonthHeaderSettingsweekHeaderSettingsdayHeaderSettingsappointmentTextStyleappointmentItemHeighthideEmptyScheduleWeek	textStyle	textAlignbackgroundColordayTextStyledateTextStyleagendaStyleforwardbackward	startHourendHournonWorkingDaystimeIntervaltimeIntervalHeighttimeIntervalWidth
timeFormat
dateFormat	dayFormattimeRulerSizeCalendarResource	resourcesnumberOfWeeksInView
showAgendaappointmentDisplayCountnavigationDirectiontrailingDatesTextStyleleadingDatesTextStyleselectedDate
DecorationstartTimeZoneendTimeZoneViewChangedDetailsViewChangedCallbackCalendarTapDetailsCalendarTapCallbackCalendarLongPressDetailsCalendarLongPressCallbackCalendarSelectionDetails CalendarSelectionChangedCallbackappointmentsResourceViewHeaderBuilderAppointmentDragStartCallbackAppointmentDragUpdateCallbackAppointmentDragEndCallbackAppointmentResizeStartDetailsAppointmentResizeStartCallbackAppointmentResizeUpdateDetailsAppointmentResizeUpdateCallbackAppointmentResizeEndDetailsAppointmentResizeEndCallbackrecurrenceRulespecificStartDatespecificEndDateCalendarViewHelperisSameOrBeforeDateTimeisSameOrAfterDateTimeRecurrenceHelpergetRecurrenceDateTimeCollectionRecurrenceProperties
parseRRulegenerateRRuleoverrideDiagnosticPropertiesBuilderdebugFillPropertiesaddtoDiagnosticsNodenameDiagnosticsPropertyEnumPropertyIntPropertyDoublePropertyStringPropertyColorPropertyIterableDiagnosticsStateSingleTickerProviderStateMixinCalendarAppointmentAppointmentViewScrollControllerValueNotifierSfLocalizationsOffsetScheduleViewHoveringDetails	UniqueKey	GlobalKeyMapAnimationController	Animation	FocusNodeObjectDecorationImagePainterinitializeDateFormattingthenaddListenerwidget
controllergetCalendarDetailsAtOffsetinitialSelectedDateDateTimeHelpergetDateTimeValuegetValidDateminDatemaxDateinitialDisplayDate
dataSource	cloneListmonthViewSettingsisResourceEnabledaddPropertyChangedListenershouldRaiseViewChangedCallbackraiseViewChangedCallbackblackoutDates	initState
MediaQueryofcontexttextScaleFactorsizewidthThemecolorSchemeLocalizationslocaleOftoStringremoveListenerdidChangeDependenciesremovePropertyChangedListenervaluescheduleViewSettingsclearWidgetsBindinginstanceaddPostFrameCallbackloadMoreWidgetBuilderisDateCollectionEqualtimeZoneshowTrailingAndLeadingDatesisCollectionEqualdidUpdateWidgetWidgetBuildContextisRTLLayoutLayoutBuilderbuilderBoxConstraintsconstraintsmaxWidthinfinity	maxHeightisMobileLayoutplatformisMobileLayoutUIdurationvsyncTweenbeginendanimateCurvedAnimationparentcurveCurveseaseIn
isNotEmptyheaderHeightGestureDetectorchild	ContainerheightonTapCalendarDetailsdyheaderdxcurrentWidgetCustomCalendarScrollViewgetCalendarDetailsisDateWithInDateRangeisDateInDateCollectionagendadynamicappointmentresourceViewSettingsgetViewHeaderHeightviewHeaderHeightgetTimeLabelWidthtimeSlotViewSettingsgetResourceItemHeightlengthresourceHeaderpositionpixelsi_heightisEmptyaddDaysdaysPerWeekAppointmentHelpergetVisibleAppointmentsisSameOrAfterDateisSameOrBeforeDatecanCreateNewAppointmentsortapp1actualStartTime	compareToapp2keystoList
isSameDategetScheduleAppointmentHeight"getScheduleAllDayAppointmentHeight
viewHeadercalendarCellorderAppointmentsAscendingisAllDay	isSpannedisCalendarAppointmentgetCustomAppointmentskdisposeColorSchemecopyWith
brightnesstransparentheaderBackgroundColoragendaBackgroundColoractiveDatesBackgroundColortodayBackgroundColortrailingDatesBackgroundColorleadingDatesBackgroundColorviewHeaderBackgroundColorallDayPanelColorweekNumberBackgroundColor	onSurfacewithOpacitycellBorderColortodayHighlightColorprimaryselectionBorderColorblackoutDatesTextStyleagendaDayTextStyleagendaDateTextStyletodayTextStyle	onPrimaryheaderTextStyleactiveDatesTextStyletimeTextStyleviewHeaderDateTextStylew400viewHeaderDayTextStyledisplayNameTextStyleweekNumberTextStyletimeIndicatorTextStylemountedFutureByteData
rootBundleloadinitializeDatabasebufferasUint8ListgenerateCalendarAppointments isLeadingAndTrailingDatesVisiblegetMonthStartDategetMonthEndDateisTimelineViewsetStatecontainsKey_intersectPoint
hasClientsatEdgeminScrollExtentmaxScrollExtent+shouldRaiseCalendarSelectionChangedCallbackonSelectionChanged%raiseCalendarSelectionChangedCallbackisSameTimeSlotresetSchedulerBindingupdateFocushasFocusrequestFocusupdateScrollPositiongetViewDatesCountnumberOfDaysInViewgetVisibleDatesfirstDayOfWeekcastgetCurrentMonthDatesshowWeekNumberCalendarDataSourceActionaddAllremovejdataremoveAtaddResourceremoveResourceresetResourceaddDurationdaysgetDifferenceactualEndTimerecurrenceDurationrecurrenceExceptionDates convertTimeToAppointmentTimeZoneweekdayabscontainsdate2date1hourminutesecondcanReuseappointmentViewgetIndex
startIndexendIndexreducecurrentAppViewnextAppViewmaxPositionsresetAppointmentViewinDays	startTimeendTimekAllDayAppointmentHeightagendaViewHeight	RenderBoxfindRenderObjectglobalToLocalshouldRaiseCalendarTapCallback$shouldRaiseCalendarLongPressCallbackonLongPressoffsetallowViewNavigationpaddingPointerEnterEventcurrentDatestartPositionresourceEnabledPointerHoverEventPointerExitEvent	splitRuleindexOfgetUntilEndDateconvertToStartTimeconvertToEndTime#isAppointmentWithinVisibleDateRangeformatopacityviewPaddingisNeedTopPaddingisDisplayDateDivider	thicknessMouseRegiononEntereventonExitonHoverCustomPaintpainterSizecontent
EdgeInsetsfromLTRBAgendaViewLayoutappointmentTimeTextFormatappointmentBuilderplaceholderTextStyleonTapUpTapUpDetailsdetailslocalPositiononLongPressStartLongPressStartDetailsSizedBoxColumnchildrenscheduleViewMonthHeaderBuilderScheduleViewMonthHeaderDetailsRectfromLTWHRepaintBoundaryraiseCalendarTapCallbackraiseCalendarLongPressCallbackinsertinitialScrollOffsetRawKeyboardListener	focusNodeonKeyStack
PositionedtoprightleftheaderStyleshowNavigationArrowshowDatePickerButtonallowedViewsheaderDateFormatweekNumberStyleCustomScrollViewphysicsAlwaysScrollableScrollPhysicscenterslivers
SliverListdelegateSliverChildBuilderDelegateindexNotificationListenerOverscrollNotificationonNotificationnotification
overscrollClampingScrollPhysicsRangeMaintainingScrollPhysics	Alignment	topCenterbottomCenter	alignmentRawKeyEventruntimeTypeRawKeyDownEventhandleViewSwitchKeyBoardEventblack87getTodayHighlightTextColorcenterRight
centerLeftstyleInkWell	symmetric
horizontalTextmaxLines	TextAlignjustify
todayLabeltopLefttopRightzero
decorationBoxDecoration
Brightnessdarkgrey	boxShadowkElevationToShadowborderRadiusBorderRadiuscircularMaterialtypeMaterialTypetransparency	ScrollbarthumbVisibilityListViewbottomVerticalDividerScrollConfigurationbehavior
scrollbarsResourceViewWidgetresourceViewHeaderBuilderresourceIdsidgetAppointmentDetailspecialRegionstruncatemonthCellStylemarginall	BoxShadow
blurRadiusselectionColorselectableDayPredicatedateTimeDateRangePickerHeaderStyle DateRangePickerMonthViewSettingsDateRangePickerMonthCellStyleyearCellStyleDateRangePickerYearCellStyleDateRangePickerViewDateRangePickerViewChangedArgsvisibleDateRange	startDate#DateRangePickerSelectionChangedArgsUpdateCalendarStateDetailscurrentViewVisibleDatesallDayPanelHeightallDayAppointmentViewCollectionvisibleAppointmentsgetSelectedDateAppointmentsOpacity	easeInOutScaleTransitionscaleFadeTransitionMonthNavigationDirectionVoidCallbackvalueChangeNotifiertimelineMonthWeekNumberNotifierlocalizationsisMobilePlatformweeknumberLabelviewChangeNotifiersemanticLabelvisibleDatescanMoveToNextViewcanMoveToPreviousViewMainAxisAlignmentstartisRTLenableInteractionsplashColorhighlightColor
hoverColorsplashFactoryheaderTapCallbackheaderLongPressCallbackclipBehaviorClip	antiAliasRowmainAxisAlignmentFlexiblesemanticsLabelisPickerShownoverflowTextOverflowclipsoftWraptextDirectionTextDirectionltrIconIconsarrow_drop_uparrow_drop_downRadiusellipsis	Semanticslabelchevron_leftkeyboard_arrow_upchevron_rightkeyboard_arrow_downremovePickertodayborderBordervertical	more_vertgetWeekNumberOfYearmondaylocaleCustomPainterrepaintTextPainterPaintCanvasclipRectTextSpantextnoEventsCalendarLabelweekTextStylelayoutpainthoveringDatePaintingStylestrokestrokeWidthdrawRectfill	drawRRectRRectfromRectAndRadiusstartDateFormatendDateFormatmonthFormatmonthTextStyleshadertextWidthBasisTextWidthBasislongestLineCustomPainterSemanticsrect
propertiesSemanticsPropertiesSemanticsBuilderCallbackAlignmentDirectionaltopStartRenderStackscrollableState
ScrollableDirectionalityfitmustCallSuperupdateRenderObjectScrollableStateAlignmentGeometryStackFitlooseRenderAbstractViewportmarkNeedsPaintattachedPipelineOwnerattachdetachPaintingContext
paintStack
firstChild	lastChildgetOffsetToRevealStackParentData
parentDataRenderViewportanchorInteractiveInkFeatureFactoryInteractiveInkFeatureMaterialInkControllerRectCallbackShapeBorderreferenceBoxcontainedInkWellrectCallback	onRemoveddriveaddStatusListenerIntTweenalphaaddInkFeaturefloorAnimationStatus	completedMatrix4	withAlphalerpMatrixUtilsgetAsTranslationsave	transformstorage	translatefromRectAndCorners
bottomLeftbottomRight	clipRRect
drawCirclerestoreisAntiAliasnormaltoUpperCasehoveringOffsetblackdefaultSplashRadiusdistancemaxceilToDoublebuildRenderParagraphRichTextcreateRenderObjectminWidth	minHeightTextBoxgetBoxesForSelectionTextSelection
baseOffsetextentOffsetboxallowedViewDayLabelallowedViewWeekLabelallowedViewWorkWeekLabelallowedViewTimelineDayLabelallowedViewTimelineWeekLabelallowedViewTimelineMonthLabel allowedViewTimelineWorkWeekLabelallowedViewMonthLabelallowedViewScheduleLabelStatefulWidgetStateSingleTickerProviderStateMixinCustomPainterStackRenderStackInteractiveInkFeatureFactoryInteractiveInkFeatureô„ÍA(»ÍπL#€N¸  & 	dart:math  package:flutter/foundation.dart  package:flutter/gestures.dart  package:flutter/material.dart  package:flutter/rendering.dart  package:flutter/scheduler.dart  package:flutter/services.dart  (package:intl/date_symbol_data_local.dart  package:intl/intl.dart  )package:syncfusion_flutter_core/core.dart  2package:syncfusion_flutter_core/localizations.dart  *package:syncfusion_flutter_core/theme.dart  5package:syncfusion_flutter_datepicker/datepicker.dart  package:timezone/timezone.dart  #appointment_engine/appointment.dart  *appointment_engine/appointment_helper.dart  +appointment_engine/calendar_datasource.dart  )appointment_engine/recurrence_helper.dart  -appointment_engine/recurrence_properties.dart  *appointment_layout/agenda_view_layout.dart  common/calendar_controller.dart   common/calendar_view_helper.dart  common/date_time_engine.dart  common/enums.dart  common/event_args.dart  $resource_view/calendar_resource.dart   resource_view/resource_view.dart  $settings/drag_and_drop_settings.dart  settings/header_style.dart  !settings/month_view_settings.dart  $settings/resource_view_settings.dart  $settings/schedule_view_settings.dart  settings/time_region.dart  %settings/time_slot_view_settings.dart  settings/view_header_style.dart  settings/week_number_style.dart  views/calendar_view.dart  	dart:core¿Xx ¿‹¨Ô JsÄúÄ∆ÄÅÅMÅÅ¥ÅÚÇ(ÇiÇìÇïÇƒÇ˙É1ÉfÉüÉ’Ñ Ñ,ÑTÑqÑìÑ√ÑÔÖÖEÖrÖ¢Ö“Ö˜Ü(ÜSÜ~Ü¢Ü§ÜÙáDádáÆá∞áÚà6à8àxàzàõà†àÕà“ââjâµâ≈â äääläùä¢äÃäÊãã ã<ã^ãÅã®ãÃãÎãåmårå¿å˙åˇçQçyç~çœç˘ç˛éHéïé£é®éÚè<èaè¢è·êê"êfêkêzê∆ëë_ë®ë¯íGíñí›ì'ìvìãì⁄ìÎî:î[î`îeîrîõî¥î—îıï'ï4ï?ïGïLïï¨ïÀï”ï⁄ïﬂññEñ_ñxñ°ñÃñÛóó3óUóvóïó•ó™ó”ó€óÂóÒòòhòwò~òœò÷ôô6ô=ôàôòôßô ôËöö&öEö_özöïö´öøöﬁö˜õõõ=õSõxõëõªõ◊õıúú.úcúòú◊ùùOùrùëù–ùËû û2ûPûgûçû≠û‘û¸ü#üNümü•üΩü◊ü¯††<†q†ñ†¿†‰°	°+°O°å°£°ª°–¢¢1¢Z¢¨¢˝£$£X£ô£«£Û§)§C§E§í§º§√••c•±•˝¶O¶û¶»¶œßß?ßFßîß„®®&®7®à®±®¸©©µ©º©Ã©›™
™(™D™d™è™º™¸´>´n´ú´“¨¨3¨É¨©¨›≠≠H≠É≠√≠ÒÆCÆ\ÆsÆàÆóÆ§ÆÆÆµÆ¿Æ˜Æ˘ØGØ`ØgØÄØáØòØ‚∞#∞q∞æ±V±]±m±ô±µ±‘±˙≤*≤[≤ç≤¡≤ﬂ≤Ó≤˚≥≥≥≥B≥D≥ë≥•≥¨≥»≥œ≥‡¥1¥H¥ò¥´µ;µBµRµYµÖµ°µ¿µÊ∂∂∂)∂3∂:∂E∂h∂j∂∑∂æ∑∑J∑Q∑m∑t∑Ö∑’∑Ë∏6∏dπ)π0π@πlπàπßπÀπÛ∫∫∫∫ ∫+∫O∫Q∫°∫Âªª
ª%ª,ª=ªÜªçªîª§ª–ªÏºº1º`ºmºwº~ºâº±º≥º·ºËΩΩΩ'ΩhΩ≤ΩÛæ@æëæ®æ¯øøõø¢ø©øπø‰¿ @ ¿ @¿ @E¿ @T¿ @a¿ @k¿ @r¿ @~¿ @ö¿ @ú¿ @ﬂ¿ @Ê¿ A4¿ A¿ A±¿ A∏¿ A„¿ AÍ¿ B9¿ BÜ¿ B¬¿ B…¿ B⁄¿ C)¿ Cs¿ CΩ¿ C—¿ Cÿ¿ CË¿ D¿ D/¿ DN¿ Du¿ D±¿ D¿¿ DÕ¿ D◊¿ Dﬁ¿ DÍ¿ E¿ E¿ EK¿ ER¿ E†¿ EÍ¿ F¿ F#¿ FO¿ FV¿ F•¿ FÚ¿ G.¿ G5¿ GF¿ Gï¿ G›¿ H'¿ H;¿ HB¿ HR¿ HY¿ HÑ¿ H†¿ Hø¿ HÊ¿ I"¿ I1¿ I>¿ IH¿ IO¿ I[¿ Iv¿ Ix¿ Iæ¿ I⁄¿ I·¿ IÚ¿ JD¿ Jk¿ Jµ¿ J∆¿ K\¿ L¿ L%¿ L4¿ LD¿ Lq¿ Lå¿ L´¿ L–¿ Lˆ¿ M¿ M]¿ M}¿ M†¿ MΩ¿ MÏ¿ Mˇ¿ N¿ N¿ N.¿ N8¿ ND¿ Nq¿ Ns¿ N¬¿ O¿ O¿ O&¿ Op¿ Oª¿ P¿ P¿ P&¿ P7¿ Pâ¿ P€¿ PÏ¿ Q9¿ QS¿ R¿ R¿ R#¿ Ra¿ Rh¿ Rz¿ Rß¿ R≈¿ R·¿ S¿ S)¿ SR¿ Sç¿ S⁄¿ T&¿ TL¿ Tí¿ T⁄¿ U¿ U¿ Ud¿ Uò¿ Uﬂ¿ V¿ V8¿ Vn¿ V•¿ V˜¿ W-¿ Wp¿ WÆ¿ WÎ¿ X ¿ XT¿ Xë¿ XÃ¿ X˛¿ YB¿ Yh¿ Yµ¿ Y·¿ Z"¿ Zc¿ Zõ¿ ZÍ¿ [¿ [R¿ [†¿ [‰¿ \0¿ \q¿ \©¿ \˜¿ ]¿ ]<¿ ]W¿ ]ã¿ ]“¿ ]¯¿ ^>¿ ^Ü¿ ^æ¿ ^’¿ ^È¿ ^¸¿ _¿ _¿ _)¿ _3¿ _?¿ _x¿ _z¿ _À¿ `
¿ `¿ `"¿ `n¿ `¿¿ `ﬂ¿ a£¿ a™¿ a±¿ a¿¿ a«¿ aÛ¿ b.¿ bX¿ bû¿ b¿¿ bﬂ¿ c¿ cC¿ cv¿ cï¿ cú¿ c∂¿ c¿¿ c«¿ cŸ¿ d¿ d$¿ dB¿ d`¿ dÜ¿ d∑¿ dÿ¿ e(¿ eJ¿ ew¿ e¶¿ e≈¿ e˘¿ f4¿ fI¿ fv¿ fß¿ fÛ¿ g#¿ gu¿ g≠¿ g‰¿ g˜¿ h¿ h¿ h%¿ h/¿ h;¿ hj¿ hl¿ hß¿ hÆ¿ h¯¿ i=¿ it¿ i{¿ i´¿ i€¿ j¿ j1¿ j_¿ jå¿ j∫¿ jÂ¿ k¿ k>¿ kk¿ kô¿ k»¿ kˆ¿ l%¿ lX¿ lÖ¿ l≥¿ lﬁ¿ m
¿ m7¿ me¿ mì¿ m¬¿ mÚ¿ n!¿ nQ¿ nÖ¿ n≥¿ n‚¿ o¿ o9¿ of¿ oë¿ oΩ¿ oÍ¿ p¿ pD¿ pp¿ pú¿ p«¿ pÛ¿ q¿ q%¿ q>¿ qE¿ qV¿ qú¿ qÎ¿ r1¿ r’¿ r‹¿ r„¿ rÛ¿ s¿ s0¿ sN¿ sj¿ sä¿ s¥¿ s„¿ sÚ¿ t ¿ t¿ t¿ t"¿ tE¿ tG¿ tê¿ tπ¿ t¿¿ t—¿ u¿ uÎ¿ uÚ¿ v¿ v¿ v?¿ vZ¿ vy¿ vû¿ v«¿ w¿ wN¿ wn¿ wë¿ wÆ¿ wÁ¿ x¿ x-¿ x>¿ xM¿ x\¿ xf¿ xr¿ xª¿ xΩ¿ xÛ¿ x˙¿ yK¿ yì¿ yö¿ y‘¿ y€¿ yÏ¿ z/¿ zœ¿ z÷¿ z›¿ zÌ¿ zÙ¿ { ¿ {<¿ {[¿ {Ç¿ {£¿ {≤¿ {ø¿ {…¿ {–¿ {‹¿ {˘¿ {˚¿ |D¿ |p¿ |w¿ |π¿ |Ò¿ |¯¿ }:¿ }Å¿ }à¿ }°¿ }®¿ }π¿ }˙¿ ~î¿ ~õ¿ ~´¿ ~≤¿ ~›¿ ~˘¿ ¿ @¿ t¿ ò¿ Â¿ Ä¿ Ä(¿ Ä5¿ Ä?¿ ÄF¿ ÄR¿ Ä~¿ ÄÄ¿ Ä—¿ Äÿ¿ ÄÒ¿ Ä¯¿ ÅB¿ Å{¿ ÅÇ¿ Åì¿ ÅÂ¿ ÅÚ¿ Ç:¿ Ç‘¿ Ç€¿ ÇÎ¿ ÇÚ¿ É¿ É9¿ ÉX¿ É~¿ É™¿ Éπ¿ É∆¿ É–¿ É◊¿ É·¿ Ñ¿ Ñ¿ ÑV¿ Ño¿ Ñv¿ Ñ¡¿ ÑÛ¿ Ö$¿ ÖX¿ Öê¿ Ö‚¿ ÖÈ¿ Ö˙¿ ÜJ¿ Ün¿ Üπ¿ Ü‹¿ á¢¿ àp¿ â?¿ â¡¿ ä_¿ äf¿ äv¿ ä}¿ äé¿ äª¿ ä◊¿ äˆ¿ ã!¿ ã[¿ ãà¿ ã¬¿ ã‚¿ å¿ å)¿ å8¿ åE¿ åO¿ åV¿ åb¿ åñ¿ åò¿ å‹¿ å„¿ ç#¿ çN¿ çó¿ çû¿ é¿ é%¿ é6¿ éà¿ é†¿ éÔ¿ è<¿ èM¿ è—¿ ê{¿ êÇ¿ êë¿ êº¿ ê÷¿ êÒ¿ ë¿ ëD¿ ëã¿ ë∏¿ ëÁ¿ ëÙ¿ ëˇ¿ í¿ í¿ í<¿ í>¿ í{¿ íÇ¿ íƒ¿ ì¿ ì1¿ ì8¿ ì¡¿ ì»¿ ìŸ¿ î+¿ îP¿ îû¿ îØ¿ ï\¿ ñ¿ ñ≤¿ ñπ¿ ñ»¿ ñœ¿ ñ˙¿ ó¿ ó5¿ ó\¿ óå¿ óº¿ ò	¿ òX¿ òg¿ òt¿ ò~¿ òÖ¿ òê¿ ò∫¿ òº¿ ô¿ ô¿ ô!¿ ô(¿ ô¢¿ ô©¿ ô∫¿ ö¿ ö¿ öh¿ öy¿ ö˝¿ õß¿ õÆ¿ õΩ¿ õƒ¿ õÔ¿ ú¿ ú*¿ úQ¿ úr¿ úÅ¿ úé¿ úò¿ úü¿ ú™¿ ú»¿ ú ¿ ù¿ ù7¿ ù>¿ ùW¿ ù^¿ ùß¿ ùº¿ ù√¿ ù‘¿ û"¿ ûE¿ ûï¿ û¿¿ ü¿ ü€¿ ü‚¿ üÚ¿ †¿ †;¿ †Z¿ †Ä¿ †°¿ †∞¿ †Ω¿ †«¿ †Œ¿ †Ÿ¿ †˘¿ †˚¿ °I¿ °P¿ °i¿ °p¿ °∫¿ °Û¿ °˙¿ ¢K¿ ¢ô¿ ¢‡¿ ¢Á¿ ¢¯¿ £H¿ £ê¿ £ﬂ¿ §1¿ §B¿ §ë¿ §∂¿ •E¿ •L¿ •[¿ •b¿ •ç¿ •©¿ •»¿ •Û¿ ¶"¿ ¶F¿ ¶y¿ ¶£¿ ¶÷¿ ¶Â¿ ¶Ú¿ ¶¸¿ ß¿ ß¿ ß8¿ ß:¿ ßä¿ ßë¿ ß™¿ ß±¿ ®4¿ ®;¿ ®L¿ ®û¿ ®√¿ ©p¿ ™¿ ™∆¿ ™Õ¿ ™‹¿ ™„¿ ´¿ ´*¿ ´I¿ ´p¿ ´ï¿ ´§¿ ´±¿ ´ª¿ ´¬¿ ´Õ¿ ´Ô¿ ´Ò¿ ¨.¿ ¨5¿ ¨Ö¿ ¨ÿ¿ ≠¿ ≠¿ ≠%¿ ≠,¿ ≠v¿ ≠Ø¿ ≠∂¿ ≠«¿ Æ¿ Æ7¿ Æ{¿ ÆÕ¿ Æ⁄¿ ØÄ¿ Øá¿ Øñ¿ Øù¿ Ø…¿ ØÂ¿ ∞¿ ∞+¿ ∞Z¿ ∞i¿ ∞v¿ ∞Ä¿ ∞á¿ ∞í¿ ∞∑¿ ∞π¿ ∞Û¿ ∞˙¿ ±¿ ±¿ ±f¿ ±•¿ ±¨¿ ±¸¿ ≤A¿ ≤H¿ ≤î¿ ≤ƒ¿ ≤À¿ ≥¿ ≥N¿ ≥U¿ ≥f¿ ≥∑¿ ≥–¿ ¥"¿ ¥G¿ ¥í¿ ¥¿¿ µ¿ µ3¿ µª¿ µ¬¿ µ—¿ µ¸¿ ∂¿ ∂7¿ ∂_¿ ∂§¿ ∂Õ¿ ∂˚¿ ∑
¿ ∑¿ ∑!¿ ∑,¿ ∑P¿ ∑R¿ ∑ö¿ ∑°¿ ∑∫¿ ∑¡¿ ∏¿ ∏D¿ ∏K¿ ∏\¿ ∏£¿ ∏ı¿ π¿ πû¿ π•¿ π¥¿ πª¿ πÊ¿ ∫¿ ∫!¿ ∫H¿ ∫{¿ ∫ä¿ ∫ó¿ ∫°¿ ∫®¿ ∫≥¿ ∫‘¿ ∫÷¿ ª ¿ ª'¿ ªr¿ ª√¿ ªı¿ ª¸¿ º¿ º¿ ºd¿ ºÉ¿ ºä¿ ºõ¿ ºÁ¿ Ω¿ Ω`¿ Ωà¿ æb¿ æi¿ æp¿ æÄ¿ æ´¿ æ«¿ æÊ¿ ø¿ ø5¿ øD¿ øQ¿ ø[¿ øb¿ øm¿ øê¿ øí¿ ø„¿ ø˝¿ ¿¿ ¿0¿ ¿7¿ ¿}¿ ¿«¿ ¿ˇ¿ ¡¿ ¡¿ ¡c¿ ¡ã¿ ¡›¿ ¡˛¿ ¬O¿ ¬ó¿ √3¿ √:¿ √J¿ √u¿ √ë¿ √∞¿ √÷¿ ƒ¿ ƒ ¿ ƒ-¿ ƒ7¿ ƒ>¿ ƒI¿ ƒy¿ ƒ{¿ ƒÃ¿ ƒË¿ ƒÔ¿ ≈0¿ ≈~¿ ≈™¿ ≈‹¿ ∆¿ ∆Z¿ ∆¨¿ ∆”¿ ∆⁄¿ ∆Î¿ «:¿ «]¿ «Ø¿ «“¿ »$¿ »J¿ »ô¿ »¡¿ …U¿   ¿  ⁄¿ Àç¿ ÃG¿ ÃÌ¿ ÃÙ¿ Õ¿ Õ
¿ Õ5¿ ÕQ¿ Õp¿ Õõ¿ Õ’¿ Õˆ¿ Œ¿ Œ>¿ Œe¿ Œä¿ ŒÆ¿ Œ√¿ Œ˚¿ œ%¿ œK¿ œn¿ œí¿ œ∏¿ œ«¿ œ‘¿ œﬁ¿ œÂ¿ œ¿ –$¿ –&¿ –u¿ –É¿ –ä¿ –õ¿ –Ï¿ — ¿ —O¿ —z¿ —√¿ —Â¿ “1¿ “P¿ “Ó¿ “ı¿ ”¿ ”¿ ”A¿ ”]¿ ”|¿ ”¨¿ ”‡¿ ‘¿ ‘E¿ ‘b¿ ‘ï¿ ‘»¿ ‘Ï¿ ’!¿ ’0¿ ’=¿ ’G¿ ’O¿ ’V¿ ’ä¿ ’∑¿ ’Ò¿ ÷¿ ÷6¿ ÷@¿ ÷H¿ ÷O¿ ÷{¿ ÷µ¿ ÷ˆ¿ ◊¿ ◊C¿ ◊Ä¿ ◊ú¿ ◊º¿ ◊‹¿ ÿ¿ ÿ&¿ ÿE¿ ÿL¿ ÿc¿ ÿ°¿ ÿŸ¿ ÿ‡¿ Ÿ¿ Ÿ¿ Ÿ#¿ Ÿ.¿ Ÿb¿ Ÿd¿ Ÿ≥¿ ŸÃ¿ Ÿ”¿ ⁄¿ ⁄A¿ ⁄t¿ ⁄õ¿ ⁄”¿ €¿ €$¿ €5¿ €Ñ¿ €ï¿ €Ê¿ €˙¿ ‹C¿ ‹v¿ ‹ƒ¿ ‹ı¿ ›¿¿ ﬁd¿ ﬂE¿ ﬂÂ¿ ‡∞¿ ·@¿ ·‹¿ ‚•¿ ‚¨¿ ‚ª¿ ‚¬¿ ‚Ì¿ „	¿ „(¿ „P¿ „Ñ¿ „ß¿ „–¿ „˝¿ ‰O¿ ‰s¿ ‰ø¿ ‰Œ¿ ‰€¿ ‰Â¿ ‰Ï¿ ‰˜¿ Â%¿ Â'¿ Âe¿ Âá¿ Âé¿ Âß¿ ÂÆ¿ ÂÛ¿ Ê1¿ Êk¿ Êr¿ ÊÉ¿ ÊÕ¿ Êﬁ¿ Á°¿ Ë)¿ Ë€¿ Ë‚¿ ËÒ¿ Ë¯¿ È$¿ ÈB¿ È^¿ È~¿ Èß¿ È—¿ Í	¿ ÍA¿ Íy¿ Í∞¿ Í¬¿ Í”¿ Í‚¿ ÍÔ¿ Í˘¿ Î ¿ Î¿ Î3¿ Î5¿ ÎÇ¿ Î°¿ ÎÊ¿ Ï¿ Ïd¿ Ïk¿ ÏÑ¿ Ïã¿ Ï’¿ Ì¿ Ì¿ Ì&¿ Ìo¿ Ì¡¿ ÌŒ¿ Óë¿ Ô¿ ÔÀ¿ Ô“¿ ÔŸ¿ ÔÈ¿ Ô¿ ¿ :¿ V¿ v¿ †¿ ”¿ Ò¿ Ò4¿ ÒV¿ ÒÄ¿ Òí¿ Ò£¿ Ò≤¿ Òø¿ Ò…¿ Ò–¿ Ò€¿ Ú¿ Ú	¿ ÚH¿ ÚO¿ Úh¿ Úo¿ Úπ¿ ÚÚ¿ Ú˘¿ Û
¿ ÛZ¿ Û©¿ Û…¿ Ù¿ Ù(¿ Ù‡¿ ÙÁ¿ Ùˆ¿ Ù˝¿ ı(¿ ıD¿ ıc¿ ıã¿ ıΩ¿ ıÈ¿ ˆ¿ ˆT¿ ˆz¿ ˆ«¿ ˆı¿ ˜¿ ˜¿ ˜#¿ ˜-¿ ˜4¿ ˜?¿ ˜i¿ ˜k¿ ˜†¿ ˜ß¿ ˜Ù¿ ¯¿ ¯¿ ¯T¿ ¯|¿ ¯É¿ ¯î¿ ¯Ê¿ ˘¿ ˘W¿ ˘p¿ ˘¡¿ ˘⁄¿ ˙,¿ ˙S¿ ˙°¿ ˙≥¿ ˚u¿ ¸6¿ ¸=¿ ¸L¿ ¸S¿ ¸~¿ ¸ö¿ ¸π¿ ¸‡¿ ˝$¿ ˝3¿ ˝@¿ ˝J¿ ˝Q¿ ˝\¿ ˝Ç¿ ˝Ñ¿ ˝∑¿ ˝æ¿ ˛¿ ˛W¿ ˛~¿ ˛Ö¿ ˛‘¿ ˇ"¿ ˇs¿ ˇâ¿ ˇê¿ ˇ©¿ ˇ∞¿ ˇ¡¿ ¿  ¿ n¿ {¿ ›¿ ‰¿ Î¿ Ú¿¿¿3¿O¿n¿ï¿«¿÷¿„¿Ì¿Ù¿ˇ¿¿¿U¿\¿§¿´¿ƒ¿À¿‹¿-¿M¿ò¿©¿Ú¿¿P¿}¿œ¿Î¿¡¿k¿r¿Å¿à¿≥¿œ¿Ó¿¿Z¿i¿u¿¿Ü¿ë¿π¿ª¿ ¿¿T¿ê¿À¿	¿	U¿	v¿	ø¿	›¿	‰¿
.¿
?¿
c¿
j¿
{¿
Õ¿
Í¿;¿ç¿≤¿˛¿¿h¿Å¿D¿$¿¿	¿¿¿J¿f¿Ö¿¨¿Á¿$¿5¿D¿Q¿[¿b¿m¿ö¿ú¿›¿‰¿2¿u¿|¿ç¿›¿ı¿G¿X¿™¿º¿¿-¿x¿â¿€¿˜¿∞¿é¿e¿¿⁄¿·¿¿˜¿¿.¿U¿à¿∑¿Ù¿2¿C¿R¿_¿i¿p¿{¿†¿¢¿È¿¿9¿R¿õ¿¢¿≥¿ˇ¿'¿y¿ä¿’¿Ê¿8¿T¿¿¿¿#¿;¿Z¿Å¿¿¿Ô¿,¿j¿{¿ä¿ó¿°¿®¿≥¿‰¿Ê¿¿%¿i¿Ü¿ç¿û¿Ó¿ ¿ `¿ q¿ √¿ ’¿!&¿!F¿!ë¿!¢¿!Ú¿"¿"”¿"⁄¿"È¿"¿#¿#'¿#U¿#õ¿# ¿$	¿$¿$)¿$6¿$@¿$G¿$R¿$ë¿$ì¿$ﬂ¿%¿%	¿%N¿%†¿%π¿%¿¿%Ÿ¿%‡¿%Ò¿&C¿&X¿&ß¿&˜¿'¿'^¿'ô¿'Í¿(¿(S¿(£¿(∏¿)
¿)¿)i¿)é¿*Z¿*Ù¿+Ø¿,â¿-5¿-Â¿.t¿/!¿/⁄¿0l¿0s¿0z¿0â¿0ê¿0º¿0ÿ¿0˜¿1¿1R¿1å¿1∏¿1‹¿2¿29¿2l¿2}¿2å¿2ô¿2£¿2™¿2ﬂ¿3¿3/¿39¿3B¿3I¿3w¿3≥¿3€¿4¿4?¿4[¿4{¿4õ¿4∫¿4◊¿4Â¿4Ï¿5¿5!¿5(¿53¿5\¿5^¿5¶¿5≠¿5Ô¿63¿6:¿6u¿6|¿6ç¿6‹¿6Ï¿7>¿7]¿8!¿8∞¿9ë¿:Z¿:Ó¿;Ö¿;å¿;ú¿;…¿;Â¿<¿<+¿<\¿<k¿<x¿<Ç¿<â¿<∂¿<Ò¿=¿=<¿={¿=™¿=›¿=¸¿>¿>¿>'¿>.¿>:¿>e¿>g¿>∑¿>ﬂ¿>Ê¿?7¿?Ö¿?’¿@¿@¿@-¿@4¿@E¿@î¿@‰¿@Î¿@Ú¿A¿A.¿AH¿Ae¿Aå¿AØ¿Aæ¿AÀ¿A’¿AÛ¿Aı¿B@¿BS¿BZ¿B§¿B›¿B‰¿B˝¿C¿C¿Cg¿C≤¿C„¿D5¿DB¿DI¿DY¿DÖ¿Dü¿D∫¿Dﬂ¿E ¿E-¿EZ¿E°¿E≠¿E∏¿E¡¿EÎ¿EÌ¿F5¿F\¿Fc¿F|¿FÉ¿Fî¿F‰¿G4¿GE¿Gî¿Gø¿G∆¿G÷¿H¿H¿H:¿HW¿H¿Hè¿HÆ¿H·¿I¿I^¿Ió¿Iª¿Iˇ¿JE¿J|¿Jü¿JÔ¿K+¿KE¿K]¿Ky¿K†¿K÷¿K˙¿L2¿LL¿Ld¿Ly¿Lé¿Lú¿L®¿L±¿L¿LÚ¿M:¿MP¿MW¿Mq¿Mx¿Mâ¿M÷¿MÈ¿N0¿NI¿NP¿Né¿N›¿O,¿O3¿OÑ¿Oø¿O∆¿O÷¿P¿P¿P9¿P`¿PÉ¿P®¿Pﬂ¿Q¿Q'¿Q_¿Qé¿Q∂¿Q∆¿Q‘¿Q‡¿QÈ¿R	¿R¿RE¿RL¿R]¿Rß¿Rº¿S	¿S!¿S(¿S8¿Sd¿S~¿Sõ¿S¬¿SÂ¿T
¿TA¿Tg¿Tâ¿T¡¿T¿U¿U(¿U6¿UB¿UK¿U}¿U¿UÀ¿U“¿V!¿V:¿VA¿VQ¿V}¿Vó¿V¥¿V›¿W¿W)¿Wb¿Wä¿WÆ¿WË¿X¿XC¿XU¿Xô¿X÷¿Y¿Y)¿Y5¿Y>¿Yr¿Yt¿Yº¿Y√¿Z¿ZX¿Z_¿Zo¿Zõ¿Zµ¿Z“¿Z˚¿[ ¿[G¿[Ä¿[®¿[Ã¿\¿\7¿\a¿\s¿\π¿\ˆ¿]B¿]é¿]‘¿^¿^'¿^3¿^<¿^r¿^t¿^¿¿^«¿_¿_A¿_H¿_X¿_Ñ¿_û¿_ª¿_‰¿`	¿`0¿`i¿`ë¿`µ¿`Ô¿a ¿aJ¿a\¿aú¿aŸ¿b%¿bq¿b±¿bƒ¿b–¿bŸ¿c	¿c¿cZ¿cr¿cy¿c√¿d
¿dX¿dè¿dñ¿dø¿e¿eV¿e†¿e¡¿e»¿eÔ¿f<¿fÑ¿fã¿f≠¿f¯¿gB¿gw¿g~¿g ¿h¿hN¿hU¿hn¿hu¿hÜ¿h÷¿h¿i;¿iã¿iù¿iÈ¿j¿jd¿jÑ¿kE¿k‡¿lä¿mS¿mZ¿ma¿m™¿mø¿m∆¿m’¿m‹¿n
¿n¿nA¿nS¿nh¿nû¿n„¿o'¿oD¿oN¿oU¿og¿oî¿o≤¿oŒ¿oÓ¿p¿pI¿pZ¿pi¿pv¿pÄ¿pà¿pì¿pº¿pæ¿q¿q¿q*¿q1¿qÄ¿qá¿qÃ¿r¿r¿r+¿rz¿r¢¿r©¿r∏¿rø¿rÎ¿s¿s&¿sS¿sb¿so¿sy¿sÄ¿så¿s≤¿s¥¿sˇ¿t¿tW¿tö¿t°¿t≤¿t˛¿u+¿u{¿uå¿u◊¿uÌ¿uÙ¿v¿v
¿v#¿vB¿vi¿v∫¿vˆ¿w5¿wF¿wU¿wb¿wl¿ws¿w~¿w¡¿w√¿x¿x¿xY¿x®¿xØ¿x¿¿y¿yB¿yë¿y®¿yÛ¿z	¿z¿z¿z&¿z?¿z^¿zÖ¿zŒ¿{¿{Y¿{ò¿{œ¿|
¿|¿|*¿|7¿|A¿|H¿|S¿|ò¿|ö¿|„¿|Í¿}:¿}p¿}ñ¿}ù¿}Æ¿}¯¿~,¿~{¿~í¿~‚¿~Û¿~˙¿	¿¿)¿H¿o¿º¿¯¿Ä7¿Äk¿Ä†¿Ä±¿Ä¿¿ÄÕ¿Ä◊¿Äﬁ¿ÄÈ¿Å(¿Å*¿Å{¿Åà¿Åè¿ÅŸ¿Å¸¿Ç¿ÇF¿Çó¿Ç¶¿Ç˜¿É0¿ÉÇ¿É∂¿ÉΩ¿Éƒ¿É„¿ÉÍ¿É˚¿ÑE¿ÑÖ¿ÑŒ¿Ö¿Öπ¿Ö¿¿ÖŒ¿Ö’¿Ü¿Ü/¿Üt¿Ü√¿Ü ¿Ü’¿á¿áB¿áÖ¿áÆ¿á“¿à¿à9¿àb¿àÜ¿àπ¿àÏ¿â*¿âO¿â°¿â¶¿â®¿â¯¿ä¿ä!¿än¿äu¿äΩ¿ã¿ã,¿ã3¿ãZ¿ãa¿ãr¿ãø¿ã¸¿å?¿å^¿ç¿ç¿ç$¿ç3¿ç:¿çm¿ç†¿çÏ¿çÛ¿ç˛¿éO¿éç¿éí¿éî¿éÊ¿è(¿è/¿è{¿èÇ¿è”¿èÔ¿ê9¿ê¿êÜ¿êü¿ê¶¿ê∑¿ë¿ëA¿ëã¿ë£¿ëÌ¿í-¿ív¿íµ¿íº¿íÀ¿í“¿ì¿ì=¿ì¿ì√¿ìÏ¿î¿î$¿îQ¿îÇ¿î±¿îœ¿îÌ¿ï6¿ï~¿ïÖ¿ïê¿ï⁄¿ñ¿ña¿ñ≤¿ñ¥¿ñ‡¿ó¿ó¿ó!¿ó.¿ó`¿óô¿óõ¿ó®¿óÓ¿ò¿òc¿ò¥¿ò…¿ô¿ô.¿ô~¿ôé¿ô›¿ôÚ¿öB¿öa¿ö´¿ö≤¿ö¬¿õ¿õH¿õÅ¿õµ¿õÚ¿ú¿úS¿úí¿úß¿ú¯¿ù¿ù^¿ùõ¿ù–¿ùˇ¿û8¿ûg¿û®¿ûÏ¿ü/¿üz¿ü¡¿ü÷¿†(¿†[¿†ê¿†√¿†˙¿°B¿°ä¿°“¿¢"¿¢j¿¢®¿¢”¿£"¿£f¿£ç¿£ÿ¿§¿§V¿§£¿§ﬁ¿•¿•T¿•â¿•≈¿•¯¿¶8¿¶s¿¶æ¿¶Û¿ß*¿ße¿ß¶¿ß€¿®¿®S¿®ó¿®Õ¿©¿©T¿©d¿©¥¿©…¿™¿™^¿™Ö¿™Õ¿™ˆ¿´;¿´^¿´c¿´f¿´h¿´ö¿´≈¿´ˆ¿¨¿¨1¿¨~¿¨œ¿¨Ò¿¨Û¿≠8¿≠Ü¿≠à¿≠æ¿≠Á¿Æ¿ÆB¿ÆZ¿ÆÇ¿Æ∫¿ÆÊ¿Ø3¿Ø|¿Øò¿Øö¿ØÊ¿Ø˚¿∞/¿∞1¿∞r¿∞ü¿∞°¿∞Á¿∞ˇ¿±¿±I¿±Ä¿±Ç¿±¡¿±Ë¿±Í¿≤(¿≤K¿≤M¿≤î¿≤“¿≤‘¿≥¿≥^¿≥`¿≥ì¿≥¥¿≥∂¿¥¿¥L¿¥q¿¥s¿¥±¿µ¿µW¿µÉ¿µ©¿µÔ¿∂¿∂¿∂e¿∂±¿∂∆¿∂ﬂ¿∂·¿∑-¿∑P¿∑s¿∑u¿∑ä¿∑¶¿∑¿¿∑„¿∏¿∏¿∏a¿∏á¿∏Æ¿∏∞¿∏˝¿π¿π¿πc¿πÜ¿πà¿πƒ¿πÔ¿πÒ¿∫:¿∫Y¿∫[¿∫è¿∫”¿∫’¿ª¿ªA¿ªC¿ªê¿ª—¿ªÚ¿ªÙ¿ºA¿ºW¿ºÅ¿ºÉ¿º‘¿Ω!¿ΩX¿Ωw¿Ωy¿Ω ¿æ¿æN¿æm¿æo¿æº¿æÈ¿æÎ¿ø<¿øf¿øñ¿øò¿ø‚¿¿)¿¿T¿¿V¿¿†¿¿È¿¡4¿¡n¿¡ï¿¡ó¿¡§¿¡∫¿¡ÿ¿¡Ú¿¬¿¬0¿¬n¿¬º¿√
¿√D¿√}¿√´¿√Ê¿ƒ¿ƒR¿ƒï¿ƒ”¿≈¿≈F¿≈â¿≈⁄¿∆+¿∆X¿∆é¿∆µ¿∆’¿∆˝¿«9¿«[¿«Ö¿«å¿«Ø¿«¿»¿»P¿»ü¿»‘¿»€¿»›¿…(¿…d¿…k¿…m¿…π¿…‰¿  ¿ F¿ z¿ ¥¿ ª¿ Ω¿ ·¿À+¿Àa¿Àè¿Àë¿À±¿À…¿ÀŒ¿À–¿À›¿Àˇ¿Ã?¿Ãê¿ÃÆ¿Ã‚¿Õ1¿ÕG¿Õ^¿ÕÆ¿Õƒ¿Œ¿Œy¿Œ¥¿ŒÁ¿ŒÈ¿œ¿œ ¿œa¿œó¿œ≈¿œÈ¿œÓ¿œ¿œ˝¿–-¿–c¿–¿– ¿—¿—[¿—É¿—»¿—Î¿“(¿“H¿“ç¿“À¿“€¿”¿”a¿”´¿”‹¿‘¿‘¿‘S¿‘Ñ¿‘¶¿‘Ù¿‘˚¿‘˝¿’3¿’Y¿’ä¿’∏¿’Î¿÷*¿÷u¿÷§¿÷—¿◊¿◊I¿◊ï¿◊æ¿◊Ô¿ÿ¿ÿF¿ÿà¿ÿ∞¿ÿÍ¿Ÿ*¿Ÿ7¿Ÿ9¿Ÿä¿Ÿ¥¿Ÿø¿Ÿ»¿Ÿœ¿Ÿ—¿⁄¿⁄P¿⁄o¿⁄ä¿⁄±¿⁄◊¿€"¿€J¿€U¿€\¿€^¿€î¿€∫¿‹
¿‹8¿‹~¿‹∆¿‹œ¿‹—¿› ¿›,¿›3¿›5¿›g¿›†¿›“¿ﬁ¿ﬁ,¿ﬁN¿ﬁt¿ﬁ°¿ﬁÒ¿ﬂ?¿ﬂ`¿ﬂi¿ﬂß¿ﬂÊ¿‡¿‡O¿‡o¿‡è¿‡ß¿‡ø¿‡∆¿‡»¿‡¸¿·.¿·z¿·Å¿·É¿·∫¿·Ï¿·Û¿·ı¿‚'¿‚L¿‚S¿‚U¿‚é¿‚ ¿„¿„V¿„Ö¿„≤¿„Ú¿‰¿‰P¿‰é¿‰ô¿‰õ¿‰Í¿Â¿Â¿Â"¿Â$¿Âo¿Â≠¿Â¥¿Â∂¿Âﬁ¿Ê¿Êg¿Êû¿Ê√¿Ê ¿ÊÃ¿Á¿Á¿Áe¿Á®¿Á™¿Á˜¿Ë7¿Ë@¿ËB¿Ëp¿Ë©¿Ë∞¿Ë≤¿Ë‚¿È!¿È>¿ÈÖ¿Èå¿Èé¿Èæ¿ÈÓ¿Í%¿Ím¿Íö¿Í¥¿ÍŒ¿Î¿Î,¿ÎU¿Îî¿Î‰¿Ï#¿Ïs¿Ï~¿Ïá¿Ïé¿Ïê¿Ï∏¿ÏË¿Ì¿ÌI¿ÌP¿ÌR¿Ìl¿Ìâ¿Ì ¿Ó ¿Ó.¿Ó0¿ÓW¿Ó\¿Ó^¿Ók¿Óì¿Óß¿Óﬁ¿Ó˘¿Ô@¿Ô{¿Ôí¿Ôµ¿ÔÚ¿
¿.¿0¿K¿ï¿≥¿Ò¿Ò¿Ò5¿ÒÅ¿Òô¿Ò«¿ÒÈ¿Ò˛¿Ú¿Ú1¿ÚV¿Úu¿ÚÄ¿ÚÇ¿ÚÕ¿ÚÒ¿Û¿ÛA¿Ûd¿Ûò¿Û–¿ÛÙ¿ÙC¿Ùk¿Ùt¿Ùv¿Ùó¿Ù≥¿Ùµ¿ÙÂ¿ÙÁ¿ı1¿ıo¿ıì¿ıú¿ıû¿ıƒ¿ıÁ¿ˆ5¿ˆ^¿ˆr¿ˆt¿ˆì¿ˆÆ¿ˆÀ¿ˆÍ¿˜6¿˜g¿˜ù¿˜Ã¿¯¿¯O¿¯[¿¯p¿¯ê¿¯ú¿¯¶¿¯Ø¿¯¥¿¯∂¿˘¿˘¿˘Q¿˘¿˘…¿˘Ô¿˙¿˙V¿˙Ç¿˙ª¿˙Û¿˚¿˚&¿˚-¿˚/¿˚S¿˚î¿˚ñ¿˚∏¿˚÷¿˚ı¿¸¿¸#¿¸Z¿¸ä¿¸ø¿¸ ¿¸Í¿¸ı¿˝+¿˝m¿˝©¿˝◊¿˛¿˛A¿˛ê¿˛’¿ˇ¿ˇ7¿ˇT¿ˇe¿ˇg¿ˇô¿ˇ»¿ ¿ ¿ ¿ U¿ Ç¿ ≠¿ Ù¿!¿#¿u¿±¿ÿ¿¿)¿\¿ë¿¬¿‹¿Î¿¯¿˙¿1¿a¿ñ¿°¿«¿Ó¿¿A¿L¿v¿≈¿¿9¿~¿Œ¿˚¿4¿j¿∫¿˛¿@¿ä¿¬¿Ô¿¿¿I¿Ñ¿´¿“¿	¿	7¿	9¿	|¿	º¿	Ù¿
1¿
3¿
É¿
 ¿
¿F¿S¿U¿å¿º¿Á¿¿-¿m¿ñ¿°¿ƒ¿˛¿¿
¿¿N¿ç¿∫¿¿(¿p¿ï¿œ¿¿@¿v¿®¿œ¿÷¿ÿ¿ˆ¿7¿Z¿o¿ä¿ ¿˘¿7¿M¿_¿j¿l¿¨¿µ¿∑¿—¿¿H¿Q¿_¿†¿Œ¿¿%¿i¿{¿Ü¿à¿ ¿”¿’¿Ô¿#¿i¿r¿y¿{¿õ¿‡¿‚¿0¿|¿Ã¿¿>¿`¿ê¿Ã¿Ì¿¿:¿l¿†¿‡¿¿1¿q¿è¿–¿“¿ ¿/¿l¿ü¿Ï¿6¿R¿p¿Ñ¿≤¿”¿¿X¿Z¿†¿Á¿¿O¿ü¿æ¿¿¿¿4¿}¿§¿Ô¿3¿5¿Ä¿ù¿ƒ¿¿K¿`¿k¿m¿ö¿™¿≥¿∫¿º¿ ¿ $¿ K¿ â¿ “¿ Á¿ Ú¿ Ù¿!!¿!1¿!:¿!A¿!C¿!í¿!œ¿"¿"¿"U¿"W¿"®¿"’¿"◊¿#)¿#8¿#u¿#ß¿#Ÿ¿#€¿$¿$?¿$p¿$ú¿$‹¿%¿%¿%T¿%î¿%ñ¿%√¿%‰¿&¿&I¿&m¿&≤¿&¥¿'¿'G¿'u¿'û¿'⁄¿((¿(c¿(Ü¿(õ¿(’¿(¸¿)¿)¿)¿)J¿)S¿)U¿)¶¿)Õ¿*¿*6¿*o¿*ª¿*˘¿+¿+-¿+t¿+ù¿+±¿+∫¿+º¿+‰¿+Î¿+Ì¿,>¿,n¿,ø¿,‡¿-¿-U¿-\¿-^¿-¨¿-º¿-¸¿.¿.d¿.~¿.Ä¿.º¿.Î¿/¿/_¿/†¿/≥¿/Â¿0 ¿0¿0D¿0t¿0é¿0ª¿0Ω¿1¿1=¿1v¿1≈¿1‡¿2/¿2¿2√¿3¿3A¿3h¿3û¿3—¿3”¿4¿4P¿4W¿4Y¿4•¿4Œ¿5¿5¿5a¿5ä¿5œ¿5—¿6¿6G¿6á¿6”¿7¿7`¿7p¿7º¿7¸¿8M¿8V¿8]¿8_¿8ã¿8ç¿8 ¿9¿9B¿9¿9™¿9Â¿:¿:¿:S¿:v¿:∏¿:¡¿:√¿;¿;W¿;•¿;Ò¿<A¿<ë¿<ﬂ¿<ˇ¿=*¿=a¿=û¿=À¿=Õ¿>¿>i¿>ì¿>Õ¿>ˆ¿?2¿?t¿?¿?Å¿?¨¿?µ¿?∑¿@¿@K¿@ó¿@„¿A1¿A¿AÀ¿AÎ¿B¿BM¿Bä¿B∑¿Bπ¿C¿CU¿C¶¿C¯¿D:¿DE¿DG¿Dl¿Du¿Dw¿D…¿E¿E)¿EQ¿Et¿E®¿Eﬁ¿F¿FN¿Fo¿Fò¿F‘¿G"¿G]¿GÄ¿Gï¿G”¿G˙¿H¿H¿H¿HH¿Hr¿H{¿H}¿H»¿I¿I<¿Is¿I†¿I¢¿IÓ¿J>¿Jh¿J¢¿JÀ¿K¿KI¿KT¿KV¿KÅ¿Kä¿Kå¿K◊¿L ¿LK¿LÇ¿LØ¿L±¿L˝¿MM¿Mw¿M±¿M⁄¿N¿NX¿Nc¿Ne¿Nê¿Nô¿Nõ¿N€¿O¿OT¿Oç¿O∑¿OÔ¿P<¿PE¿PG¿Pn¿PÖ¿P¢¿P√¿PÔ¿Q¿Q6¿Q{¿Q√¿QÊ¿R+¿Rj¿Rü¿R¬¿S¿SF¿S}¿S¿S∑¿S˘¿T:¿Tb¿T§¿TÒ¿U$¿U1¿U3¿UÅ¿U¡¿U‰¿V¿VQ¿VÄ¿Vø¿V˛¿W(¿Ww¿W¢¿W∏¿W ¿X¿XS¿Xï¿X‚¿Y¿Yg¿Yö¿YŒ¿YÏ¿Z¿Zj¿ZØ¿ZÊ¿ZË¿[:¿[~¿[•¿[’¿\¿\M¿\ê¿\”¿]¿]¿]l¿]ú¿]∂¿]≈¿]«¿^¿^¿^¿^#¿^%¿^q¿^x¿^z¿^ ¿^È¿_¿_I¿_ó¿_ﬂ¿`¿`B¿`z¿`°¿`€¿a¿a$¿a&¿aO¿az¿aÅ¿aÉ¿a”¿aÚ¿b¿bR¿b†¿bË¿c#¿cK¿cÉ¿c™¿c‰¿d$¿d-¿d/¿dX¿dÉ¿dä¿då¿dπ¿e¿eP¿eú¿eΩ¿eÂ¿f¿f?¿fä¿f’¿g#¿g5¿g]¿g°¿g¿¿gÁ¿h!¿hm¿h¶¿hÛ¿i¿i(¿iQ¿iX¿iZ¿iñ¿iº¿iÂ¿j¿jE¿jl¿j¶¿jÊ¿jÔ¿jÒ¿k¿kE¿kL¿kN¿kÖ¿k∞¿kŸ¿l¿l9¿l`¿lö¿l⁄¿l„¿lÂ¿m¿m9¿m@¿mB¿mT¿mY¿m[¿mh¿m|¿m®¿mı¿n ¿nG¿nN¿nP¿nÉ¿nµ¿n„¿nÍ¿nÏ¿o.¿ot¿o∏¿o∫¿oﬂ¿o·¿p¿pM¿pT¿pV¿p|¿pº¿p·¿q¿q	¿q¿q'¿q>¿qE¿qG¿qñ¿q◊¿q˚¿r¿r,¿r1¿r3¿r^¿rß¿rœ¿s¿s6¿s|¿sú¿sË¿t¿tT¿ty¿t ¿tÈ¿u4¿u[¿uö¿uø¿uÂ¿v7¿vf¿vä¿v⁄¿vı¿w<¿w`¿wú¿w÷¿x¿xK¿xi¿x¥¿x”¿y¿yj¿y∑¿yœ¿z¿z/¿zW¿z¢¿z∫¿z˚¿{¿{B¿{á¿{∫¿|C¿|r¿}¿}5¿}ø¿}Ó¿~å¿~ª¿c¿í¿Ä3¿Äb¿Å-¿Å\¿Ç%¿ÇT¿É¿É6¿É‹¿Ñ¿Ñ´¿Ñ∞¿Ñ≤¿Ñ”¿ÑË¿Ñ˜¿Ñ˛¿Ö ¿Ö&¿Ö+¿Ö-¿Öw¿Öü¿Öæ¿Ü¿Ü?¿Ü\¿Ün¿Üs¿Üu¿Ü¿¿ÜŸ¿Üı¿á:¿áh¿áã¿áê¿áí¿áÀ¿áÍ¿à¿à4¿àC¿àJ¿àu¿àª¿à¯¿âG¿âq¿â≤¿âÔ¿ä7¿äb¿ä°¿äÒ¿ã=¿ãF¿ãH¿ãà¿ã±¿ãÏ¿å
¿å&¿åD¿åd¿åí¿å–¿ç¿ç=¿çU¿çn¿çª¿ç›¿çÏ¿ç˜¿ç˘¿é
¿é¿é¿éK¿éM¿éó¿é“¿éı¿é¸¿é˛¿èH¿èê¿è§¿èπ¿èÛ¿è˛¿ê¿ê
¿ê¿ê/¿êD¿êS¿êZ¿ê\¿êo¿ê¨¿êπ¿ê¬¿ê«¿ê…¿êÒ¿ë¿ë0¿ëT¿ë†¿ë‹¿í¿í¿íN¿íP¿í†¿í≤¿í˙¿ì¿ì6¿ìL¿ìb¿ìg¿ìi¿ì≥¿ì€¿ìı¿ì˜¿î"¿î1¿î8¿î:¿îZ¿î©¿î´¿î¯¿ï¿ïZ¿ïâ¿ïª¿ïÁ¿ñ ¿ñL¿ñv¿ñ≥¿ñµ¿ñ˚¿ó.¿ó^¿óà¿óä¿ó‹¿ò+¿òx¿òµ¿òﬂ¿ô¿ô^¿ôk¿ôm¿ô∫¿ô˛¿ö)¿öw¿ö√¿ö˚¿õ7¿õD¿õF¿õX¿õc¿õe¿õç¿õñ¿õ§¿õÒ¿ú2¿úa¿úî¿ú¡¿ú⁄¿ù&¿ùP¿ùç¿ùè¿ù’¿û¿û:¿ûh¿ûj¿ûº¿ü¿üX¿üï¿üø¿ü¯¿†?¿†L¿†N¿†õ¿†ﬂ¿°
¿°X¿°§¿°‹¿¢¿¢%¿¢'¿¢9¿¢D¿¢F¿¢n¿¢w¿¢~¿¢Ä¿¢∞¿¢Â¿£)¿£q¿£¢¿£ø¿£Â¿§¿§\¿§ö¿§Á¿§È¿•"¿•D¿•O¿•Q¿•Ö¿•û¿•Ã¿•Ú¿¶¿¶¿¶¿¶X¿¶•¿¶ß¿¶·¿ß¿ß¿ß¿ßD¿ß]¿ßÇ¿ß®¿ß∑¿ß¬¿ßÀ¿ß“¿ß◊¿ßŸ¿®¿®E¿®q¿®ª¿®‚¿®Ò¿®¯¿©¿©e¿©§¿©µ¿©ÿ¿™¿™$¿™&¿™_¿™y¿™†¿™Œ¿´¿´¿´¿´I¿´^¿´ë¿´ú¿´…¿´Ê¿¨¿¨<¿¨M¿¨V¿¨X¿¨m¿¨ö¿¨æ¿≠¿≠P¿≠ì¿≠æ¿≠Ò¿Æ¿Æ&¿Æ(¿ÆM¿Æt¿Æ´¿ÆÈ¿Ø6¿Ø8¿Øá¿Ø∆¿∞¿∞,¿∞9¿∞F¿∞u¿∞±¿∞Û¿±¿±U¿±ï¿±¢¿±§¿±ı¿≤¿≤_¿≤à¿≤≤¿≤¡¿≤–¿≥
¿≥4¿≥v¿≥Å¿≥å¿≥ì¿≥ò¿≥ö¿≥π¿¥¿¥2¿¥A¿¥H¿¥J¿¥ì¿¥ƒ¿¥”¿¥⁄¿¥‹¿¥Ú¿µ¿µ ¿µd¿µö¿µØ¿µº¿µæ¿µÂ¿∂¿∂'¿∂]¿∂è¿∂∫¿∂ﬂ¿∑¿∑P¿∑|¿∑ã¿∑ù¿∑®¿∑»¿∑”¿∏¿∏>¿∏r¿∏£¿∏‰¿π¿π`¿π≠¿πÍ¿∫#¿∫p¿∫†¿∫÷¿∫Î¿∫¯¿∫˙¿ª!¿ªJ¿ªc¿ªô¿ªƒ¿ª”¿ªÂ¿ª¿º¿º=¿ºh¿ºÜ¿º•¿º»¿º¿º˚¿Ω?¿Ωe¿Ωï¿ΩÁ¿æ¿æA¿æÄ¿æ£¿æÙ¿ø ¿ø/¿øe¿øz¿øá¿øâ¿ø∞¿øŸ¿øÚ¿¿(¿¿S¿¿b¿¿t¿¿¿¿Ü¿¿ã¿¿ç¿¿¥¿¿˛¿¡3¿¡i¿¡z¿¡ø¿¡œ¿¬¿¬?¿¬Y¿¬[¿¬©¿¬‡¿¬Ú¿¬Ù¿√$¿√F¿√ê¿√¥¿ƒ¿ƒ¿ƒ¿ƒ¿ƒ¿ƒh¿ƒå¿ƒ»¿ƒÒ¿≈ ¿≈¿≈	¿≈M¿≈o¿≈Ã¿∆)¿∆Ü¿∆√¿«¿«¿«¿«F¿«ì¿«™¿«Œ¿«˚¿»¿»¿»¿»¿»1¿»]¿»h¿»Ü¿»∏¿»ı¿… ¿…¿…:¿…E¿…}¿…º¿…˙¿ 4¿ 6¿ g¿ ≥¿ ˆ¿À¿À\¿Àå¿À”¿Ã¿Ãd¿Ãï¿Ã⁄¿Ã˘¿ÕC¿Õï¿Õ§¿Õ¶¿Õÿ¿Œ¿Œ7¿ŒY¿Œz¿Œ†¿Œ‘¿œ¿œ&¿œ(¿œa¿œê¿œù¿œü¿œÌ¿œ¯¿–¿–5¿–@¿–s¿–•¿–„¿—¿—J¿—`¿—q¿—Ä¿—ç¿—è¿—¡¿—√¿—ˆ¿“(¿“u¿“ø¿“˙¿”¿”!¿”0¿”=¿”ã¿”ñ¿”¶¿”ÿ¿‘¿‘A¿‘L¿‘~¿‘ì¿‘†¿‘¢¿‘Â¿’¿’B¿’]¿’Ç¿’—¿÷¿÷Q¿÷z¿÷ã¿÷ú¿÷©¿÷¥¿÷ƒ¿÷À¿÷–¿÷“¿◊¿◊>¿◊ã¿◊ÿ¿◊Ó¿ÿ@¿ÿä¿ÿ≈¿ÿ¿Ÿ¿ŸO¿Ÿu¿ŸÑ¿Ÿã¿Ÿç¿Ÿ›¿⁄/¿⁄u¿⁄ï¿⁄⁄¿€'¿€m¿€†¿€¿‹%¿‹c¿‹ß¿‹Î¿›/¿›`¿›ï¿›Õ¿ﬁ¿ﬁ`¿ﬁç¿ﬁ∏¿ﬁ‡¿ﬂ¿ﬂ8¿ﬂy¿ﬂè¿ﬂπ¿ﬂ˛¿‡=¿‡V¿‡~¿‡ã¿‡ñ¿‡¶¿‡À¿·¿·5¿·x¿·ç¿·ò¿·ö¿·›¿·Ê¿·Ë¿‚!¿‚^¿‚Ö¿‚…¿„¿„8¿„L¿„Y¿„d¿„f¿„Ü¿„õ¿„¶¿„®¿„«¿‰
¿‰ ¿‰j¿‰ê¿‰‡¿‰‚¿Â¿ÂR¿Âw¿Âö¿ÂŒ¿Â¯¿Ê¿ÊO¿ÊQ¿Êë¿Ê∂¿ÊŸ¿Á¿Á7¿ÁB¿ÁD¿Áñ¿Áò¿Á—¿Ë¿Ëh¿ËÆ¿Ë›¿È*¿ÈS¿Èb¿È∞¿È”¿È‡¿ÈÎ¿ÈÌ¿Í¿ÍP¿Íá¿ÍΩ¿ÍÊ¿Î5¿ÎQ¿Î\¿Îe¿Îl¿În¿Îæ¿Î˙¿Ï ¿Ï)¿ÏA¿ÏF¿ÏH¿Ïx¿Ï£¿Ï„¿Ì	¿Ì¿Ì¿Ì!¿ÌX¿Ìë¿Ìì¿Ì∑¿Ì˛¿Ó ¿ÓC¿Óu¿Óù¿ÓÎ¿Ô<¿Ô_¿Ô£¿Ô“¿Ô‡¿ÔÈ¿Ô¿ÔÚ¿%¿Z¿\¿Ä¿«¿…¿Ò¿Ò>¿Òf¿Ò¥¿Ú¿Ú(¿Úl¿Úó¿Ú•¿ÚÆ¿Úµ¿Ú∫¿Úº¿ÚÂ¿Û¿Û\¿Ûã¿Û¡¿Û ¿ÛÃ¿ÛÙ¿Û˚¿Ù ¿Ù¿ÙQ¿Ù¢¿Ùœ¿ı¿ı;¿ıà¿ıü¿ıÁ¿ıÙ¿ıˇ¿ˆ¿ˆ¿ˆ¿ˆF¿ˆÜ¿ˆï¿ˆú¿ˆû¿ˆÿ¿ˆ⁄¿˜"¿˜[¿˜|¿˜«¿˜‹¿˜¯¿¯¿¯¿¯¿¯¿¯;¿¯ã¿¯ö¿¯°¿¯£¿¯∂¿˘¿˘¿˘¿˘¿˘H¿˘ò¿˘Ø¿˘ˇ¿˙-¿˙w¿˙¥¿˚¿˚L¿˚v¿˚≠¿˚¥¿˚∂¿˚˙¿¸¿¸g¿¸Ö¿¸–¿¸Ú¿˝¿˝S¿˝m¿˝á¿˝©¿˝Ã¿˝Ì¿˛¿˛G¿˛v¿˛Ü¿˛¶¿˛Ø¿˛÷¿ˇ¿ˇA¿ˇY¿ˇo¿ˇÜ¿ˇõ¿ˇ≈¿ˇÒ¿ ¿ ,¿ F¿ á¿ »¿ Ï¿ ˜¿¿1¿R¿b¿é¿º¿Î¿˚¿,¿F¿^¿w¿é¿∫¿Ë¿¿ ¿'¿,¿.¿}¿∏¿‡¿¿Z¿j¿ò¿ÿ¿·¿„¿¿H¿O¿T¿V¿Å¿±¿·¿¿&¿/¿1¿Å¿ª¿	¿F¿T¿Ñ¿±¿ƒ¿Õ¿œ¿ˇ¿+¿2¿7¿9¿k¿ß¿Â¿	#¿	H¿	ã¿	’¿
 ¿
%¿
N¿
ù¿
÷¿ ¿'¿=¿S¿b¿o¿z¿É¿Ö¿∑¿Ò¿+¿d¿®¿“¿˙¿¿'¿)¿n¿æ¿Û¿
¿¿N¿Y¿b¿i¿n¿p¿ü¿‰¿¿0¿J¿d¿x¿¿Å¿≤¿˝¿¿¿#¿%¿7¿<¿>¿q¿≠¿Ó¿,¿L¿ó¿È¿¿.¿9¿;¿à¿æ¿…¿“¿‘¿¿¿¿¿C¿x¿†¿Ø¿∂¿∏¿’¿◊¿¿a¿c¿å¿õ¿¢¿§¿‰¿¿@¿ã¿Æ¿⁄¿)¿F¿Z¿à¿ë¿ò¿ö¿Ê¿¿¿L¿s¿u¿∫¿‡¿¿a¿í¿·¿¿`¿q¿É¿å¿é¿ü¿®¿™¿¯¿¿\¿ü¿€¿‰¿Ê¿˜¿ ¿¿A¿e¿g¿©¿¿Ú¿6¿|¿ù¿¢¿§¿…¿„¿¿Q¿e¿µ¿ˇ¿'¿M¿g¿n¿p¿é¿¶¿≠¿Ø¿Ò¿ˆ¿¯¿¿X¿r¿®¿≠¿Ø¿Ì¿ ¿ D¿ K¿ M¿ {¿ §¿ ´¿ ≠¿ ﬁ¿!
¿!¿!¿!a¿!f¿!h¿!ã¿!©¿!Ã¿!ﬂ¿!˝¿"¿"7¿"a¿"¿"é¿"ï¿"ó¿"∞¿"ı¿#:¿#m¿#¢¿#∞¿#–¿#Ê¿$¿$V¿$p¿$º¿$Ï¿%;¿%É¿%Æ¿%·¿&¿&¿&¿&N¿&{¿&Ü¿&à¿&∫¿&Á¿&Ú¿&Ù¿')¿'Y¿'d¿'f¿'à¿'”¿'Û¿'ı¿(B¿(K¿(M¿(ô¿(™¿(≥¿(µ¿(·¿)¿)H¿)á¿)±¿)◊¿*¿*F¿*u¿*õ¿*π¿*ƒ¿*∆¿*ˇ¿+¿+)¿+9¿+Ö¿+£¿+≈¿+Œ¿+–¿,¿,S¿,Ü¿,¥¿,ø¿,¡¿,Û¿- ¿-+¿--¿-b¿-í¿-ù¿-ü¿-ƒ¿-Ô¿.¿.H¿.[¿.f¿.h¿.®¿.Í¿/$¿/4¿/Ñ¿/–¿0¿0b¿0∞¿0‹¿1¿1H¿1S¿1r¿1•¿1”¿1ﬁ¿1‡¿2¿2?¿2J¿2L¿2Å¿2±¿2º¿2‚¿3¿32¿3_¿3r¿3}¿3ø¿3˘¿4¿4	¿4¿4¿4,¿4t¿4ì¿4±¿4Ã¿4Ù¿5A¿5Å¿5Ü¿5à¿5§¿5Ï¿6¿6)¿6D¿6l¿6π¿6˘¿6˛¿7 ¿74¿7\¿7É¿7™¿7‘¿7Ÿ¿7€¿8)¿8L¿8p¿8ü¿8∏¿8—¿8Ó¿9 ¿9C¿9à¿9◊¿9Ó¿9ı¿9˜¿:#¿:D¿:b¿:i¿:k¿:≤¿:˙¿;/¿;o¿;í¿;—¿<¿<¿<L¿<{¿<Ω¿<Ù¿<ˇ¿=¿=¿=¿=¿=f¿=â¿=∆¿>¿>&¿>F¿>O¿>Q¿>ç¿>“¿?¿?L¿?í¿?∏¿?Û¿@1¿@{¿@µ¿@‰¿@˘¿A¿A¿A¿A<¿Ay¿Aü¿A≈¿Aœ¿A—¿Aˆ¿B	¿B¿B¿BO¿Bã¿B’¿C¿C$¿C9¿CD¿CM¿CO¿Cë¿C’¿D¿DO¿Dv¿D≥¿DŒ¿E¿E%¿EQ¿Eå¿E ¿EÒ¿F ¿F¿F¿F¿F;¿Fä¿F¡¿F˝¿G.¿GB¿GO¿GZ¿Gc¿Gj¿Gl¿Gà¿Gç¿Gè¿G›¿H ¿H$¿HS¿Hl¿HÖ¿H¢¿H‘¿H˜¿I<¿Iã¿I¢¿I©¿I´¿I◊¿I¯¿J¿J¿J¿Jf¿JÆ¿J„¿K#¿KH¿Ká¿K”¿K’¿L¿LO¿LX¿LZ¿Lk¿Lr¿Lt¿Lê¿Lï¿Ló¿L⁄¿L˘¿MD¿MÖ¿M«¿N¿N$¿N9¿N@¿NB¿Nw¿N∑¿N‹¿O¿Og¿Oä¿O…¿P¿P¿PD¿Ps¿P∑¿PË¿Q ¿Q¿Q¿Q ¿Q)¿Q+¿Q`¿Qs¿Q|¿Q~¿Q∞¿QÒ¿R/¿R{¿R†¿R©¿R´¿RÓ¿S¿SL¿Sr¿S∏¿Sﬁ¿T¿TW¿T°¿T◊¿TÏ¿T˜¿U ¿U¿U/¿Ul¿Uû¿U‚¿V.¿V[¿VÖ¿Vá¿V¨¿Vø¿V»¿V ¿W¿WA¿WW¿W`¿Wb¿W≤¿X¿X?¿X}¿X∫¿X‘¿X·¿XÏ¿Xı¿X¸¿X˛¿Y¿Y¿Y¿Yf¿Y¥¿YÚ¿Z/¿Zs¿Zó¿Zπ¿[¿[	¿[¿[T¿[û¿[∏¿[ˆ¿\?¿\s¿\é¿\ó¿\û¿\†¿\π¿\æ¿\¿¿]¿]'¿]y¿]±¿]Ã¿]Á¿^.¿^`¿^≠¿^ˇ¿_?¿_ä¿_À¿`¿`¿`!¿`#¿`N¿`W¿`Y¿`Ç¿`∫¿`√¿`≈¿a¿a¿a¿a7¿a<¿a>¿av¿aπ¿aÊ¿b.¿bT¿bú¿b¡¿b˚¿c/¿cl¿c¢¿c‘¿c˚¿d¿d¿dG¿dI¿d`¿dÜ¿d¨¿d∫¿e¿eN¿eè¿eƒ¿e¿f
¿f&¿fA¿fa¿fâ¿f´¿f≠¿f¸¿g.¿gg¿gà¿gü¿gÒ¿gÛ¿h8¿hÑ¿hÜ¿hÕ¿i¿i[¿ié¿i∫¿i‘¿i¿j¿j+¿jS¿ju¿jw¿j∆¿j˘¿k3¿kT¿kk¿kº¿kæ¿kÊ¿l&¿lL¿lN¿lg¿l´¿l€¿m#¿ma¿m{¿m}¿m…¿n¿n8¿nf¿n≤¿nÔ¿nÒ¿o'¿og¿oÑ¿oú¿o≠¿oØ¿o€¿p'¿p)¿pr¿p¿¿p˘¿q$¿qm¿q•¿qœ¿r¿rA¿râ¿r∂¿r–¿r·¿r¿rÚ¿s;¿sH¿sS¿s\¿s^¿sw¿s√¿s˜¿tH¿té¿t®¿t™¿tˆ¿uE¿ue¿uì¿u‡¿v¿v ¿vW¿vö¿v∑¿vœ¿v‡¿v‚¿w¿w[¿w]¿w¶¿wÙ¿x-¿xX¿x¢¿x⁄¿y¿yM¿yw¿y¿¿yÚ¿z¿z¿z,¿z.¿zx¿zÖ¿zê¿zô¿z†¿z¢¿z«¿z…¿{¿{"¿{H¿{z¿{é¿{ï¿{ó¿{∑¿{˝¿{ˇ¿|M¿|ô¿|È¿}¿}I¿}k¿}õ¿}◊¿}¯¿~¿~3¿~e¿~ô¿~Ÿ¿¿'¿g¿Ö¿∆¿»¿Ó¿Ä"¿Äe¿Äî¿Ä∂¿ÄΩ¿Äø¿Å¿Å¿ÅY¿Åå¿ÅŸ¿Ç#¿Ç?¿Ç]¿Çq¿Çü¿Ç¿¿É¿ÉE¿ÉG¿Éç¿É‘¿Ñ¿Ñ<¿Ñå¿Ñ´¿Ñ≠¿Ñ˙¿Ö!¿Öj¿Öë¿Ö‹¿Ü ¿Ü"¿Üm¿Üä¿Ü±¿ÜÔ¿á8¿áM¿áX¿áZ¿áá¿áó¿á†¿áß¿á©¿áÙ¿à¿à8¿àv¿àø¿à‘¿àﬂ¿à·¿â¿â¿â'¿â.¿â0¿â¿âº¿â˘¿â˚¿äB¿äD¿ä~¿ä™¿ä‘¿ã¿ã#¿ã%¿ãv¿ãë¿ãì¿ãÂ¿ãÙ¿ãˆ¿å-¿å_¿åí¿å¥¿å∂¿ç ¿çO¿çÉ¿ç¢¿ç‡¿é¿éW¿éü¿é√¿è¿èC¿èÉ¿è±¿è¸¿ê8¿êv¿ê≤¿ê¿ë¿ë]¿ë°¿ë∆¿ëœ¿ë÷¿ëÿ¿í¿í'¿íi¿íw¿í°¿í€¿ì¿ì8¿ìx¿ì©¿ì´¿ì¿î0¿îJ¿îé¿îÿ¿îı¿î˜¿ï¿ï¿ï^¿ïö¿ï⁄¿ñ¿ñN¿ño¿ñq¿ñº¿ñﬂ¿ó$¿ó-¿ó/¿óK¿óì¿ó–¿ò	¿ò"¿òF¿ò¿ò•¿ò¨¿òÆ¿òË¿ô2¿ô¿ôŒ¿ö¿öK¿öe¿öß¿ö©¿öÓ¿õ7¿õ9¿õ}¿õ¢¿õ¿ú¿ú?¿úA¿úå¿úü¿úΩ¿úÁ¿úˆ¿ù5¿ùC¿ùn¿ù}¿ùæ¿ù≈¿ù«¿ùı¿ù˜¿û$¿ûE¿ûf¿û™¿û¯¿üF¿üH¿üò¿üæ¿ü·¿üÍ¿üÏ¿†7¿†Ñ¿†Ü¿†◊¿°"¿°)¿°+¿°|¿°¨¿°˝¿¢¿¢C¿¢ì¿¢ö¿¢¬¿¢ƒ¿£¿£"¿£b¿£¿£ ¿£‰¿£Ê¿§"¿§Q¿§y¿§≈¿•¿•¿•K¿•f¿•~¿•™¿•⁄¿•Ù¿¶!¿¶#¿¶s¿¶£¿¶‹¿ß+¿ßF¿ßï¿ßÂ¿®)¿®m¿®ß¿®Œ¿©¿©7¿©9¿©}¿©∂¿©Ω¿©ø¿™¿™P¿™ù¿™≈¿™Ô¿´¿´V¿´õ¿´Á¿¨
¿¨T¿¨o¿¨v¿¨x¿¨»¿¨Ô¿≠¿≠>¿≠x¿≠¿≠Å¿≠—¿≠¯¿Æ¿ÆG¿ÆÅ¿Æà¿Æä¿Æ÷¿Æˇ¿ØD¿ØF¿Øí¿Øª¿∞ ¿∞¿∞?¿∞{¿∞∑¿∞Ù¿±¿±Z¿±{¿±}¿±»¿±Î¿≤-¿≤6¿≤8¿≤[¿≤´¿≤Ï¿≥,¿≥v¿≥x¿≥©¿≥Œ¿≥Î¿¥3¿¥V¿¥£¿¥Ã¿¥◊¿¥‡¿¥‚¿µ)¿µn¿µù¿µŸ¿∂¿∂¿∂_¿∂à¿∂¢¿∂Ã¿∂‰¿∂Ê¿∑,¿∑R¿∑r¿∑ñ¿∑±¿∑”¿∑‚¿∑Ì¿∑Ô¿∏;¿∏ã¿∏”¿π¿π4¿πc¿πu¿π§¿πØ¿π∏¿π∫¿∫¿∫N¿∫ú¿∫Ë¿ª8¿ªà¿ª÷¿ªˆ¿º!¿ºX¿ºï¿ºΩ¿º∆¿º»¿Ω¿Ω\¿Ω®¿ΩÙ¿æB¿æê¿æ‹¿æ¸¿ø'¿ø^¿øõ¿ø◊¿ø‡¿ø‚¿¿4¿¿Ç¿¿î¿¿Ã¿¡ ¿¡6¿¡U¿¡^¿¡`¿¡´¿¡Ù¿¬¿¬V¿¬~¿¬á¿¬â¿¬‘¿√¿√H¿√¿√ª¿√ƒ¿√∆¿ƒ¿ƒ7¿ƒ¿ƒ∏¿ƒÂ¿≈¿≈G¿≈î¿≈’¿≈ﬁ¿≈‡¿∆¿∆G¿∆Å¿∆É¿∆¥¿∆’¿«¿«^¿«¿«¬¿«ˇ¿»2¿»S¿»ñ¿»”¿…¿…
¿…K¿…k¿…õ¿…›¿ ¿ +¿ Q¿ Å¿ √¿À¿À¿À4¿Àb¿Àà¿Àæ¿À‰¿Ã¿Ã9¿Ãp¿Ã±¿Ã·¿Õ¿Õ,¿ÕZ¿Õ~¿Õû¿Õ…¿Õˆ¿ŒB¿Œg¿Œò¿Œ»¿Œ˙¿œ*¿œ]¿œâ¿œ¶¿œ⁄¿œ˛¿–*¿–H¿–h¿–è¿–∂¿–‚¿—¿—?¿—h¿—í¿—ƒ¿—Ù¿“¿“j¿“ä¿“ü¿“Œ¿“Ú¿”#¿”n¿”ê¿”∆¿‘¿‘8¿‘p¿‘Å¿‘É¿‘ ¿‘Ó¿’¿’¿’¿’k¿’∞¿’¿¿÷¿÷%¿÷V¿÷°¿÷√¿÷˘¿◊5¿◊k¿◊£¿◊¥¿◊∂¿ÿ¿ÿ-¿ÿF¿ÿW¿ÿY¿ÿ™¿ÿ¿Ÿ ¿Ÿ¿Ÿ¿ŸH¿ŸJ¿Ÿé¿Ÿ≤¿Ÿ–¿ŸÚ¿⁄¿⁄+¿⁄8¿⁄A¿⁄H¿⁄J¿⁄ö¿⁄π¿⁄‚¿€¿€\¿€ò¿€ﬁ¿‹¿‹¿‹8¿‹_¿‹w¿‹ü¿‹µ¿‹∑¿‹˚¿›¿›=¿›_¿›x¿›ò¿›•¿›Æ¿›∞¿›˛¿ﬁF¿ﬁÅ¿ﬁ¬¿ﬁÌ¿ﬁÙ¿ﬁˆ¿ﬂF¿ﬂe¿ﬂé¿ﬂ≈¿‡¿‡D¿‡ä¿‡≤¿‡ƒ¿‡‰¿·¿·#¿·K¿·a¿·c¿·ß¿·À¿·È¿‚¿‚$¿‚D¿‚Q¿‚Z¿‚\¿‚™¿‚Ú¿„-¿„n¿„ô¿„†¿„¢¿„œ¿‰¿‰f¿‰≤¿‰”¿‰˚¿Â#¿Âs¿Âæ¿Ê	¿ÊW¿Êi¿Ê®¿Êı¿Á¿Á+¿ÁF¿Ái¿Áà¿Á’¿Á¿Ë8¿Ë]¿Ëd¿Ëf¿Ë¢¿Ë»¿ËÒ¿È4¿Èp¿È∂¿Èﬁ¿È¿Í¿Í7¿ÍO¿Íw¿Íç¿Íè¿Í”¿Í˜¿Î¿Î7¿ÎP¿Îp¿Î}¿ÎÜ¿Î±¿Î∏¿Î∫¿ÎÒ¿Ï¿ÏE¿Ïà¿Ïƒ¿Ì
¿Ì2¿ÌD¿Ìd¿Ìã¿Ì£¿ÌÀ¿Ì·¿Ì„¿Ó'¿ÓK¿Ói¿Óã¿Ó§¿Óƒ¿Ó—¿Ó⁄¿Ô¿Ô¿Ô¿ÔP¿Ô¿Ôª¿ÔŸ¿¿)¿q¿x¿z¿¬¿«¿…¿Í¿Ò7¿Òy¿Òò¿Ò≥¿Ò˝¿Ú3¿Ú^¿Úò¿Ú∆¿Û¿Ûc¿Ûj¿Ûl¿Ûâ¿Û§¿Û«¿Ù¿ÙW¿Ù©¿ÙŒ¿Ù˚¿ı¿ıG¿ıo¿ıæ¿ıÏ¿ˆ¿ˆ)¿ˆb¿ˆä¿ˆ∞¿ˆÍ¿˜¿˜9¿˜_¿˜í¿˜ƒ¿˜Ò¿¯¿¯N¿¯z¿¯ü¿¯À¿˘¿˘J¿˘o¿˘π¿˙	¿˙8¿˙T¿˙¿˙ü¿˙‚¿˚¿˚¿˚$¿˚&¿˚^¿˚u¿˚æ¿˚”¿˚Ô¿¸¿¸L¿¸b¿¸n¿¸´¿¸À¿˝¿˝:¿˝O¿˝\¿˝^¿˝ú¿˝≥¿˝¸¿˛¿˛-¿˛Y¿˛ä¿˛†¿˛≠¿˛≤¿˛¥¿˛”¿˛Ê¿ˇ
¿ˇ4¿ˇS¿ˇ}¿ˇñ¿ˇØ¿ˇ›¿ #¿ O¿ [¿ ¿ ≠¿ Û¿¿+¿L¿x¿ú¿–¿˚¿¿L¿Å¿¿¿Ó¿¿5¿a¿É¿°¿ ¿ı¿B¿e¿≥¿È¿¿C¿p¿è¿≈¿Â¿¿'¿V¿Ñ¿≠¿÷¿¿0¿m¿§¿∑¿‰¿¿5¿Ç¿¢¿÷¿	¿	H¿	Ö¿	î¿	ñ¿	€¿	˝¿
¿
#¿
%¿
Q¿
v¿
û¿
»¿
Í¿¿¿B¿P¿è¿±¿‡¿-¿M¿Å¿ø¿Û¿0¿?¿A¿å¿¥¿À¿⁄¿‹¿¿-¿U¿¿°¿ª¿”¿˙¿¿¿¿¿C¿`¿v¿•¿ƒ¿€¿ˆ¿¿L¿Ç¿¬¿ˇ¿#¿Z¿ú¿À¿‘¿÷¿Ú¿(¿=¿ä¿¥¿¿C¿Ä¿®¿—¿Â¿ı¿1¿F¿ì¿Ω¿¿L¿â¿±¿⁄¿Ó¿˜¿¿N¿x¿ ¿˘¿ ¿b¿ï¿±¿œ¿¿¿m¿Ç¿Ø¿≈¿◊¿¿,¿{¿ê¿Ω¿”¿ﬁ¿‡¿Ò¿˙¿¸¿3¿u¿¶¿Ú¿¿?¿Y¿á¿œ¿¿C¿c¿ù¿∂¿¿5¿x¿©¿Í¿+¿W¿Ö¿ù¿±¿Ò¿
¿[¿â¿Ã¿˝¿ >¿ ¿ ´¿ Ÿ¿ Ò¿ ˛¿!¿!¿!¿!T¿!]¿!d¿!i¿!k¿!ú¿!¬¿" ¿"$¿"&¿"h¿"å¿"©¿"ƒ¿"À¿"Õ¿#¿#f¿#†¿#≈¿#ˇ¿$"¿$F¿$k¿$¶¿$…¿$Ì¿$Ô¿%4¿%}¿%º¿%Ô¿&¿&/¿&I¿&b¿&{¿&°¿&¡¿&√¿'¿'?¿'é¿'ﬁ¿'‡¿(#¿(m¿(o¿(¥¿(˝¿)<¿)m¿)ï¿)≠¿)«¿)‡¿)˘¿*¿*?¿*A¿*ç¿*Ω¿+¿+\¿+^¿+à¿+¬¿+Û¿,¿,_¿,ê¿,í¿,∆¿,Ù¿-=¿-^¿-}¿-≠¿-”¿-⁄¿-‹¿-ˇ¿.H¿.h¿.ï¿.∞¿.ﬁ¿/¿/)¿/+¿/z¿/ ¿/Ê¿0¿0Y¿0ì¿0ï¿0ƒ¿1¿1¿10¿1=¿1?¿1g¿1∞¿1≤¿1˜¿2-¿2S¿2¿2œ¿2ˆ¿3;¿3b¿3ß¿3æ¿3À¿3Õ¿3Ú¿3Ù¿48¿4k¿4∑¿5¿5D¿5m¿5®¿5‹¿6¿65¿6M¿6^¿6m¿6z¿6|¿6ö¿6±¿6æ¿6¿¿6Ï¿7 ¿7¿7¿7S¿7\¿7c¿7e¿7Ñ¿7∫¿7—¿8"¿88¿8:¿8â¿8Ÿ¿8ı¿9¿9g¿9†¿9¢¿9œ¿:¿:%¿:9¿:F¿:H¿:p¿:π¿:ª¿; ¿;6¿;\¿;à¿;ÿ¿;ˇ¿<D¿<k¿<∞¿<«¿<‘¿<÷¿<˛¿=¿=¿=¿=d¿=m¿=t¿=v¿=¬¿>¿>b¿>r¿>≤¿>—¿>”¿? ¿?c¿?à¿?ä¿?Ÿ¿@&¿@8¿@Y¿@z¿@¶¿@À¿@‘¿@÷¿A"¿Aq¿A¡¿AÌ¿B¿B[¿Bñ¿Bœ¿C¿C"¿C[¿C|¿Cú¿C∫¿C⁄¿CÒ¿CÛ¿D¿DW¿Dà¿DÀ¿E¿E¿E8¿E[¿E|¿E∆¿E˝¿F1¿Fh¿FÑ¿FŒ¿FÏ¿F˘¿F˚¿G¿Gp¿G{¿GÑ¿GÜ¿G¢¿G¡¿Gˇ¿HA¿Hy¿Hû¿H·¿HÏ¿HÓ¿I(¿I1¿I3¿IÅ¿I”¿J#¿JI¿Já¿J”¿K¿KA¿Kb¿Kù¿KÀ¿KÚ¿L¿L¿L?¿LX¿L°¿L£¿LÏ¿M'¿Mt¿Mí¿MÀ¿MÏ¿N¿N*¿NJ¿Na¿Nc¿Nä¿N¿¿N˙¿O¿Od¿OÑ¿Oì¿Oï¿O±¿O˘¿P¿P¿PL¿Pè¿P–¿Q¿QX¿Qî¿QΩ¿R¿R¿R¿RS¿R`¿Rk¿Rm¿Rß¿RÔ¿S&¿S@¿SI¿SK¿Sù¿S√¿S˙¿TB¿Tç¿Tñ¿Tù¿Tü¿TÈ¿U8¿UÅ¿U–¿V¿V%¿Vc¿Vî¿V…¿VÌ¿W4¿Wn¿W¨¿WÔ¿X¿Xe¿Xg¿X∞¿XÃ¿XÊ¿Y¿Y,¿YS¿Y~¿Yœ¿YÙ¿Z@¿Z}¿Zà¿Z…¿Z˝¿[(¿[j¿[≠¿[’¿\#¿\L¿\â¿\Ø¿\œ¿]¿]7¿]S¿]ç¿]À¿^¿^:¿^G¿^I¿^à¿^•¿^¿¿^‰¿_
¿_3¿_r¿_≥¿_æ¿_¿¿_Î¿`<¿`a¿`≠¿`Í¿`ı¿`˛¿a¿a¿a(¿aF¿a`¿aà¿aù¿a∞¿a≈¿aŸ¿b¿b$¿bC¿bÅ¿bº¿bÈ¿c¿cA¿c\¿cx¿cª¿c‡¿c¸¿d¿dK¿dm¿dí¿d∑¿d◊¿e¿eB¿eÖ¿e∑¿eŸ¿f¿f4¿fY¿fÅ¿f≠¿f◊¿g¿g5¿gf¿gç¿gµ¿g„¿g˛¿h*¿hV¿hÉ¿h∫¿hÁ¿i.¿i<¿iH¿i]¿iÑ¿iö¿i±¿iŒ¿iÚ¿j¿j@¿jd¿jß¿jﬂ¿k¿k2¿kS¿kê¿kœ¿l¿l6¿lQ¿lS¿lü¿l›¿m%¿m@¿mX¿my¿m∂¿mı¿n0¿nX¿ns¿nu¿n∂¿n—¿nˇ¿o¿o-¿oC¿ox¿oö¿o•¿o≠¿o≤¿o¥¿oŸ¿o¯¿p¿p:¿p_¿pà¿p±¿p≥¿pˆ¿qB¿q¿q≤¿r¿r¿r$¿r&¿rd¿rÇ¿rß¿rﬂ¿s¿s\¿s†¿sß¿s©¿sÚ¿t¿tE¿té¿tø¿u¿uT¿u~¿uº¿u˙¿v<¿vi¿v©¿vÃ¿vŒ¿w¿w@¿wá¿wí¿wî¿w≤¿w¸¿x;¿xv¿xë¿x∑¿xπ¿y¿yW¿yY¿yè¿y∫¿y„¿z ¿zD¿zO¿zX¿zZ¿zë¿zµ¿z∑¿zÙ¿{:¿{\¿{o¿{π¿{˙¿|$¿|7¿|_¿|v¿|ƒ¿|Ê¿},¿}R¿}w¿}Ø¿}¬¿~¿~)¿~I¿~P¿~R¿~w¿~|¿~~¿~ª¿~·¿¿C¿E¿á¿´¿»¿„¿Í¿Ï¿Ä7¿ÄÖ¿Äø¿Ä¡¿Ä¿Å¿ÅC¿Åg¿Å°¿Å≈¿ÅÈ¿Å¿ÅÚ¿Ç5¿Ç¿ÇÅ¿Ç´¿ÇÂ¿É¿ÉB¿ÉÇ¿É≥¿Éµ¿ÉÈ¿Ñ¿Ñ`¿ÑÅ¿Ñ†¿Ñ–¿Ñˆ¿Ñ˝¿Ñˇ¿Ö"¿Ör¿Öª¿Ö€¿Ü¿ÜC¿Üg¿ÜÜ¿Ü∏¿ÜÚ¿á¿á
¿áY¿á©¿á≈¿áÔ¿à8¿àr¿àt¿à£¿à‚¿à˚¿â¿â¿â¿âF¿âè¿âë¿â÷¿ä¿ä2¿ä^¿äÆ¿ä’¿ã¿ãA¿ãÜ¿ãù¿ã™¿ã¨¿ã—¿ã”¿å¿åJ¿åñ¿å‡¿ç#¿çL¿çá¿çª¿çÔ¿é¿é,¿é=¿éL¿éY¿é[¿éy¿éê¿éù¿éü¿éÀ¿éﬂ¿éÍ¿éÏ¿è2¿è;¿èB¿èD¿èè¿è¢¿è¿ê¿êW¿êç¿ê∑¿ë	¿ë7¿ëâ¿ëü¿ë°¿ë¿í@¿í\¿íÖ¿íŒ¿ì¿ì	¿ì6¿ìs¿ìå¿ì†¿ì≠¿ìØ¿ì◊¿î ¿î"¿îg¿îù¿î√¿îÔ¿ï?¿ïf¿ï´¿ï“¿ñ¿ñ.¿ñ;¿ñ=¿ñe¿ñy¿ñÑ¿ñÜ¿ñÀ¿ñ‘¿ñ€¿ñ›¿ó)¿óx¿ó…¿óŸ¿ò¿ò8¿ò:¿òá¿ò ¿òÔ¿òÒ¿ô@¿ôç¿ôü¿ô¿¿ô·¿ö¿ö2¿ö;¿ö=¿öâ¿öÿ¿õ(¿õT¿õÉ¿õ¬¿õ˝¿ú6¿úk¿úâ¿ú¬¿ú„¿ù¿ù!¿ùA¿ùX¿ùZ¿ù{¿ùæ¿ùÔ¿û2¿û~¿ûÄ¿ûü¿û¬¿û„¿ü-¿üd¿üò¿üœ¿üÎ¿†5¿†S¿†`¿†b¿†Ü¿†◊¿†‚¿†Î¿†Ì¿°	¿°(¿°f¿°®¿°‡¿¢¿¢H¿¢S¿¢U¿¢è¿¢ò¿¢ö¿¢Ë¿£:¿£ä¿£∞¿£Ó¿§:¿§¿§®¿§…¿•¿•2¿•Y¿•|¿•~¿•¶¿•ø¿¶¿¶
¿¶S¿¶é¿¶€¿¶˘¿ß2¿ßS¿ßs¿ßë¿ß±¿ß»¿ß ¿ßÒ¿®'¿®a¿®¿®À¿®Î¿®˙¿®¸¿©¿©`¿©m¿©o¿©≥¿©ˆ¿™7¿™y¿™ø¿™˚¿´$¿´k¿´z¿´|¿´∫¿´«¿´“¿´‘¿¨¿¨V¿¨ç¿¨ß¿¨∞¿¨≤¿≠¿≠*¿≠a¿≠è¿≠◊¿Æ¿Æ¿Æ¿Æ¿Æl¿Æ∫¿Æ›¿Ø¿Ø¿Øh¿Ø∂¿ØŸ¿∞¿∞M¿∞j¿∞ô¿∞∏¿∞˚¿±¿±[¿±]¿±ù¿±≈¿±Ã¿±Œ¿≤¿≤5¿≤<¿≤>¿≤à¿≤◊¿≥ ¿≥o¿≥¢¿≥ƒ¿¥¿¥!¿¥>¿¥d¿¥ù¿¥÷¿µ¿µ&¿µR¿µé¿µ¡¿µÔ¿∂1¿∂d¿∂f¿∂µ¿∂Î¿∑¿∑I¿∑l¿∑ì¿∑Â¿∑Ó¿∑¿∏7¿∏y¿∏{¿∏≤¿∏¿π¿πS¿πU¿πù¿π„¿∫¿∫¿∫X¿∫¢¿∫¡¿∫√¿ª¿ª'¿ªd¿ª´¿ªÎ¿º=¿ºZ¿ºt¿ºô¿ºÎ¿ºÌ¿Ω¿ΩO¿Ωë¿Ω≥¿Ω≈¿Ω«¿ΩÓ¿æ-¿æo¿æë¿æ£¿æ•¿æ’¿ø¿øM¿øü¿ø—¿ø”¿¿¿¿P¿¿ä¿¿…¿¿Û¿¿ı¿¡&¿¡]¿¡£¿¡µ¿¡∑¿¡˚¿¬+¿¬^¿¬£¿¬µ¿¬∑¿¬Ë¿√4¿√Å¿√∂¿√˚¿ƒ1¿ƒ`¿ƒb¿ƒÖ¿ƒá¿ƒ∞¿ƒ≤¿ƒ˙¿≈<¿≈Å¿≈«¿≈˚¿≈˝¿∆K¿∆j¿∆ó¿∆€¿«¿«¿«¿«a¿«ä¿«π¿«˝¿»'¿»6¿»8¿»|¿»£¿»•¿»ˆ¿…¿…j¿…y¿…{¿…ù¿…Î¿ .¿ m¿ å¿ ∂¿ ı¿À!¿À.¿À0¿Àp¿À¿¿À˝¿Ã"¿Ãq¿Ãø¿Õ ¿Õ ¿Õh¿Õj¿Õµ¿Õ’¿Œ¿Œ)¿Œ+¿Œ^¿Œì¿Œæ¿ŒÁ¿œ!¿œ]¿œf¿œh¿œ∑¿œ”¿–¿–B¿–å¿–À¿–¿—7¿—L¿—W¿—Y¿—r¿—{¿—}¿—®¿—÷¿“¿“9¿“i¿“r¿“t¿“£¿“•¿“Ó¿”+¿”i¿”è¿”ÿ¿‘*¿‘G¿‘a¿‘Ä¿‘“¿’
¿’F¿’^¿’∞¿’ª¿’Ω¿’‚¿÷¿÷N¿÷z¿÷¬¿÷Ë¿÷˛¿◊?¿◊v¿◊»¿◊˙¿◊¸¿ÿ8¿ÿy¿ÿ≥¿ÿÚ¿Ÿ¿Ÿ¿ŸO¿Ÿõ¿ŸË¿⁄¿⁄b¿⁄ò¿⁄«¿⁄…¿€¿€F¿€Å¿€»¿€‹¿€ﬁ¿‹¿‹J¿‹ú¿‹∞¿‹≤¿‹’¿‹◊¿› ¿›¿›J¿›å¿›—¿ﬁ¿ﬁK¿ﬁè¿ﬁ∑¿ﬁ∆¿ﬁ»¿ﬂ¿ﬂ3¿ﬂ5¿ﬂÜ¿ﬂØ¿ﬂ˙¿‡	¿‡¿‡-¿‡{¿‡æ¿‡˝¿·¿·F¿·Ö¿·±¿·æ¿·¿¿‚ ¿‚P¿‚ç¿‚≤¿„¿„O¿„ê¿„∞¿„¯¿„˙¿‰C¿‰c¿‰≤¿‰¯¿Â5¿ÂL¿Âô¿Âª¿Âﬂ¿ÂÍ¿ÂÏ¿Ê&¿Êb¿Êk¿Êm¿Êò¿Ê‚¿Ê‰¿Á2¿Áv¿Áö¿Á’¿Á˙¿ËD¿ËO¿ËQ¿Ë†¿Ë√¿È¿ÈJ¿Èm¿Èv¿È}¿È¿Èù¿Èº¿Í¿Í^¿Í`¿Í§¿Í–¿ÍŸ¿Í€¿Î¿ÎJ¿ÎS¿ÎZ¿Î\¿Îâ¿Îú¿Î≠¿Î¿¿Î“¿Î¯¿Ï¿Ï6¿Ïr¿Ï´¿Ï÷¿Ì¿Ì*¿ÌC¿Ì]¿Ìû¿Ì¡¿Ì€¿Ì˜¿Ó&¿ÓF¿Ói¿Óå¿Ó™¿Ó“¿Ô¿ÔR¿ÔÇ¿Ô¢¿Ô ¿Ô˘¿¿B¿l¿î¿æ¿Ó¿Ò¿ÒB¿Òh¿Òî¿Ò÷¿Ú ¿Ú*¿ÚU¿Úä¿Úµ¿Ú˙¿Û¿Û¿Û#¿ÛH¿Û\¿Ûq¿Ûå¿ÛÆ¿Û–¿Ù¿Ù_¿Ùã¿Ù¿¿ı¿ı%¿ı<¿ı>¿ıv¿ıª¿ˆ¿ˆY¿ˆï¿ˆ”¿ˆ’¿˜¿˜L¿˜e¿˜g¿˜®¿˜Œ¿˜Á¿˜È¿¯¿¯H¿¯z¿¯ï¿¯·¿˘/¿˘y¿˘µ¿˘Û¿˘ı¿˙=¿˙m¿˙Ü¿˙à¿˙…¿˙Ô¿˚¿˚
¿˚/¿˚`¿˚í¿˚≠¿˚ƒ¿˚Ê¿˚¸¿¸(¿¸N¿¸ë¿¸…¿˝¿˝K¿˝z¿˝¢¿˝≈¿˛¿˛E¿˛Ü¿˛∞¿˛Õ¿˛œ¿ˇ¿ˇ]¿ˇß¿ˇƒ¿ˇﬁ¿ ¿ @¿ Å¿ æ¿ Ë¿¿¿J¿g¿ó¿±¿…¿‚¿¿5¿=¿?¿y¿™¿¸¿7¿¿ß¿»¿Ì¿&¿j¿ä¿¡¿‡¿#¿C¿h¿|¿ë¿¨¿…¿ˆ¿ ¿h¿∑¿Õ¿‘¿÷¿˜¿¿/¿X¿`¿e¿g¿≤¿⁄¿¿¿!¿#¿Z¿ç¿í¿î¿∫¿˝¿	¿	*¿	1¿	3¿	R¿	Ç¿	“¿	Ú¿	˜¿	˘¿
¿
1¿
@¿
G¿
I¿
Ä¿
ú¿
£¿
•¿
ª¿
¿¿
¬¿
Ê¿¿7¿^¿y¿Ä¿Ç¿±¿‡¿˜¿:¿i¿ù¿∆¿¿1¿¿ ¿Í¿¿¿;¿k¿m¿é¿Œ¿¿¿J¿}¿∑¿Ë¿¿^¿{¿é¿ƒ¿Ú¿¿'¿0¿2¿O¿d¿í¿∂¿¬¿›¿¿J¿k¿É¿ñ¿‚¿¸¿
¿¿!¿(¿*¿c¿Ø¿Ò¿Û¿¿6¿h¿á¿â¿Ÿ¿(¿Z¿É¿ ¿Ã¿¿<¿[¿b¿d¿¨¿ﬁ¿¿4¿h¿¢¿‡¿!¿#¿p¿´¿¿¿¿F¿i¿É¿ö¿º¿⁄¿ˆ¿¯¿2¿Z¿É¿ö¿Î¿(¿M¿i¿Å¿É¿—¿¿¿2¿M¿j¿Ä¿ó¿µ¿Ò¿¯¿˙¿8¿J¿`¿b¿ô¿∏¿÷¿&¿;¿X¿ì¿‹¿¿V¿°¿∏¿Ù¿ ¿ Z¿ ö¿ Â¿ ¸¿!¿!`¿!i¿!w¿!å¿!≥¿!ˇ¿"H¿"Ü¿"¬¿#¿#$¿#q¿#õ¿#·¿$!¿$l¿$n¿$æ¿%¿%2¿%i¿%å¿%±¿%—¿%Ô¿&¿&¿&6¿&s¿&ñ¿&π¿&ÿ¿&ˆ¿'¿'¿'%¿''¿'<¿'M¿'}¿'¢¿'©¿'´¿'À¿'Î¿(+¿(S¿(ä¿(–¿(Ï¿)¿)¿)¿)T¿)î¿)‘¿)Ï¿*¿*$¿*=¿*T¿*r¿*ö¿*π¿*‰¿+¿+W¿+Å¿+®¿+›¿,¿,.¿,P¿,Ñ¿,©¿,‡¿-&¿-N¿-É¿-Õ¿-˛¿.¿.¿.¿.i¿.à¿.’¿.˘¿/¿/2¿/D¿/W¿/h¿/|¿/ô¿/£¿/™¿/¨¿/—¿0"¿0j¿0¶¿0‡¿11¿1L¿1c¿1â¿1∞¿2¿2¿29¿2L¿2c¿2´¿2≥¿2µ¿2Õ¿3¿3(¿39¿3M¿3w¿3é¿3»¿3·¿4"¿4I¿4Ñ¿4»¿4Ï¿5¿53¿5A¿5X¿5p¿5ò¿5«¿5·¿6¿6<¿6¿6 ¿6‡¿7¿7F¿7â¿7‘¿7Í¿8¿8F¿8á¿8¿¿8Ë¿9¿9`¿9ß¿9÷¿:¿:=¿:{¿:∞¿:È¿;¿;S¿;{¿;Æ¿;Ì¿<'¿<Z¿<à¿<Ã¿<Î¿=¿=:¿=å¿=§¿=Ì¿>(¿>a¿>y¿>ê¿>û¿>£¿>•¿>Ù¿?"¿?N¿?ë¿?‘¿?Ù¿@¿@
¿@¿@9¿@Ñ¿@¥¿@Ô¿A4¿AÑ¿Aâ¿Aã¿A⁄¿A¸¿B"¿B\¿B©¿B∏¿Bø¿B¡¿BÓ¿C9¿Ci¿C§¿C„¿D3¿D8¿D:¿Dã¿D∑¿E¿EK¿Et¿E†¿Eß¿E©¿EÊ¿F&¿FL¿Fv¿F´¿F÷¿G%¿G.¿G5¿G7¿Ga¿Gf¿Gh¿G≤¿G⁄¿H¿H,¿Hr¿Hì¿Hº¿H¡¿H√¿I¿I1¿ID¿Id¿Iw¿Iñ¿I´¿I¡¿Iﬂ¿I˜¿J¿JI¿Jä¿J∞¿JŒ¿JÏ¿K¿K-¿KA¿Kh¿Kå¿KÆ¿K¬¿Kÿ¿Kı¿L2¿LO¿Li¿Lâ¿L∂¿Lÿ¿L˜¿M¿M7¿MT¿Mq¿Mé¿MΩ¿M‡¿N¿N/¿N>¿NF¿NK¿NM¿Ne¿N¨¿N–¿O¿O>¿OÅ¿O¡¿O˝¿Oˇ¿P,¿P?¿PP¿Pc¿Pu¿Põ¿P∂¿P¿Q'¿QP¿Q{¿Q†¿Q¬¿Q⁄¿R¿R:¿RR¿Rl¿Rô¿R∑¿Rÿ¿R˘¿S¿S7¿St¿S≥¿S·¿Sˇ¿T%¿TR¿Ts¿Tó¿Tø¿TÂ¿U¿U;¿Uh¿Uã¿UØ¿UŸ¿U¸¿V$¿VL¿Vu¿V®¿V—¿W¿W¿Wl¿W∂¿WÚ¿XC¿X]¿Xê¿X∞¿X∏¿X¸¿Y¿YA¿YÖ¿Y ¿Z¿Z,¿Z3¿ZZ¿Z_¿Za¿Z¿Z∂¿ZÀ¿ZÈ¿ZÙ¿Z˚¿Z˝¿[%¿[*¿[,¿[J¿[r¿[õ¿[™¿[±¿[≥¿[∆¿[È¿[Ú¿[˜¿[˘¿\,¿\e¿\ò¿\ü¿\°¿\À¿\Û¿\ı¿]¿]0¿]2¿]Y¿]ó¿] ¿]È¿^4¿^Ü¿^√¿^Ÿ¿^˜¿_¿_?¿_M¿_n¿_å¿_µ¿_È¿_Î¿`=¿`é¿`¬¿`Ì¿a6¿a8¿aá¿a¨¿aÕ¿a÷¿aÿ¿b¿bL¿bê¿b≥¿bÌ¿c¿c&¿c^¿cu¿c¿¿c‚¿d ¿d	¿d¿d/¿dT¿db¿d¥¿dÚ¿e.¿e}¿e√¿f¿fA¿fC¿fe¿f£¿f–¿g¿g¿ga¿gî¿gπ¿g‡¿h¿h¿ha¿h£¿hº¿h€¿h˚¿i"¿iG¿ih¿i£¿iÆ¿i∑¿iæ¿i¿¿iÿ¿iÎ¿j ¿j¿j<¿jZ¿jy¿j£¿j÷¿k¿k+¿kx¿k®¿k’¿l¿l2¿lk¿lõ¿l’¿lÒ¿m
¿m0¿m}¿m≠¿m⁄¿n¿nX¿nr¿nù¿nÀ¿o¿o6¿oj¿oñ¿o¬¿oı¿pT¿p°¿p„¿q¿q0¿q[¿q~¿qÃ¿q¸¿r"¿rW¿r©¿r÷¿rı¿s¿s:¿sV¿sí¿s≤¿t¿t¿t`¿tô¿t’¿tÎ¿u-¿u`¿uá¿u‘¿v¿vE¿vj¿v¥¿v˘¿w?¿w~¿wî¿wÃ¿x¿x=¿xq¿xæ¿x˜¿y<¿yÇ¿y°¿y∏¿y∫¿z¿z8¿zr¿z©¿z¿{)¿{U¿{l¿{n¿{ò¿{À¿|	¿|B¿|n¿|õ¿|∆¿|˛¿}8¿}s¿}â¿}∞¿}˜¿~E¿~u¿~Ø¿~Ê¿-¿f¿í¿©¿´¿’¿Ä¿Ä;¿Äi¿Äï¿ÄÕ¿Å¿ÅB¿ÅX¿Åo¿Åt¿Åv¿ÅΩ¿ÅÊ¿Ç'¿ÇR¿Çá¿Çÿ¿É¿É<¿ÉA¿ÉC¿ÉÜ¿ÉÆ¿ÉÈ¿Ñ ¿Ño¿Ññ¿Ñ≈¿ÑÎ¿Ö¿Ö¿Ö¿Ög¿Ö™¿ÖÈ¿Ü ¿Ü?¿Ü~¿Ü£¿Ü·¿á¿á4¿áv¿áµ¿á˝¿à>¿àh¿àµ¿à¿¿à¬¿â¿â¿â¿â ¿âM¿â~¿â´¿â„¿âÍ¿âÔ¿âÒ¿ä!¿äO¿äp¿ää¿ä◊¿äÊ¿äÌ¿äÔ¿ã!¿ão¿ãt¿ãv¿ã≠¿ã·¿å¿å¿å_¿å¿åé¿åï¿åó¿åœ¿ç¿ç"¿ç$¿çI¿çq¿ç∞¿çæ¿ç¯¿é1¿é8¿é=¿é?¿és¿éø¿éŸ¿è ¿èJ¿èb¿è¥¿è‡¿ê¿ê¿ê¿êe¿êt¿ê{¿ê}¿ê≠¿êı¿ê˜¿ë)¿ë:¿ëQ¿ëp¿ëô¿ëƒ¿ëÎ¿ë˚¿í ¿í¿í<¿í_¿íü¿íπ¿í‡¿ì*¿ìB¿ìî¿ì¿¿ìÔ¿ìˆ¿ì¯¿î;¿î[¿îj¿îq¿îs¿î£¿îÎ¿îÌ¿ï%¿ï6¿ïM¿ïl¿ïï¿ï¿¿ïÁ¿ï˜¿ï¸¿ï˛¿ñ)¿ñ`¿ñ≤¿ñ”¿ñÓ¿ñı¿ñ˜¿ó8¿óy¿ó≈¿ó‡¿óÁ¿óÈ¿ò¿òU¿òë¿òì¿ò”¿òÛ¿ô¿ô5¿ô<¿ô>¿ô\¿ôù¿ô·¿ôˇ¿ö@¿ö{¿ö¨¿ö ¿õ¿õF¿õy¿õ{¿õê¿õƒ¿õ„¿õ˛¿ú"¿ú_¿úã¿ú≈¿úÛ¿ù¿ù_¿ùç¿ù»¿û¿û\¿ûÅ¿ûß¿û“¿ü¿ü.¿ü>¿üG¿üI¿üz¿üÅ¿üÉ¿üÕ¿ü˙¿†7¿†R¿†Y¿†[¿†ß¿†Õ¿°¿°N¿°Å¿°à¿°ä¿°™¿°Ø¿°±¿°Ì¿¢¿¢O¿¢ü¿¢π¿¢À¿¢ﬁ¿¢Ô¿£¿£ ¿£*¿£1¿£3¿£w¿£ú¿£¿¿£‚¿§¿§[¿§ñ¿§…¿§‰¿§˜¿§˛¿• ¿•(¿•B¿•a¿•v¿•ä¿••¿•«¿•È¿¶
¿¶\¿¶ô¿¶ƒ¿¶Ú¿ß%¿ßD¿ßr¿ßë¿ß±¿ß”¿ß¸¿®%¿®S¿®é¿®™¿®’¿©¿©5¿©U¿©v¿©ñ¿©Ë¿™
¿™A¿™|¿™î¿™›¿´¿´6¿´O¿´V¿´X¿´í¿´ ¿¨¿¨+¿¨l¿¨∞¿¨Œ¿≠¿≠J¿≠{¿≠ô¿≠⁄¿Æ¿ÆH¿ÆJ¿Æì¿Æ∫¿Æ‹¿Æﬁ¿Ø'¿Ø^¿ØÉ¿Ø©¿Ø„¿∞¿∞=¿∞}¿∞´¿∞œ¿∞˘¿±7¿±Ç¿±∏¿±¿≤
¿≤¿≤¿≤+¿≤H¿≤[¿≤m¿≤Ü¿≤¶¿≤∆¿≤Â¿≥5¿≥p¿≥ï¿≥œ¿¥¿¥'¿¥W¿¥ë¿¥—¿¥È¿µ¿µN¿µt¿µ∞¿µ‰¿∂¿∂B¿∂¿∂∆¿∂¸¿∑$¿∑S¿∑á¿∑±¿∑◊¿∏¿∏;¿∏Ä¿∏ú¿∏¡¿∏‰¿π'¿πk¿πë¿πΩ¿πÙ¿∫6¿∫g¿∫ò¿∫’¿∫˛¿ª6¿ªm¿ªó¿ª√¿ªˆ¿º)¿ºa¿º¶¿ºﬂ¿Ω¿ΩJ¿Ωà¿Ω…¿Ω˚¿æC¿æÅ¿æ≠¿æÕ¿æÎ¿ø¿ø"¿ø[¿ø°¿øª¿¿¿¿R¿¿l¿¿à¿¿ç¿¿ê¿¿í¿¿¡¿¡¿¡
¿¡!¿¡#¿¡K¿¡M¿¡Z¿¡õ¿¡û¿¡†¿¡€¿¡Ë¿¡˛¿¬(¿¬@¿¬E¿¬G¿¬T¿¬í¿¬¬¿¬Ù¿√ ¿√'¿√N¿√S¿√U¿√i¿√|¿√¬¿√À¿√–¿√“¿√ﬂ¿√Û¿ƒ ¿ƒ6¿ƒ;¿ƒ=¿ƒJ¿ƒr¿ƒª¿ƒ¿¿ƒ√¿ƒ≈¿≈¿≈.¿≈E¿≈ä¿≈å¿≈¥¿≈À¿≈Õ¿∆
¿∆(¿∆*¿∆7¿∆v¿∆y¿∆{¿∆∞¿∆€¿«¿«=¿«?¿«y¿«ü¿«°¿«Æ¿«ƒ¿«ı¿»9¿»K¿»ú¿»¥¿»π¿»ª¿»»¿»‹¿…¿…¿…¿…¿…+¿…S¿…z¿…ù¿…ü¿…Ω¿…‚¿…ˇ¿ %¿ A¿ å¿ ë¿ î¿ ñ¿ ¢¿ ÷¿ Ù¿À¿À'¿À@¿ÀR¿Às¿Àé¿À°¿Àµ¿À÷¿ÀÓ¿Ã¿Ã¿Ã+¿Ã?¿Ã[¿Ã|¿Ãû¿Ãπ¿Ã”¿ÃÙ¿Õ¿Õ)¿ÕJ¿Õj¿Õâ¿ÕÆ¿Õœ¿ÕÏ¿Œ
¿Œ(¿ŒG¿Œc¿Œ¿Œú¿Œ…¿ŒÊ¿œ¿œ	¿œ/¿œS¿œ}¿œß¿œ”¿œÛ¿–¿–1¿–F¿–^¿–Å¿–©¿–ƒ¿–ﬂ¿–ˆ¿—¿—1¿—\¿—¿—∂¿—⁄¿“¿“H¿“l¿“î¿“À¿“¸¿”¿”:¿”_¿”¿”¢¿”√¿”·¿‘$¿‘E¿‘f¿‘h¿‘u¿‘æ¿‘¡¿‘√¿’¿’:¿’<¿’I¿’_¿’¢¿’Œ¿÷¿÷R¿÷j¿÷o¿÷q¿÷~¿÷∑¿÷ˇ¿◊J¿◊è¿◊ñ¿◊ò¿◊À¿ÿ¿ÿ2¿ÿx¿ÿ¶¿ÿÈ¿ÿ¿ÿÚ¿Ÿ5¿Ÿ\¿Ÿa¿Ÿc¿Ÿp¿Ÿò¿Ÿ„¿⁄¿⁄0¿⁄X¿⁄Z¿⁄™¿⁄˘¿€+¿€T¿€°¿€À¿€˝¿‹ ¿‹"¿‹o¿‹í¿‹±¿‹∏¿‹∫¿‹Ì¿›*¿›^¿›`¿›ù¿›∆¿ﬁ¿ﬁ/¿ﬁM¿ﬁé¿ﬁ≥¿ﬁ‚¿ﬂ%¿ﬂT¿ﬂé¿ﬂ›¿‡¿‡<¿‡Z¿‡ü¿‡«¿‡Ô¿·*¿·^¿·¢¿·¡¿‚	¿‚;¿‚v¿‚ó¿‚÷¿‚ÿ¿‚˘¿„%¿„'¿„k¿„ì¿„∂¿„Ÿ¿‰¿‰J¿‰ö¿‰Á¿Â0¿Âw¿ÂÄ¿Âá¿Ââ¿Â™¿Â˚¿ÊJ¿Ê~¿ÊÄ¿ÊÆ¿Ê·¿Á¿Á ¿Á]¿Áõ¿Á¿¿Á˚¿Ë3¿ËL¿Ëf¿Ë¨¿Ë¿¿ËÚ¿È(¿È*¿ÈZ¿Èo¿È≥¿ÈÙ¿Í¿Í5¿Í<¿Í>¿Í\¿Íô¿Í·¿Í˚¿Î¿Î(¿ÎP¿Îí¿Î≈¿Ï ¿Ï¿Ï	¿Ï[¿Ï¨¿ÏÃ¿ÏÏ¿ÏÓ¿Ì¿Ì7¿ÌY¿Ìt¿Ì∫¿Ì›¿Ìˇ¿Ó¿Ó8¿Ól¿Óê¿Ó≤¿Ó∆¿ÓÊ¿Ô¿Ô¿Ô1¿ÔO¿Ôi¿Ô∞¿ ¿¿G¿t¿Ñ¿¬¿Ò ¿Ò¿Ò4¿ÒS¿Òo¿Òç¿Ò¨¿Òœ¿Ò—¿Ú¿Ú6¿Ú]¿Ú¢¿Ú§¿Úœ¿Ú—¿Û¿ÛD¿Ûâ¿Û«¿Ù¿Ùg¿Ùñ¿Ù”¿Ùˆ¿ı5¿ı`¿ı§¿ıÁ¿ˆ¿ˆ(¿ˆ*¿ˆv¿ˆ©¿ˆÿ¿˜
¿˜O¿˜v¿˜ò¿˜µ¿¯¿¯A¿¯à¿¯∫¿¯‚¿˘¿˘ ¿˘S¿˘u¿˘ç¿˘™¿˘Ã¿˘Í¿˙¿˙8¿˙h¿˙u¿˙á¿˙÷¿˚¿˚D¿˚q¿˚è¿˚æ¿˚÷¿¸%¿¸w¿¸º¿¸„¿˝¿˝"¿˝t¿˝¨¿˝—¿˝ı¿˛%¿˛K¿˛o¿˛Ñ¿˛¶¿˛∆¿˛‹¿˛˜¿ˇ¿ˇ3¿ˇc¿ˇÇ¿ˇÆ¿ˇﬁ¿ˇÈ¿ˇÚ¿ˇ˘¿ˇ˚¿ ¿ ^¿ }¿ õ¿ ù¿ ª¿¿[¿ü¿≈¿˘¿¿4¿N¿k¿ç¿•¿∆¿¿Y¿Å¿ë¿ﬂ¿)¿v¿ñ¿«¿–¿ﬁ¿%¿t¿∏¿‹¿˚¿¿1¿M¿T¿V¿ç¿π¿œ¿Ù¿¿&¿6¿Y¿´¿≤¿¥¿‰¿˙¿¿8¿Q¿a¿Ñ¿÷¿›¿ﬂ¿	¿	Q¿	è¿	∏¿	˝¿
9¿
`¿
i¿
k¿
ì¿
ö¿
ú¿
¥¿¿8¿m¿≠¿Ï¿*¿k¿m¿ì¿–¿¿[¿†¿‹¿)¿2¿4¿T¿[¿]¿}¿¿¿‚¿˜¿¿n¿•¿ª¿Â¿¿`¿É¿≤¿–¿ˇ¿ ¿r¿î¿¡¿Ò¿¿W¿v¿¨¿À¿‚¿¿^¿t¿ô¿œ¿Ó¿¿:¿á¿ù¿¬¿˜¿/¿c¿}¿¬¿„¿¿:¿r¿Ω¿‡¿+¿l¿ó¿ƒ¿¿H¿Ä¿ª¿¿í¿⁄¿¿e¿é¿»¿¿I¿Å¿Ã¿Ú¿¿@¿m¿Æ¿Ò¿)¿q¿≠¿˚¿!¿6¿C¿Y¿á¿≤¿¿%¿T¿r¿°¿¬¿ ¿ 6¿ c¿ ì¿ Õ¿ Ï¿!"¿!A¿!X¿!á¿!‘¿!Í¿"¿"E¿"d¿"{¿"∞¿"˝¿#¿#8¿#m¿#ü¿#ø¿$¿$P¿$ä¿$§¿$¶¿$¿%*¿%t¿%ô¿%Õ¿%Ò¿&¿&R¿&ù¿&¿¿'¿'E¿'n¿'ô¿'ÿ¿(¿(O¿(à¿(€¿)[¿)°¿)€¿*(¿*O¿*á¿*ƒ¿+¿+:¿+É¿+ß¿+»¿+Ò¿,¿,[¿,ú¿,“¿-¿-R¿-ü¿-¡¿-‹¿-Ò¿-ˇ¿.¿.8¿.N¿.b¿.≥¿.ﬂ¿/¿/,¿/X¿/{¿/∆¿/˛¿0,¿0Y¿0v¿0∂¿0›¿0¸¿1"¿1_¿1ì¿1”¿2¿2>¿2b¿2{¿2ö¿2¿¿2Ì¿3!¿3T¿3î¿3∏¿3–¿3Ê¿3˚¿4¿4 ¿4"¿4K¿4é¿4∞¿4≈¿4˝¿5¿5=¿5h¿5à¿5´¿5⁄¿5¯¿6'¿6H¿6¶¿6‹¿7¿7J¿7Ñ¿7©¿7Œ¿7ˆ¿8¿8I¿8x¿8Æ¿8Â¿9
¿9W¿9}¿9∂¿9˝¿:1¿:k¿:ù¿:…¿:Ê¿:¸¿;¿;¿;6¿;8¿;b¿;•¿;«¿;‹¿<¿<+¿<U¿<Ä¿<†¿<√¿<Ú¿=¿=?¿=`¿=æ¿=ı¿>/¿>e¿>ü¿>√¿>Ë¿?¿?6¿?b¿?ë¿?«¿?˛¿@8¿@n¿@ä¿@∞¿@È¿A0¿Ae¿A°¿A”¿Aˇ¿B¿B2¿BG¿BT¿Bl¿Bn¿Bì¿B”¿C¿C#¿CM¿Cx¿Cú¿Cø¿D¿D ¿DO¿Dp¿D¢¿D◊¿E¿EB¿Ea¿Eó¿E∂¿EÕ¿Eœ¿E˚¿F@¿FV¿F{¿F¢¿F“¿F¯¿G6¿Gp¿Gê¿GÀ¿Gˇ¿H2¿Hl¿Hñ¿H¬¿Hı¿I*¿IJ¿Ip¿I®¿I€¿J¿Jn¿J∑¿J◊¿K¿KE¿Ko¿Kô¿K ¿L¿LP¿L|¿LΩ¿Lﬁ¿LÙ¿M	¿M¿M.¿M0¿Mq¿Mò¿M∫¿M–¿M˙¿N%¿NG¿Nj¿N©¿N‘¿N˜¿O¿O&¿OA¿OX¿Op¿O~¿OÄ¿O¨¿OÆ¿OÈ¿P%¿PK¿Pl¿PÉ¿P†¿P∂¿P”¿PÈ¿Q ¿Q¿Q¿Q=¿QS¿Qj¿QÅ¿Qû¿Q¥¿QŒ¿Q⁄¿Q˜¿R(¿RU¿R^¿R`¿Rs¿R√¿S¿S@¿Sf¿Sá¿Sù¿S¥¿S—¿SÁ¿T¿T¿T'¿T7¿TT¿TÖ¿T≤¿T¥¿T›¿U¿U.¿UT¿Uy¿Uü¿U®¿U™¿UΩ¿V¿V¿VA¿Vb¿Vx¿Vè¿V¨¿V¬¿V‹¿V˘¿W¿W¿W,¿WM¿Wc¿Wz¿Wó¿WÆ¿Wƒ¿Wﬁ¿WÍ¿X¿X8¿Xe¿Xn¿Xp¿XÉ¿X”¿X⁄¿Xﬂ¿X·¿XÓ¿Y¿YH¿Yh¿Y¨¿Y¬¿Y«¿Y…¿YÍ¿Z ¿Z¿Z¿Z<¿ZQ¿Z`¿Zg¿Zi¿Z¿ZÑ¿ZÜ¿Zú¿Z¬¿Z—¿Zÿ¿ZÙ¿[¿[¿[¿[4¿[Z¿[i¿[p¿[å¿[Ø¿[¥¿[∂¿[ÿ¿[¸¿\¿\5¿\J¿\`¿\x¿\ë¿\Ø¿\…¿\‰¿]¿]-¿]O¿]¿]Å¿]≠¿]Ì¿^!¿^;¿^Ü¿^ù¿^¡¿^Ê¿^˚¿_¿_O¿_g¿_¨¿_ÿ¿_˛¿`¿`J¿`Ä¿`≤¿`Ê¿`ˇ¿a/¿aH¿aY¿aë¿aƒ¿a˚¿b¿bC¿bT¿bd¿bÉ¿b≤¿bﬁ¿c ¿c'¿cP¿cÜ¿cΩ¿c˜¿d-¿dI¿do¿dõ¿d ¿d˚¿e¿e:¿e`¿eã¿e∏¿eÚ¿f-¿fe¿f≤¿f˛¿g'¿gs¿g¶¿gÕ¿gˆ¿h+¿hi¿h∏¿hË¿i-¿iQ¿ix¿iª¿i¯¿j8¿jn¿j∏¿j¸¿kB¿kz¿k•¿k»¿kÍ¿l
¿l0¿lh¿l∏¿m¿m/¿m\¿mñ¿m≈¿n¿n6¿np¿n™¿nÊ¿o3¿oa¿o•¿o∆¿o–¿oÿ¿o›¿oﬂ¿p¿p¿p<¿pb¿pm¿p∫¿p÷¿p·¿q ¿q#¿qC¿qf¿qz¿q°¿q·¿r¿rL¿rï¿r¢¿r≠¿rΩ¿rË¿s(¿sa¿sì¿s‹¿t%¿tg¿tü¿t“¿t¿t˝¿u¿u¿u@¿uK¿uÅ¿u√¿uﬂ¿uÍ¿uÒ¿v8¿vN¿vS¿vU¿vr¿vî¿v∫¿w
¿w1¿wF¿wã¿w°¿w≈¿wÈ¿x
¿x&¿xI¿xT¿x¿xø¿x¸¿y	¿y:¿yÕ¿yÿ¿y¯¿z ¿z+¿zi¿zç¿z—¿{¿{6¿{c¿{ò¿|3¿|B¿|d¿|ó¿}H¿}U¿}W¿}Ç¿}¬¿}Ò¿}˛¿~/¿~¶¿~±¿~œ¿~Ó¿¿¿[¿Ü¿∆¿Ï¿˘¿Ä*¿Äè¿Äö¿Ä¿¿ÄÁ¿Å¿Å¿Å[¿Å¿Å√¿ÅÏ¿Ç¿Ç[¿ÇÇ¿Çë¿Çƒ¿É)¿É=¿Éj¿Éü¿Ñ:¿ÑI¿Ñk¿Ñã¿Ñ÷¿Ö¿Ö5¿Öl¿ÖŸ¿Ü¿Ü¿Ü¿Ü!¿Ü&¿Ü)¿Ü+¿Ü{¿Ü∞¿Ü ¿Ü·¿Üˆ¿á¿á2¿áE¿áY¿áz¿áö¿áµ¿á—¿áÓ¿à¿àW¿àY¿àv¿àí¿àÆ¿à√¿à€¿â¿â8¿â[¿â§¿â–¿âÌ¿ä¿äA¿än¿äp¿ä}¿äß¿äÎ¿äÌ¿ã¿ã%¿ãA¿ãn¿ã~¿ã§¿ã≠¿ãª¿ã€¿å ¿å¿å¿å¿åG¿åí¿å∑¿åÍ¿ç1¿çg¿ço¿çq¿çç¿ç¨¿çÆ¿ç»¿é¿é'¿ég¿én¿ép¿éï¿éÆ¿é¸¿é˛¿è1¿èK¿èx¿è¬¿è„¿ê¿ê/¿êv¿êö¿ê›¿ë¿ëD¿ëx¿ë∞¿ë¿¿ëÁ¿í¿í!¿íE¿íÄ¿íª¿í˝¿ì¿ì^¿ìÄ¿ìâ¿ìê¿ìï¿ìó¿ì…¿ì‰¿î¿î)¿îw¿îî¿î‘¿ï¿ï8¿ï?¿ïA¿ïb¿ïÄ¿ï¿¿ñ¿ñ6¿ñ]¿ñ§¿ñ¿¿ó¿ó¿ó0¿ór¿ót¿óô¿óØ¿ó‡¿ò¿ò<¿ò[¿ò]¿ò¨¿òÆ¿òˇ¿ôN¿ôÇ¿ô«¿ô‰¿ö ¿ö'¿ö)¿ö;¿ö{¿öÕ¿õ¿õ6¿õ}¿õú¿õ⁄¿õ„¿õÍ¿õÏ¿ú
¿ú#¿ú4¿úE¿ú]¿úv¿úΩ¿úÓ¿úÛ¿úı¿ù(¿ùC¿ùd¿ùÑ¿ù√¿ùË¿û(¿ûq¿ûç¿û÷¿ûﬁ¿ü¿ü%¿üh¿üß¿ü‚¿ü‰¿†
¿†:¿†Y¿†[¿†™¿†¨¿†ﬂ¿†˝¿°O¿°ü¿°”¿¢¿¢6¿¢r¿¢y¿¢{¿¢ç¿¢Õ¿£¿£/¿£Å¿£ô¿£·¿§ ¿§>¿§G¿§N¿§P¿§p¿§π¿§æ¿§¿¿§Ï¿•¿•+¿•`¿•ü¿•‘¿•Ÿ¿•€¿•Ë¿¶¿¶-¿¶2¿¶4¿¶v¿¶±¿¶÷¿¶Ó¿ß	¿ß%¿ß:¿ßY¿ßs¿ßê¿ß÷¿ßÛ¿®&¿®ú¿®¨¿®œ¿©¿©¿©)¿©n¿©º¿©√¿©≈¿©˜¿™6¿™^¿™Å¿™¨¿™∂¿™ø¿™¡¿™ﬂ¿™‰¿™Ê¿´6¿´à¿´⁄¿´˛¿¨¿¨>¿¨X¿¨Ç¿¨ä¿¨è¿¨ë¿¨û¿¨⁄¿¨Ï¿¨Ò¿¨Ù¿¨ˆ¿≠9¿≠f¿≠ñ¿≠¥¿≠“¿≠Ô¿Æ¿Æ$¿Æ3¿ÆH¿Æg¿Æï¿Æ¡¿Æœ¿Ø¿Ø¿Ø¿Ø,¿Øg¿Øí¿Øƒ¿Ø„¿∞(¿∞;¿∞E¿∞G¿∞T¿∞f¿∞≥¿∞È¿∞Î¿±*¿±h¿±o¿±t¿±w¿±y¿±∞¿±¿≤¿≤?¿≤Å¿≤§¿≤»¿≤ı¿≥¿≥&¿≥O¿≥d¿≥p¿≥r¿≥≥¿≥Ÿ¿≥€¿≥ı¿¥G¿¥I¿¥Ü¿¥à¿¥¡¿¥ˇ¿µ&¿µ(¿µ?¿µT¿µì¿µœ¿µ÷¿µ€¿µ›¿∂ ¿∂-¿∂S¿∂m¿∂©¿∂Æ¿∂∞¿∂Ù¿∑¿∑¿∑S¿∑h¿∑m¿∑o¿∑|¿∑π¿∑›¿∑¯¿∏¿∏$¿∏&¿∏E¿∏d¿∏ù¿∏À¿∏Õ¿∏È¿π ¿π"¿πQ¿πr¿π≠¿πØ¿π˚¿∫1¿∫W¿∫¶¿∫®¿∫˘¿ª¿ªh¿ªñ¿ª≥¿ªÁ¿º	¿ºE¿ºG¿ºt¿º¨¿ºÕ¿Ω¿Ω¿Ω¿Ω¿Ω=¿Ω_¿Ωå¿Ω¨¿ΩÆ¿Ω–¿Ω˛¿æ¿æ¿æ¿æF¿æg¿æn¿æp¿æñ¿æõ¿æù¿æÏ¿ø¿øS¿ø}¿ø√¿¿¿¿¿¿¿¿S¿¿o¿¿à¿¿ú¿¿¥¿¿ª¿¿È¿¿˚¿¡ ¿¡%¿¡(¿¡*¿¡z¿¡å¿¡œ¿¬¿¬ ¿¬B¿¬r¿¬ò¿¬∑¿¬“¿¬˝¿√!¿√B¿√c¿√É¿√ò¿√∂¿√æ¿√Ÿ¿√¯¿ƒ¿ƒ6¿ƒK¿ƒv¿ƒô¿ƒº¿ƒŸ¿ƒ·¿ƒÊ¿ƒÈ¿ƒÎ¿≈.¿≈c¿≈´¿≈≤¿≈Ì¿∆¿∆¿∆^¿∆°¿∆È¿«¿«&¿«q¿«∑¿«”¿«⁄¿»¿»,¿»\¿»Ç¿»°¿»º¿»‡¿…¿…"¿…@¿…_¿…õ¿…∆¿ ¿ %¿ r¿ ™¿ ∫¿ ﬂ¿À¿À#¿ÀH¿Àv¿À≈¿Àı¿Ã	¿Ã?¿ÃR¿Ãm¿Ãv¿Ã£¿ÃÂ¿Õ¿ÕL¿Õ|¿Õó¿Õ¶¿ÕØ¿Õ±¿Õ÷¿Õ€¿Õ›¿Œ
¿Œ%¿Œ'¿Œ^¿ŒÉ¿ŒÖ¿ŒŒ¿ŒÌ¿ŒÔ¿œ=¿œè¿œµ¿œ∑¿–¿–'¿–P¿–R¿–z¿–ù¿–ü¿–÷¿—¿—¿—2¿—Q¿—S¿—ã¿—∫¿—º¿—…¿—›¿“.¿“F¿“ï¿““¿“ˇ¿”¿”+¿”H¿”\¿”~¿”É¿”Ö¿”í¿”•¿”«¿”Ã¿”Œ¿‘
¿‘K¿‘{¿‘ç¿‘î¿‘ô¿‘õ¿‘®¿‘º¿‘ﬁ¿’ ¿’¿’4¿’9¿’;¿’r¿’¿’∏¿÷¿÷"¿÷$¿÷t¿÷∏¿÷ﬁ¿◊)¿◊N¿◊U¿◊W¿◊ü¿◊º¿ÿ¿ÿ¿ÿ¿ÿR¿ÿs¿ÿü¿ÿ≠¿ÿË¿ÿÔ¿ÿÒ¿Ÿ¿ŸZ¿ŸÖ¿Ÿ∂¿ŸÛ¿⁄¿⁄/¿⁄\¿⁄ç¿⁄¿¿⁄Ã¿⁄Ù¿€#¿€3¿€S¿€z¿€É¿€ä¿€å¿€∞¿€Á¿€˛¿‹¿‹¿‹¿‹>¿‹Y¿‹s¿‹í¿‹¥¿‹’¿‹Ò¿›¿› ¿›@¿›W¿›j¿›á¿›•¿›“¿›‘¿›ı¿ﬁ$¿ﬁY¿ﬁ~¿ﬁ¢¿ﬁ∫¿ﬂ¿ﬂ/¿ﬂJ¿ﬂ_¿ﬂÄ¿ﬂ†¿ﬂ«¿ﬂ˙¿ﬂ¸¿‡	¿‡3¿‡w¿‡ù¿‡º¿‡›¿‡Ï¿‡Û¿‡ı¿·¿·f¿·™¿·◊¿·˝¿‚B¿‚o¿‚∂¿‚‰¿‚Ú¿„@¿„`¿„í¿„Æ¿„Ò¿‰¿‰:¿‰l¿‰º¿‰‹¿Â¿Â+¿Âo¿Âê¿Âπ¿ÂÌ¿ÂÙ¿Âˆ¿Ê
¿ÊK¿Ên¿Ê†¿Ê≈¿Êˇ¿ÁC¿Áp¿Áç¿Áﬂ¿Ë¿ËI¿Ëp¿Ëæ¿È ¿È¿È	¿È?¿È¿È¬¿È˘¿Í¿Í"¿Ím¿Ít¿Íy¿Í{¿Íß¿Í∆¿ÍÊ¿Î¿ÎI¿ÎÉ¿Î∏¿ÎΩ¿Îø¿Îﬁ¿ÎÙ¿Ï¿Ï¿Ï<¿Ï\¿Ïq¿Ïâ¿Ï†¿Ïﬂ¿Ì¿Ì.¿ÌM¿Ì~¿Ì¢¿Ìø¿Ìﬁ¿Ì˝¿Ìˇ¿Ó/¿ÓH¿ÓY¿Ój¿Ó∫¿Ó“¿Ó‘¿Ô¿Ô)¿Ôy¿Ôò¿Ôö¿Ô ¿ÔÃ¿¿>¿\¿®¿œ¿„¿Ò"¿ÒT¿Òî¿Òõ¿Òù¿ÒÂ¿Ú¿Ú3¿Úr¿Úy¿Ú¶¿ÚÛ¿Û9¿Ûe¿Û£¿ÛÈ¿Ù¿ÙT¿Ùz¿Ùß¿Ù„¿ı¿ı.¿ıS¿ıï¿ıû¿ı•¿ıß¿ıÊ¿ıÎ¿ıÌ¿ˆ2¿ˆz¿ˆ®¿ˆ„¿ˆÂ¿˜¿˜F¿˜n¿˜Å¿˜–¿¯ ¿¯5¿¯U¿¯n¿¯p¿¯á¿¯‘¿¯Û¿˘#¿˘%¿˘w¿˘§¿˘¿˙¿˙b¿˙ó¿˙”¿˙Ú¿˚"¿˚i¿˚â¿˚•¿˚¨¿˚Æ¿˚˙¿¸¿¸@¿¸å¿¸ì¿¸ï¿¸¬¿˝¿˝2¿˝H¿˝ñ¿˝€¿˛¿˛+¿˛y¿˛æ¿ˇ¿ˇ3¿ˇq¿ˇó¿ˇƒ¿  ¿ $¿ K¿ p¿ æ¿ «¿ Œ¿ –¿¿¿1¿k¿ä¿ú¿“¿¿0¿T¿¢¿´¿π¿¿¿+¿4¿w¿ô¿Â¿Ï¿Ò¿Û¿¿Y¿q¿ß¿‹¿¿@¿t¿å¿ë¿ì¿†¿”¿Â¿Í¿Ï¿<¿é¿‡¿¿¿D¿^¿à¿ê¿ï¿ó¿§¿‡¿Ú¿˜¿˘¿;¿v¿õ¿º¿‹¿	¿	8¿	[¿	Ö¿	√¿
¿
1¿
=¿
H¿
O¿
Q¿
o¿
t¿
w¿
y¿
√¿¿3¿K¿k¿n¿p¿¿¿¿<¿á¿£¿Õ¿“¿‘¿È¿0¿v¿Ω¿¿P¿ó¿ö¿ú¿›¿˛¿P¿o¿º¿€¿ı¿˙¿¿H¿M¿]¿`¿b¿}¿¬¿›¿¿*¿5¿H¿Z¿p¿ó¿∑¿Ã¿Œ¿¿¿?¿K¿ù¿›¿‚¿
¿ ¿6¿N¿f¿m¿o¿£¿Á¿(¿A¿[¿É¿´¿Ê¿7¿<¿>¿É¿¥¿∑¿π¿¿X¿†¿Í¿<¿i¿õ¿…¿¸¿+¿_¿ë¿»¿¿f¿¿Ç¿Ñ¿¿¿Â¿1¿n¿ö¿ü¿°¿Ÿ¿‹    %    J  s  Äú  Ä∆  Ä  Å  ÅM ÅmÅ|Å  Å¥  ÅÚ  Ç(  Çi  Çï  Çƒ  Ç˙  É1  Éf  Éü  É’  Ñ   Ñ,  ÑT  Ñq  Ñì  Ñ√  ÑÔ  Ö  ÖE  Ör  Ö¢  Ö“  Ö˜  Ü(  ÜS  Ü~    àz¿¢Íó˜è/// A material design calendar.
///
/// Used to scheduling and managing events.
///
/// The [SfCalendar] has built-in configurable views that provide basic
/// functionalities for scheduling and representing [Appointment]'s or events
/// efficiently. It supports [minDate] and [maxDate] to restrict the date
/// selection.
///
/// By default it displays [CalendarView.day] view with current date visible.
///
/// To navigate to different views set [CalendarController.view] property in
/// [controller] with a desired [CalendarView].
///
/// Available view types is followed by:
/// * [CalendarView.day]
/// * [CalendarView.week]
/// * [CalendarView.workWeek]
/// * [CalendarView.month]
/// * [CalendarView.timelineDay]
/// * [CalendarView.timelineWeek]
/// * [CalendarView.timelineWorkWeek]
/// * [CalendarView.timelineMonth]
/// * [CalendarView.schedule]
///
/// ![different views in calendar](https://help.syncfusion.com/flutter/calendar/images/overview/multiple_calenda_views.png)
///
/// To restrict the date navigation and selection interaction use [minDate],
/// [maxDate], the dates beyond this will be restricted.
///
/// Set the [Appointment]'s or custom events collection to [dataSource] property
/// by using the [CalendarDataSource].
///
/// When the visible view changes the widget calls the [onViewChanged] callback
/// with the current view visible dates.
///
/// When an any of [CalendarElement] tapped the widget calls the [onTap]
/// callback with selected date, appointments and selected calendar element
/// details.
///
/// _Note:_ The calendar widget allows to customize its appearance using
/// [SfCalendarThemeData] available from [SfCalendarTheme] widget or the
/// [SfTheme.calendarTheme] widget.
/// It can also be customized using the properties available in
/// [CalendarHeaderStyle][ViewHeaderStyle][MonthViewSettings]
/// [TimeSlotViewSettings][MonthCellStyle], [AgendaStyle].
///
/// {@youtube 560 315 https://www.youtube.com/watch?v=3OROjbAQS8Y}
///
/// See also:
/// * [SfCalendarThemeData], to set consistent look for calendar elements.
/// * [CalendarHeaderStyle], to customize the header view of the calendar.
/// * [ViewHeaderStyle], to customize the view header view of the calendar.
/// * [MonthViewSettings], to customize the month view of the calendar.
/// * [TimeSlotViewSettings], to customize the timeslot views of the calendar.
/// * [ResourceViewSettings], to customize the resource view of the calendar.
/// * [ScheduleViewSettings], to customize the schedule view of the calendar.
/// * [MonthCellStyle], to customize the month cells of the calendar.
/// * [AgendaStyle], to customize the month agenda view of the calendar.
/// * [showDatePickerButton], to show date picker for quickly navigating to a
/// different date.
/// * [allowedViews], to show list of calendar views on header view for quick
/// navigation.
/// * [SfDateRangePicker], material widget, which used to select date, dates,
/// range, and ranges of dates.
///
///
/// ```dart
///Widget build(BuildContext context) {
///   return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        dataSource: _getCalendarDataSource(),
///      ),
///    );
///  }
///
/// class DataSource extends CalendarDataSource {
///  DataSource(List<Appointment> source) {
///    appointments = source;
///  }
/// }
///
///  DataSource _getCalendarDataSource() {
///    List<Appointment> appointments = <Appointment>[];
///    appointments.add(
///        Appointment(
///          startTime: DateTime.now(),
///          endTime: DateTime.now().add(
///              Duration(hours: 2)),
///          isAllDay: true,
///          subject: 'Meeting',
///          color: Colors.blue,
///          startTimeZone: '',
///          endTimeZone: '',
///        ));
///
///    return DataSource(appointments);
///  }
///  ``` òå# ôäôîÅP/// Creates a [SfCalendar] widget, which used to scheduling and managing
/// events.
///
/// By default it displays [CalendarView.day] view with current date visible.
///
/// To navigate to different views set [view] property with a desired
/// [CalendarView].
///
/// Use [DataSource] property to set the appointments to the scheduler.9ôúô¢  ô´ô±  ôŒô‘  ôÏôÚ  ö	ö  ö*ö0  öIöO  öcöi  ö~öÑ  öôöü  öØöµ  ö√ö…  ö‚öË  ö˚
õ  õõ  õ#õ)  õAõG  õWõ]  õ|õÇ  õï#õõ  õøõ≈  õ€õ·  õ˘õˇ  úú  ú2.ú8  úg.úm  úú8ú¢  ú€8ú·  ù2ù   ùSù^  ùvù|  ùï8ùõ  ù‘ùﬂ  ùÏù˜  ûÄ¶û
  û± û∑  ûÿ!ûﬁ  ü  ü  ü'$ü-  üRüX  üq1üw  ü©üØ  ü¡ü«  ü€ü·  ü¸†  ††$  †@.†F  †u†{  †ö#††  †ƒ†   †Ë†Ó  °°  °/°5  °S6°Y  °ê°ñ  °ß°≠  °ø°≈  Äæô∑ô√ôƒô‰ö ö!ö"úEúKú^ú_ú~úÑúìúîú∏úæú“ú”ú˜ú˝ùùù3ù9ùJùKù±ù∑ùÀùÃû û&û/û©û?û:ûAûGûHû`ûXûbûcûyûoû{ûÖûÜûüûïû°ûÃûÙüüGühüiüãüùüû†4†W†]†l†m†∏°G°n°t°á°à°ÿ°ﬁ¢	°Û°Ó°ﬂ°Ò¢°ˆ¢¢¢¢-¢)¢¢,¢9¢?¢V¢Q¢@¢T¢U¢b¢h¢®¢å¢y¢q¢i¢t¢Ñ¢|¢á¢è¢ñ¢ó¢ü¢ß¢†¢¥¢∫¢˘¢ﬁ¢À¢√¢ª¢∆¢÷¢Œ¢Ÿ¢·¢Ë¢È¢¢¯¢Ò£££ £££££?£,£T£A£d£l£√£m£u£v£y£z£{£|£Ç£ä£ã£é£è£ê£ë£©£±£≤£µ£∂£∑£∏£Ω£¡£◊£œ£·£Ÿ£‰£Ï£Ô£Ì§£˚§§§§§%§§§#§1§6§?§:§7§<8§Gä≠Æﬂâ◊/// A builder that sets the widget to display on the calendar widget when
/// the appointments are being loaded.
///
/// This callback will be called when a view or resource collection changed,
/// and when calendar reaches start or end scroll position in schedule view.
/// With this builder, you can set widget and then initiate the process of
/// loading more appointments by calling ‚ÄòloadMoreAppointments‚Äô callback
/// which is passed as a parameter to this builder. The ‚ÄòloadMoreAppointments‚Äô
/// will in turn call the [CalendarDataSource.handleLoadMore' method, where
/// you have to load the appointments.
///
/// The widget returned from this builder will be rendered based on calendar
/// widget width and height.
///
/// _Note:_ This callback will be called after the onViewChanged callback.
/// The widget returned from this builder will be removed from [SfCalendar]
/// when [CalendarDataSource.notifyListeners] is called.
///
/// See also:
/// * [CalendarDataSource.handleLoadMore], to handle the appointment loading,
/// when the indicator is displaying.
/// * [CalendarDataSource.notifyListeners], to add, remove or reset the
/// appointment collection.
/// * Knowledge base: [How to load appointments on demand](https://www.syncfusion.com/kb/12658/how-to-load-appointments-on-demand-in-flutter-calendar)
///
/// ``` dart
/// @override
///  Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///            controller: _controller,
///            dataSource: _dataSource(),
///            loadMoreWidgetBuilder: (BuildContext context,
///                   LoadMoreCallback loadMoreAppointments) {
///              return FutureBuilder<void>(
///                initialData: 'loading',
///                future: loadMoreAppointments(),
///                builder: (context, snapShot) {
///                    return Container(
///                        height: _controller.view == CalendarView.schedule
///                           ? 50
///                           : double.infinity,
///                        width: double.infinity,
///                        color: Colors.white38,
///                        alignment: Alignment.center,
///                        child: CircularProgressIndicator(
///                            valueColor:
///                               AlwaysStoppedAnimation(Colors.deepPurple)));
///                },
///              );
///            },
///      ),
///    );
///  }
///
/// ``` Æ˚ÑD≥3ÉÃ/// The list of [CalendarView]s that should be displayed in the header for
/// quick navigation.
///
/// Defaults to null.
///
/// See also:
/// * [SfCalendar.onViewChanged], the callback to notify that the view
/// changed, this also contains the visible dates collection.
/// * [view], to specify the view to be rendered on initially in calendar.
/// * [CalendarController.view], to change the calendar view dynamically.
/// * Knowledge base: [How to do date navigates easily](https://www.syncfusion.com/kb/12019/how-to-do-date-navigations-easily-with-flutter-calendar)
///
/// ``` dart
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        allowedViews: [ CalendarView.day,
///                        CalendarView.week,
///                        CalendarView.month,
///                        CalendarView.schedule
///                     ],
///      ),
///    );
///  }
///
/// ``` ≥FÉ∂RÇ∏/// Determines whether view switching is allowed among [CalendarView]s on
/// interaction.
///
/// Defaults to 'false'.
///
/// See also:
/// * [showDatePickerButton], to show date picker for quickly navigating to a
/// different date.
/// * [allowedViews] to show list of calendar views on header view for quick
/// navigation.
/// * Knowledge base: [How to switch between views](https://www.syncfusion.com/kb/10944/how-to-switch-between-views-of-the-flutter-calendar)
///
/// ``` dart
///
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///      view: CalendarView.month,
///      allowViewNavigation: true,
///      ),
///    );
///  }
///
/// ``` ∂lÉ‡∫8Éu/// Displays the date picker when the [SfCalendar] header date is tapped.
///
/// The date picker will be used for quick date navigation in [SfCalendar].
/// It also shows Today navigation button on header view.
///
/// Defaults to `false`.
///
/// see also:
/// * [allowedViews] to show list of calendar views on header view for quick
/// navigation.
/// * [SfDateRangePicker], material widget which displays on the header of
/// calendar, when the header date tapped.
/// * [How to add indicator in month cells of date range picker](https://www.syncfusion.com/kb/12119/how-to-add-the-indicator-in-the-month-cells-of-the-date-range-picker-sfdaterangepicker-when)
///
/// ``` dart
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///      view: CalendarView.day,
///      showDatePickerButton: true,
///      ),
///    );
///  }
///
/// ``` ∫SÇ[ºñÅ˚/// Displays an indicator that shows the current time in the time slot views
/// of [SfCalendar]. By default, the indicator color matches the
/// [todayHighlightColor].
///
/// Defaults to `true`.
///
/// see also:
/// * [todayHighlightColor], to customize the color of the indicator.
///
///
/// ``` dart
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        showCurrentTimeIndicator: true),
///    );
///  }
///
/// ``` ºµÉ‚¿ @ìÉ|/// Defines the view for the [SfCalendar].
///
/// Defaults to `CalendarView.day`.
///
/// See also:
/// * [CalendarView], to know about available calendar views.
/// * [SfCalendar.onViewChanged], the callback to notify that the view
/// changed, this also contains the visible dates collection.
/// * [CalendarController.view], to change the calendar view dynamically.
/// * [showDatePickerButton], to show date picker for quickly navigating to a
/// different date.
/// * [allowedViews] to show list of calendar views on header view for quick
/// navigation.
/// * Knowledge base: [How to switch between views](https://www.syncfusion.com/kb/10944/how-to-switch-between-views-of-the-flutter-calendar)
///
///
/// ``` dart
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///      ),
///    );
///  }
///
///  ``` ¿ @ûÑd¿ D˚Éˆ/// The minimum date as much as the [SfCalendar] will navigate.
///
/// The [SfCalendar] widget will navigate as minimum as to the given date,
/// and the dates before that date will be disabled for interaction and
/// navigation to those dates were restricted.
///
/// Defaults to `1st  January of 0001`.
///
/// _Note:_ If the [initialDisplayDate] property set with the date prior to
/// this date, the [SfCalendar] will take this date as a display date and
/// render dates based on the date set to this property.
///
/// See also:
/// * [initialDisplayDate], the date which displayed initially on calendar.
/// * [maxDate], which is the maximum available date for the calendar.
/// * [CalendarController.displayDate], which move to the desired date
/// dynamically.
///
/// ``` dart
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        minDate: new DateTime(2019, 12, 14, 9, 0, 0),
///      ),
///    );
///  }
///
///  ``` ¿ E	Ñj¿ IlÉ˘/// The maximum date as much as the [SfCalendar]  will navigate.
///
/// The [SfCalendar] widget will navigate as maximum as to the given date,
/// and the dates after that date will be disabled for interaction and
/// navigation to those dates were restricted.
///
/// Defaults to `31st December of 9999`.
///
/// _Note:_ If the [initialDisplayDate] property set with the date after to
/// this date, the [SfCalendar] will take this date as a display date and
/// render dates based on the date set to this property.
///
/// See also:
/// * [initialDisplayDate], the date which displayed initially on calendar.
/// * [minDate], which is the least available date for the calendar.
/// * [CalendarController.displayDate], which move to the desired date
/// dynamically.
///
/// ``` dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        maxDate: new DateTime(2020, 01, 15, 9, 0, 0),
///      ),
///    );
///  }
///
///  ``` ¿ IzÑÙ¿ N^Ñq/// A builder that builds a widget, replaces the month cell in the
/// calendar month view.
///
/// See also:
/// * [MonthViewSettings.appointmentDisplayMode], to customize the appointment
/// display mode in the month cell.
/// * [appointmentBuilder], to build custom widget for appointments in
/// calendar.
/// * Knowledge base: [How to customize month cells](https://www.syncfusion.com/kb/12016/how-to-customize-the-month-cells-of-the-flutter-calendar)
/// * Knowledge base: [How to customize month cell with appointment count](https://www.syncfusion.com/kb/12306/how-to-customize-the-month-cell-with-appointment-count-in-the-flutter-calendar)
///
/// ```dart
///@override
///  Widget build(BuildContext context) {
///    return Scaffold(
///        body: Container(
///            child: SfCalendar(
///      view: CalendarView.month,
///      monthCellBuilder:
///           (BuildContext buildContext, MonthCellDetails details) {
///        return Container(
///          color: Colors.red,
///          child: Text(
///            details.date.day.toString(),
///          ),
///        );
///      },
///    )));
///  }
///  ``` ¿ Nuë ¿ _cèÃ/// A builder that builds a widget, replaces the appointment view in a day,
/// week, workweek, month, schedule and timeline day, week, workweek,
/// month views.
///
/// _Note:_ In month view, this builder callback will be used to build
/// appointment views for appointments displayed in both month cell and
/// agenda views when the MonthViewSettings.appointmentDisplayMode is
/// set to appointment.
///
/// See also:
/// * [CalendarDataSource], to set and handle the appointments in the calendar
/// * [Appointment], to know more about the appointment and it's properties in
/// calendar.
/// * [appointmentTextStyle], to customize the appointment text, when the
/// builder not added.
/// * Knowledge base: [How to customize appointment using builder](https://www.syncfusion.com/kb/12191/how-to-customize-the-appointments-using-custom-builder-in-the-flutter-calendar)
///
/// ```dart
/// CalendarController _controller = CalendarController();
///
///  @override
///  Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///          view: CalendarView.day,
///          controller: _controller,
///          appointmentBuilder: (BuildContext context,
///              CalendarAppointmentDetails calendarAppointmentDetails) {
///            if (calendarAppointmentDetails.isMoreAppointmentRegion) {
///              return Container(
///                width: calendarAppointmentDetails.bounds.width,
///                height: calendarAppointmentDetails.bounds.height,
///                child: Text('+More'),
///              );
///            } else if (_controller.view == CalendarView.month) {
///              final Appointment appointment =
///                  calendarAppointmentDetails.appointments.first;
///              return Container(
///                  decoration: BoxDecoration(
///                      color: appointment.color,
///                      shape: BoxShape.rectangle,
///                      borderRadius: BorderRadius.all(Radius.circular(4.0)),
///                      gradient: LinearGradient(
///                          colors: [Colors.red, Colors.cyan],
///                          begin: Alignment.centerRight,
///                          end: Alignment.centerLeft)),
///                  alignment: Alignment.center,
///                  child: appointment.isAllDay
///                      ? Text('${appointment.subject}',
///                          textAlign: TextAlign.left,
///                          style: TextStyle(
///                          color: Colors.white, fontSize: 10))
///                      : Column(
///                          mainAxisAlignment: MainAxisAlignment.center,
///                          children: [
///                            Text('${appointment.subject}',
///                                textAlign: TextAlign.left,
///                                style: TextStyle(
///                                    color: Colors.white, fontSize: 10)),
///                            Text(
///                                '${DateFormat('hh:mm a').
///                                   format(appointment.startTime)} - ' +
///                                    '${DateFormat('hh:mm a').
///                                       format(appointment.endTime)}',
///                                textAlign: TextAlign.left,
///                                style: TextStyle(
///                                    color: Colors.white, fontSize: 10))
///                          ],
///                        ));
///            } else {
///              final Appointment appointment =
///                  calendarAppointmentDetails.appointments.first;
///              return Container(
///                width: calendarAppointmentDetails.bounds.width,
///                height: calendarAppointmentDetails.bounds.height,
///                child: Text(appointment.subject),
///              );
///            }
///          },
///        ),
///      ),
///    );
///  }
///  ``` ¿ _|àÎ¿ hVà/// A builder that builds a widget that replaces the time region view in day,
/// week, workweek, and timeline day, week, workweek views.
///
/// See also:
/// * [specialRegions], to set the special time regions in the calendar.
/// * [TimeRegion], to now the details about the special time regions and it's
/// properties in calendar.
/// * Knowledge base: [How to customize special regions with builder](https://www.syncfusion.com/kb/12192/how-to-customize-the-special-time-region-using-custom-builder-in-the-flutter-calendar)
///
///
/// ```dart
///
/// List<TimeRegion> _getTimeRegions() {
///    final List<TimeRegion> regions = <TimeRegion>[];
///    DateTime date = DateTime.now();
///    date = DateTime(date.year, date.month, date.day, 12, 0, 0);
///    regions.add(TimeRegion(
///        startTime: date,
///        endTime: date.add(Duration(hours: 2)),
///        enablePointerInteraction: false,
///        color: Colors.grey.withOpacity(0.2),
///        text: 'Break'));
///
///    return regions;
///  }
///
///  @override
///  Widget build(BuildContext context) {
///    return MaterialApp(
///        home: Scaffold(
///      body: SfCalendar(
///        view: CalendarView.day,
///        specialRegions: _getTimeRegions(),
///        timeRegionBuilder:
///            (BuildContext context, TimeRegionDetails timeRegionDetails) {
///          return Container(
///            margin: EdgeInsets.all(1),
///            alignment: Alignment.center,
///            child: Text(
///              timeRegionDetails.region.text!,
///              style: TextStyle(color: Colors.black),
///            ),
///            decoration: BoxDecoration(
///                shape: BoxShape.rectangle,
///                borderRadius: BorderRadius.all(Radius.circular(4.0)),
///                gradient: LinearGradient(
///                    colors: [timeRegionDetails.region.color!, Colors.cyan],
///                    begin: Alignment.centerRight,
///                    end: Alignment.centerLeft)),
///          );
///        },
///      ),
///    ));
///  }
///  ``` ¿ hnã‘¿ t2ä›/// Date format of the header date text of [SfCalendar]
///
/// The provided format must match any one of our supported skeletons.
/// If it does not match, the provided string will be used as-is.
/// The supported sets of skeletons are as follows.
///
///      ICU Name                   Skeleton
///      --------                   --------
///      DAY                          d
///      ABBR_WEEKDAY                 E
///      WEEKDAY                      EEEE
///      ABBR_STANDALONE_MONTH        LLL
///      STANDALONE_MONTH             LLLL
///      NUM_MONTH                    M
///      NUM_MONTH_DAY                Md
///      NUM_MONTH_WEEKDAY_DAY        MEd
///      ABBR_MONTH                   MMM
///      ABBR_MONTH_DAY               MMMd
///      ABBR_MONTH_WEEKDAY_DAY       MMMEd
///      MONTH                        MMMM
///      MONTH_DAY                    MMMMd
///      MONTH_WEEKDAY_DAY            MMMMEEEEd
///      ABBR_QUARTER                 QQQ
///      QUARTER                      QQQQ
///      YEAR                         y
///      YEAR_NUM_MONTH               yM
///      YEAR_NUM_MONTH_DAY           yMd
///      YEAR_NUM_MONTH_WEEKDAY_DAY   yMEd
///      YEAR_ABBR_MONTH              yMMM
///      YEAR_ABBR_MONTH_DAY          yMMMd
///      YEAR_ABBR_MONTH_WEEKDAY_DAY  yMMMEd
///      YEAR_MONTH                   yMMMM
///      YEAR_MONTH_DAY               yMMMMd
///      YEAR_MONTH_WEEKDAY_DAY       yMMMMEEEEd
///      YEAR_ABBR_QUARTER            yQQQ
///      YEAR_QUARTER                 yQQQQ
///      HOUR24                       H
///      HOUR24_MINUTE                Hm
///      HOUR24_MINUTE_SECOND         Hms
///      HOUR                         j
///      HOUR_MINUTE                  jm
///      HOUR_MINUTE_SECOND           jms
///      HOUR_MINUTE_GENERIC_TZ       jmv
///      HOUR_MINUTE_TZ               jmz
///      HOUR_GENERIC_TZ              jv
///      HOUR_TZ                      jz
///      MINUTE                       m
///      MINUTE_SECOND                ms
///      SECOND                       s
///
/// Defaults to null.
///
/// See also:
/// * [onViewChanged], to get the current visible dates collection
/// * [headerHeight], to customize the size of the header view in calendar.
/// * [DateFormat], to know about the different available formats.
/// * Knowledge base: [How to change the month header format](https://www.syncfusion.com/kb/12550/how-to-change-the-month-header-format-in-the-flutter-calendar)
///
///
/// ``` dart
/// @override
/// Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///          view: CalendarView.month,
///            headerDateFormat: 'MMM,yyy',
///      ),
///     ),
///    );
///  }
/// ``` ¿ tIÑo¿ xöÉŸ/// A builder that builds a widget, replace the schedule month header
/// widget in calendar schedule view.
///
/// See also:
/// * [scheduleViewSettings], to customize the schedule view of calendar.
/// * Knowledge base: [Customize the schedule view month header using builder](https://www.syncfusion.com/kb/12064/how-to-customize-the-schedule-view-month-header-using-builder-in-the-flutter-calendar)
///
/// ```dart
/// @override
///  Widget build(BuildContext context) {
///    return Scaffold(
///        body: Container(
///            child: SfCalendar(
///      view: CalendarView.schedule,
///      scheduleViewMonthHeaderBuilder: (BuildContext buildContext,
///               ScheduleViewMonthHeaderDetails details) {
///        return Container(
///          color: Colors.red,
///          child: Text(
///            details.date.month.toString() + ' ,' +
///               details.date.year.toString(),
///          ),
///        );
///      },
///    )));
///  }
///  ``` ¿ xøÉ7¿ {ËÇ÷/// The first day of the week in the [SfCalendar].
///
/// Allows to change the first day of week in all possible views in calendar,
/// every view's week will start from the date set to this property.
///
/// Defaults to `7` which indicates `DateTime.sunday`.
///
/// See also:
/// * [showWeekNumber], to display the week number of the year.
/// * Knowledge base: [How to change the first day of week](https://www.syncfusion.com/kb/12222/how-to-change-the-first-day-of-week-in-the-flutter-calendar)
///
///
/// ``` dart
///
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        firstDayOfWeek: 3,
///      ),
///    );
///  }
///
///  ``` ¿ {˝Ñ~¿ ÄbÉ¸/// Defines the time format for appointment view text in [SfCalendar]
/// month agenda view and schedule view.
///
/// The specified time format applicable when calendar view is
/// [CalendarView.schedule] or [CalendarView.month].
///
/// The time formats specified in the below link are supported
/// Ref: https://api.flutter.dev/flutter/intl/DateFormat-class.html
///
/// Defaults to null.
///
/// See also:
/// * [DateFormat], to know more about the available formats.
/// * Knowledge base: [How to format appointment time](https://www.syncfusion.com/kb/11989/how-to-format-the-appointment-time-in-the-flutter-calendar)
///
/// ``` dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.month,
///        monthViewSettings: MonthViewSettings(
///            showAgenda: true,
///            navigationDirection: MonthNavigationDirection.horizontal),
///        appointmentTimeTextFormat: 'hh:mm a',
///      ),
///    );
///  }
///
///  ``` ¿ ÄÇÉ}¿ ÉÉ/// The color which fills the border of every calendar cells in [SfCalendar].
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
/// * [backgroundColor], which fills the background of the calendar.
/// * Knowledge base: [How to customize the cell border](https://www.syncfusion.com/kb/12118/how-to-customize-the-cell-border-in-the-flutter-calendar)
///
/// ``` dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        cellBorderColor: Colors.grey,
///      ),
///    );
///  }
///
///``` ¿ Ñàç¿ åáË/// The settings have properties which allow to customize the schedule view of
/// the [SfCalendar].
///
/// Allows to customize the [ScheduleViewSettings.monthHeaderSettings],
/// [ScheduleViewSettings.weekHeaderSettings],
/// [ScheduleViewSettings.dayHeaderSettings],
/// [ScheduleViewSettings.appointmentTextStyle],
/// [ScheduleViewSettings.appointmentItemHeight] and
/// [ScheduleViewSettings.hideEmptyScheduleWeek] in schedule view of calendar.
///
/// See also:
/// * [scheduleViewMonthHeaderBuilder], to customize the schedule view month
/// header with a custom widget.
/// * [ScheduleViewSettings], to know about the available customization
///  options for schedule view.
/// * Knowledge base: [How to customize appointment height in schedule view](https://www.syncfusion.com/kb/12226/how-to-customize-the-appointment-height-in-schedule-view-of-the-flutter-calendar)
/// * Knowledge base: [How to customize day, week, month header of schedule view](https://www.syncfusion.com/kb/12178/how-to-customize-the-day-week-month-header-of-schedule-view-in-the-flutter-calendar)
/// * Knowledge base: [How to customize schedule view month header with builder](https://www.syncfusion.com/kb/12064/how-to-customize-the-schedule-view-month-header-using-builder-in-the-flutter-calendar)
/// * Knowledge base: [How to view schedule](https://www.syncfusion.com/kb/11803/how-to-view-schedule-in-the-flutter-calendar)
/// * Knowledge base: [How to customize the schedule view](https://www.syncfusion.com/kb/11795/how-to-customize-the-schedule-view-in-the-flutter-calendar)
///
/// ``` dart
///
/// @override
///  Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.schedule,
///        scheduleViewSettings: ScheduleViewSettings(
///            appointmentItemHeight: 60,
///            weekHeaderSettings: WeekHeaderSettings(
///              height: 40,
///              textAlign: TextAlign.center,
///            )),
///      ),
///    );
///  }
///
///  ``` ¿ åöÖü¿ í.Ö/// Sets the style for customizing the [SfCalendar] header view.
///
/// Allows to customize the [CalendarHeaderStyle.textStyle],
/// [CalendarHeaderStyle.textAlign] and
/// [CalendarHeaderStyle.backgroundColor] in header view of calendar.
///
/// ![header with different style in calendar](https://help.syncfusion.com/flutter/calendar/images/headers/header-style.png)
///
/// See also:
/// * [CalendarHeaderStyle], to know about the available customization options
/// for header view.
/// * [headerHeight], to customize the size of the header view in calendar.
/// * [headerDateFormat], to format the date string in the header view of
/// calendar.
/// * Knowledge base: [How to style a header](https://www.syncfusion.com/kb/12144/how-to-style-a-header-in-the-flutter-calendar)
/// * Knowledge base: [How to add custom header and view header](https://www.syncfusion.com/kb/10997/how-to-add-custom-header-and-view-header-in-the-flutter-calendar)
///
/// ```dart
///Widget build(BuildContext context) {
///  return Container(
///  child: SfCalendar(
///      view: CalendarView.week,
///      headerStyle: CalendarHeaderStyle(
///          textStyle: TextStyle(color: Colors.red, fontSize: 20),
///          textAlign: TextAlign.center,
///          backgroundColor: Colors.blue),
///    ),
///  );
///}
/// ``` ¿ í@Üw¿ ò®ÖÒ/// Sets the style to customize [SfCalendar] view header.
///
/// Allows to customize the [ViewHeaderStyle.backgroundColor],
/// [ViewHeaderStyle.dayTextStyle] and [ViewHeaderStyle.dateTextStyle] in view
/// header of calendar.
///
/// ![view header with different style in calendar](https://help.syncfusion.com/flutter/calendar/images/headers/viewheader-style.png)
///
/// See also:
/// * [ViewHeaderStyle], to know about the available customization options for
/// view header view in calendar.
/// * [viewHeaderHeight], to customize the size of the view header view in
/// calendar.
/// * Knowledge base: [How to format day and date of view header](https://www.syncfusion.com/kb/12339/how-to-format-the-view-header-day-and-date-in-the-flutter-calendar)
/// * Knowledge base: [How to add custom header and view header](https://www.syncfusion.com/kb/10997/how-to-add-custom-header-and-view-header-in-the-flutter-calendar)
/// * Knowledge base: [How to highlight tapped date in view header](https://www.syncfusion.com/kb/12469/how-to-highlight-the-tapped-view-header-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        viewHeaderStyle: ViewHeaderStyle(
///            backgroundColor: Colors.blue,
///            dayTextStyle: TextStyle(color: Colors.grey, fontSize: 20),
///            dateTextStyle: TextStyle(color: Colors.grey, fontSize: 25)),
///      ),
///    );
///  }
///
/// ``` ¿ òæÑ¿ úπÉü/// The height for header view to layout within this in calendar.
///
/// Defaults to `40`.
///
/// ![header height as 100 in calendar](https://help.syncfusion.com/flutter/calendar/images/headers/header-height.png)
///
/// See also:
/// * [headerStyle] to know about the available customization options
/// for header view.
/// * [headerDateFormat], to format the date string in the header view of
/// calendar.
/// * Knowledge base: [How to style a header](https://www.syncfusion.com/kb/12144/how-to-style-a-header-in-the-flutter-calendar)
/// * Knowledge base: [How to add custom header and view header](https://www.syncfusion.com/kb/10997/how-to-add-custom-header-and-view-header-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        headerHeight: 100,
///      ),
///    );
///  }
///
/// ``` ¿ úÃÑ*¿ †ËÉΩ/// Adds padding at the right end of a cell to interact when the calendar
/// cells have appointments.
///
/// defaults to '-1'.
///
/// _Note:_ This is not applicable for month agenda and schedule view
/// appointments.
///
/// See also:
/// * [onTap], to get the tapped elements, date and other details, when an
/// element tapped in calendar.
/// * [onLongPress], to get the tapped elements, date and other details when
/// an element long tapped in calendar.
/// * [dataSource], to set and handle appointments with calendar.
/// * Knowledge base: [How to interact with calendar cell when appointments loaded](https://www.syncfusion.com/kb/12218/how-to-interact-with-event-calendar-cell-when-appointments-loaded-in-the-flutter-calendar)
///
/// ``` dart
///  Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        cellEndPadding: 5,
///      ),
///    );
///  }
///
/// ``` ¿ †˝Ü8¿ ß!Ö§/// The text style for the text in the [Appointment] view in [SfCalendar].
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// _Note:_ This style doesn't apply for the appointment's in the agenda view
/// of month view, for agenda view appointments styling can be achieved by
/// using the [MonthViewSettings.agendaStyle.appointmentTextStyle].
///
/// See also:
/// * [AgendaStyle], to customize the agenda view of month view in calendar.
/// * [dataSource], to set and handle the appointments for calendar.
/// * [appointmentBuilder], to set an custom widget for the appointment UI.
/// * [Appointment], to know more about the appointment and it's properties in
/// calendar.
/// * [appointmentTimeTextFormat], to customize the time text format in the
/// appointment view of calendar.
/// * Knowledge base: [How to style appointments](https://www.syncfusion.com/kb/12162/how-to-style-the-appointment-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.workWeek,
///        appointmentTextStyle: TextStyle(
///                fontSize: 12,
///                fontWeight: FontWeight.w500,
///                color: Colors.blue,
///                fontStyle: FontStyle.italic)
///      ),
///    );
///  }
///
///  ``` ¿ ß<Ñ∞¿ ´‹ÑG/// The height of the view header to the layout within this in [SfCalendar].
///
/// Defaults to `-1`.
///
/// ![view header height as 100 in calendar](https://help.syncfusion.com/flutter/calendar/images/headers/viewheader-height.png)
///
/// See also:
/// * [viewHeaderStyle], to know about the available customization options for
/// view header view in calendar.
/// * Knowledge base: [How to format day and date of view header](https://www.syncfusion.com/kb/12339/how-to-format-the-view-header-day-and-date-in-the-flutter-calendar)
/// * Knowledge base: [How to add custom header and view header](https://www.syncfusion.com/kb/10997/how-to-add-custom-header-and-view-header-in-the-flutter-calendar)
/// * Knowledge base: [How to highlight tapped date in view header](https://www.syncfusion.com/kb/12469/how-to-highlight-the-tapped-view-header-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        viewHeaderHeight: 100,
///      ),
///    );
///  }
///
/// ``` ¿ ´ÛÑ¡¿ ∞°ÑC/// Color that highlights the today cell in [SfCalendar].
///
/// Allows to change the color that highlights the today cell in month view,
/// and view header of day/week/workweek, timeline view and highlights the date
/// in month agenda view in [SfCalendar].
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [showCurrentTimeIndicator], to display an indicator in the current time
/// of the day in calendar.
/// * [todayTextStyle], to customize the today text in calendar.
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
/// * Knowledge base: [How to customize the current day color](https://www.syncfusion.com/kb/12336/how-to-customize-the-current-day-color-in-the-flutter-calendar)
///
/// ```dart
///
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        todayHighlightColor: Colors.red,
///      ),
///    );
///  }
///
/// ``` ¿ ∞ªÜí¿ ∑?Ö˝/// The text style for the today text in [SfCalendar].
///
/// Defaults to null.
///
/// _Note:_ The [todayHighlightColor] will be set to the day text in the
/// view headers, agenda and schedule view of [SfCalendar].
///
/// The font size property will be applied from the text style properties of
/// view headers, agenda view and schedule views of [SfCalendar].
///
/// Eg: For today in view header, the font size will be applied from the
/// [viewHeaderStyle.dayTextStyle] property.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [todayHighlightColor], to customize the highlighting color of the today
/// cell in calendar.
/// * [ViewHeaderStyle], to know about the available customization options for
/// view header view in calendar.
/// * [ScheduleViewSettings], to know about the available customization
/// options for schedule view in calendar.
/// * [MonthViewSettings], to know about the available customization options
/// for month vie win calendar.
/// * To know more about the view header customization refer here [https://help.syncfusion.com/flutter/calendar/headers#view-header]
///
/// ```dart
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.month,
///        todayTextStyle: TextStyle(fontStyle: FontStyle.italic,
///                     fontSize: 17,
///                    color: Colors.red),
///       )
///    );
///  }
/// ``` ¿ ∑TÉ}¿ ∫¬É/// The background color to fill the background of the [SfCalendar].
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [cellBorderColor], will fill the cell border of the calendar.
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
/// * Knowledge base: [How to add an image as background](https://www.syncfusion.com/kb/12243/how-to-add-an-image-as-background-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        backgroundColor: Colors.transparent,
///      ),
///    );
///  }
///
/// ``` ¿ ∫ÿÑµ¿ øzÑ</// Displays the navigation arrows on the header view of [SfCalendar].
///
/// If this property set as [true] the header view of [SfCalendar] will
/// display the navigation arrows which used to navigate to the previous/next
/// views through the navigation icon buttons.
///
/// defaults to `false`.
///
/// _Note:_ Header view does not show arrow when calendar view as
/// [CalendarView.schedule]
///
/// See also:
/// * [CalendarController.forward], to navigate to next view of calendar
/// programmatically with animation.
/// * [CalendarController.backward], to navigate to previous view of calendar
/// programmatically with animation.
/// * Knowledge base: [How to navigate to the previous or next view using navigation arrows](https://www.syncfusion.com/kb/12247/how-to-navigate-to-the-previous-or-next-views-using-navigation-arrows-in-the-flutter)
///
///
/// ``` dart
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        showNavigationArrow: true,
///      ),
///    );
///  }
///
/// ``` ¿ øîÑ‚¿ ƒdÑ_/// Specifies the view navigation for [SfCalendar] to show dates for the next
/// or previous views.
///
/// Defaults to ViewNavigationMode.snap.
///
/// Not applicable when the [view] set as [CalendarView.schedule].
/// It will not impact scrolling timeslot views, [controller.forward],
/// [controller.backward] and [showNavigationArrow].
///
/// See also:
/// * [minDate], to restrict the navigation and interaction to the dates
/// before to this date in calendar.
/// * [maxDate], to restrict the navigation and interaction to the dates after
/// to this date in calendar.
/// * [showNavigationArrow], to enable the navigation arrow, which enables to
/// navigate to the next/previous view of calendar programmatically.
/// * Knowledge base: [How to restrict view navigation](https://www.syncfusion.com/kb/12554/how-to-restrict-the-view-navigation-in-the-flutter-calendar)
///
/// ``` dart
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.day,
///        viewNavigationMode: ViewNavigationMode.snap,
///      ),
///    );
///  }
///
/// ``` ¿ ƒ}ã§¿ –ä’/// The settings have properties which allow to customize the time slot views
/// of the [SfCalendar].
///
/// Allows to customize the [TimeSlotViewSettings.startHour],
/// [TimeSlotViewSettings.endHour], [TimeSlotViewSettings.nonWorkingDays],
/// [TimeSlotViewSettings.timeInterval],
/// [TimeSlotViewSettings.timeIntervalHeight],
/// [TimeSlotViewSettings.timeIntervalWidth],
/// [TimeSlotViewSettings.timeFormat], [TimeSlotViewSettings.dateFormat],
/// [TimeSlotViewSettings.dayFormat], and [TimeSlotViewSettings.timeRulerSize]
/// in time slot views of calendar.
///
/// See also:
/// * [monthViewSettings], to know more about the customization options for
/// the month view of calendar.
/// * [TimeSlotViewSettings], to know more about the customization options for
/// the month view of calendar.
/// * [scheduleViewSettings], to know more about the customization options for
/// the schedule view of calendar.
/// * [specialRegions], which allows to customize particular time region in
/// the time slot views of calendar.
/// * Knowledge base: [How to customize time label](https://www.syncfusion.com/kb/11008/how-to-customize-the-time-label-in-the-flutter-calendar)
/// * Knowledge base: [How to change the time interval width and height](https://www.syncfusion.com/kb/12322/how-to-change-the-time-interval-width-and-height-in-the-flutter-event-calendar-sfcalendar)
/// * Knowledge base: [How to set the arbitrary height to an appointment](https://www.syncfusion.com/kb/12279/how-to-set-the-arbitrary-height-to-appointments-in-the-flutter-calendar)
/// * Knowledge base: [How to auto fit the calendar to screen height](https://www.syncfusion.com/kb/12231/how-to-autofit-the-calendar-to-screen-height-in-the-flutter-calendar)
/// * Knowledge base: [How to customize the timeline appointment height](https://www.syncfusion.com/kb/12147/how-to-customize-the-timeline-appointment-height-in-the-flutter-calendar)
/// * Knowledge base: [How to change working days and hours](https://www.syncfusion.com/kb/12146/how-to-change-the-working-days-and-hours-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.workWeek,
///        timeSlotViewSettings: TimeSlotViewSettings(
///            startHour: 10,
///            endHour: 20,
///            nonWorkingDays: <int>[
///              DateTime.saturday,
///              DateTime.sunday,
///              DateTime.friday
///            ],
///            timeInterval: Duration(minutes: 120),
///            timeIntervalHeight: 80,
///            timeFormat: 'h:mm',
///            dateFormat: 'd',
///            dayFormat: 'EEE',
///            timeRulerSize: 70),
///      ),
///    );
///  }
///
/// ``` ¿ –(â7¿ ŸKàM/// The resource settings allows to customize the resource view of timeline
/// views.
///
/// See also:
/// * [CalendarResource], the object which contains the data for the resource
/// in calendar.
/// * [dataSource.resources], the collection of resource to be displayed in
/// the timeline views of [SfCalendar].
/// * [ResourceViewSettings], which contains options to customize the
/// resource view of calendar.
/// * [resourceViewHeaderBuilder], to set custom widget for the resource
/// header in the calendar.
/// * Knowledge base: [How to customize the resource view](https://www.syncfusion.com/kb/12351/how-to-customize-the-resource-view-in-the-flutter-calendar)
///
/// ```dart
///@override
///  Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.timelineMonth,
///        dataSource: _getCalendarDataSource(),
///        resourceViewSettings: ResourceViewSettings(
///            visibleResourceCount: 4,
///            size: 150,
///            displayNameTextStyle: TextStyle(
///                fontStyle: FontStyle.italic,
///                fontSize: 15,
///                fontWeight: FontWeight.w400)),
///      ),
///    );
///  }
///}
///
///class DataSource extends CalendarDataSource {
///  DataSource(List<Appointment> source,
///             List<CalendarResource> resourceColl) {
///    appointments = source;
///    resources = resourceColl;
///  }
///}
///
///DataSource _getCalendarDataSource() {
///  List<Appointment> appointments = <Appointment>[];
///  List<CalendarResource> resources = <CalendarResource>[];
///  appointments.add(Appointment(
///      startTime: DateTime.now(),
///      endTime: DateTime.now().add(Duration(hours: 2)),
///      isAllDay: true,
///      subject: 'Meeting',
///      color: Colors.blue,
///      resourceIds: <Object>['0001'],
///      startTimeZone: '',
///      endTimeZone: ''));
///
///  resources.add(
///      CalendarResource(displayName: 'John', id: '0001',
///                             color: Colors.red));
///
///  return DataSource(appointments, resources);
///}
///
/// ``` ¿ Ÿfãº¿ Âã/// The settings have properties which allow to customize the month view of
/// the [SfCalendar].
///
/// Allows to customize the [MonthViewSettings.dayFormat],
/// [MonthViewSettings.numberOfWeeksInView],
/// [MonthViewSettings.appointmentDisplayMode],
/// [MonthViewSettings.showAgenda],
/// [MonthViewSettings.appointmentDisplayCount], and
/// [MonthViewSettings.navigationDirection] in month view of calendar.
///
/// See also:
/// * [monthCellBuilder], to customize the month cell with custom widget in
/// calendar.
/// * [MonthViewSettings], to know more about the customization of month view
/// in calendar.
/// * [blackoutDates], which allows to restrict the interaction for a
/// particular date in month views of calendar.
/// * [blackoutDatesTextStyle], which used to customize the blackout dates
/// text style in the month view of calendar.
/// * Knowledge base: [How to customize agenda view height based on widget height](https://www.syncfusion.com/kb/11013/how-to-customize-agenda-view-height-based-on-the-flutter-calendar-widget-height)
/// * Knowledge base: [How to customize agenda item height](https://www.syncfusion.com/kb/11015/how-to-customize-the-agenda-item-height-in-the-flutter-calendar)
/// * Knowledge base: [How to show appointment in agenda view using programmatic date selection](https://www.syncfusion.com/kb/11525/how-to-show-the-appointment-in-agenda-view-using-the-programmatic-date-selection-in-the)
/// * Knowledge base: [How to customize the blackout dates](https://www.syncfusion.com/kb/11987/how-to-customize-the-blackout-dates-in-the-flutter-calendar)
/// * Knowledge base: [How to customize the leading and trailing dates](https://www.syncfusion.com/kb/11988/how-to-customize-the-leading-and-trailing-dates-of-the-month-cells-in-the-flutter-calendar)
/// * Knowledge base: [How to style the month cell](https://www.syncfusion.com/kb/12090/how-to-style-the-month-cell-in-the-flutter-calendar)
/// * Knowledge base: [How to change the number of weeks](https://www.syncfusion.com/kb/12157/how-to-change-the-number-of-weeks-in-the-flutter-calendar)
/// * Knowledge base: [How to customize the agenda view appointment](https://www.syncfusion.com/kb/12271/how-to-customize-the-agenda-view-appointment-using-the-style-properties-in-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.month,
///        monthViewSettings: MonthViewSettings(
///           dayFormat: 'EEE',
///           numberOfWeeksInView: 4,
///           appointmentDisplayCount: 2,
///           appointmentDisplayMode: MonthAppointmentDisplayMode.appointment,
///           showAgenda: false,
///           navigationDirection: MonthNavigationDirection.horizontal),
///      ),
///    );
///  }
///
/// ``` ¿ Â)Ü¿ Î#Öz/// Represents a list of dates, which are not eligible for
/// selection in [SfCalendar].
///
/// Defaults to null.
///
/// By default, specified dates are marked with a strike-through.
/// Styling of the blackout dates can be handled using the
/// [blackoutDatesTextStyle] property in [SfCalendar].
///
/// See also:
/// *[blackoutDatesTextStyle], to customize the blackout dates text in
/// calendar.
/// * Knowledge base: (How to update blackout dates using onViewChanged)[https://www.syncfusion.com/kb/12368/how-to-update-blackout-dates-using-onviewchanged-callback-in-the-flutter-calendar]
/// * Knowledge base: (How to add active dates)[https://www.syncfusion.com/kb/12073/how-to-add-active-dates-in-the-flutter-calendar]
/// * Knowledge base: (How to customize the blackout dates )[https://www.syncfusion.com/kb/12003/how-to-customize-the-blackout-dates-in-the-flutter-event-calendar-sfcalendar]
///
/// ```dart
///
/// Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///         view: CalendarView.month,
///         blackoutDates: <DateTime>[
///           DateTime.now().add(Duration(days: 2)),
///           DateTime.now().add(Duration(days: 3)),
///           DateTime.now().add(Duration(days: 6)),
///           DateTime.now().add(Duration(days: 7))
///          ]
///        ),
///      ),
///    );
///  }
///
/// ``` ¿ Î7ÜÕ¿ ÒÓÜ2/// Specifies the text style for the blackout dates text in [SfCalendar],
/// that can‚Äôt be selected.
/// The specified text style overrides existing date text styles(
/// [MonthCellStyle.trailingDatesTextStyle],
/// [MonthCellStyle.leadingDatesTextStyle] and [MonthCellStyle.textStyle])
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [blackoutDates], which will add blackout dates to the calendar.
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
/// * Knowledge base: (How to update blackout dates using onViewChanged)[https://www.syncfusion.com/kb/12368/how-to-update-blackout-dates-using-onviewchanged-callback-in-the-flutter-calendar]
/// * Knowledge base: (How to add active dates)[https://www.syncfusion.com/kb/12073/how-to-add-active-dates-in-the-flutter-calendar]
/// * Knowledge base: (How to customize the blackout dates )[https://www.syncfusion.com/kb/12003/how-to-customize-the-blackout-dates-in-the-flutter-event-calendar-sfcalendar]
///
///
/// ``` dart
///
/// Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///          view: CalendarView.month,
///          blackoutDatesTextStyle: TextStyle(
///             fontStyle: FontStyle.italic,
///              fontWeight: FontWeight.w500,
///              fontSize: 18,
///              color: Colors.black54
///          )
///        ),
///      ),
///    );
///  }
///
/// ``` ¿ ÚÖ[¿ ˜SÑœ/// The decoration for the selection cells in [SfCalendar].
///
/// Defaults to null.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// See also:
/// * [initialSelectedDate], to select date when calendar displays initially
/// * [CalendarController.selectedDate], to select date programmatically in
/// calendar in the runtime.
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
/// * Knowledge base: [How to customize the selection using decoration](https://www.syncfusion.com/kb/12245/how-to-customize-the-selection-using-decoration-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.month,
///        selectionDecoration: BoxDecoration(
///           color: Colors.transparent,
///             border:
///               Border.all(color: const Color.fromARGB(255, 68, 140, 255),
///                     width: 2),
///             borderRadius: const BorderRadius.all(Radius.circular(4)),
///             shape: BoxShape.rectangle,
///         ),
///      ),
///    );
///  }
///
/// ``` ¿ ˜mÜ¿ ˝mÖä/// The initial date to show on the [SfCalendar].
///
/// The [SfCalendar] will display the dates based on the date set to this
/// property.
///
/// Defaults to `DateTime(DateTime.now().year, DateTime.now().month,
/// DateTime.now().day, 08, 45, 0)`.
///
/// See also:
/// * [CalendarController.displayDate], to change the display date of calendar
/// programmatically on run time.
/// * [CalendarController.forward], to navigate to next view of calendar
/// programmatically.
/// * [CalendarController.backward], to navigate to previous view of calendar
/// Programmatically.
/// * [onViewChanged], the callback which will notify that the current visible
/// dates were changed in calendar.
/// * [initialSelectedDate], to selected date programmatically on calendar
/// initially.
/// * Knowledge base: [How to programmatically navigate to adjacent dates](https://www.syncfusion.com/kb/12654/how-to-programmatically-navigate-to-the-adjacent-dates-in-the-flutter-calendar)
/// * Knowledge base: [How to programmatically navigate to a date](https://www.syncfusion.com/kb/12139/how-to-programmatically-navigate-to-the-date-in-the-flutter-event-calendar-sfcalendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        initialDisplayDate: DateTime(2020, 02, 05, 10, 0, 0),
///      ),
///    );
///  }
///
/// ``` ¿ ˝ÜÑë¿Ñ/// The time zone for [SfCalendar] to function.
///
/// If the [Appointment.startTimeZone] and [Appointment.endTimeZone] set as
/// [null] the appointments will be displayed in UTC time based on the
/// time zone set to this property.
///
/// If the [Appointment.startTimeZone] and [Appointment.endTimeZone] set as
/// not [null] the appointments will be displayed based by calculating the
/// appointment's startTimeZone and endTimeZone based on the time zone set to
/// this property.
///
/// Defaults to null.
///
/// See also:
/// * [Appointment.startTimeZone], to handle time zone for appointment's start
/// time.
/// * [Appointment.endTimeZone], to handle time zone for appointment's end
/// time.
/// * [The documentation for time zone](https://help.syncfusion.com/flutter/calendar/timezone)
///
///
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        timeZone: 'Atlantic Standard Time',
///      ),
///    );
///  }
///
/// ``` ¿Öò¿£Ö/// The date to initially select on the [SfCalendar].
///
/// The [SfCalendar] will select the date that set to this property.
///
/// Defaults to null.
///
/// See also:
/// * [CalendarController.selectedDate], to selected date programmatically on
/// calendar in the runtime.
/// * [selectionDecoration], to add decoration for the selected cell in
/// calendar.
/// * [initialDisplayDate], to navigate to the given date on calendar
/// initially.
/// * [CalendarController.displayDate], to navigate to the given date on
/// calendar programmatically in runtime.
/// * [onSelectionChanged], the callback which notifies when the selected cell
/// changed on calendar.
/// * Knowledge base: [How to get the selected dates using selection changed callback](https://www.syncfusion.com/kb/12551/how-to-get-the-selected-dates-using-selection-changed-callback-in-the-flutter-calendar)
/// * Knowledge base: [How to programmatically select the dates](https://www.syncfusion.com/kb/12115/how-to-programmatically-select-the-dates-in-the-flutter-calendar)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        initialSelectedDate: DateTime(2019, 12, 12, 11, 0, 0),
///      ),
///   );
///  }
///
/// ``` ¿Ωà⁄¿äà0/// Called when the current visible date changes in [SfCalendar].
///
/// Called in the following scenarios when the visible dates were changed
/// 1. When calendar loaded the visible dates initially.
/// 2. When calendar view swiped to previous/next view.
/// 3. When calendar view changed, i.e: Month to day, etc..,
/// 4. When navigated to a specific date programmatically by using the
/// [controller.displayDate].
/// 5. When navigated programmatically using [controller.forward] and
/// [controller.backward].
///
/// The visible dates collection visible on view when the view changes
/// available
/// in the [ViewChangedDetails].
///
/// See also:
/// * [ViewChangedDetails], which contains the visible dates collection of the
/// current visible view.
/// * [initialDisplayDate], to display calendar on a desired date in initial.
/// * [CalendarController.displayDate], to change the display date of calendar
/// programmatically on run time.
/// * [CalendarController.forward], to navigate to next view of calendar
/// programmatically.
/// * [CalendarController.backward], to navigate to previous view of calendar
/// Programmatically.
/// * Knowledge base: [How to update blackout dates using onViewChanged](https://www.syncfusion.com/kb/12368/how-to-update-blackout-dates-using-onviewchanged-callback-in-the-flutter-calendar)
/// * Knowledge base: [How to clear the appointments in the month agenda view using onViewChange](https://www.syncfusion.com/kb/12089/how-to-clear-the-appointments-in-month-agenda-view-using-onviewchange-callback-in-the)
/// * Knowledge base: [How to add a special region dynamically using onTap, onViewChanged](https://www.syncfusion.com/kb/11729/how-to-add-a-special-region-dynamically-using-ontap-onviewchanged-callbacks-of-the-flutter)
///
/// ```dart
///
///Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onViewChanged: (ViewChangedDetails details){
///          List<DateTime> dates = details.visibleDates;
///        },
///      ),
///    );
///  }
///
/// ``` ¿ûàˇ¿òài/// Called whenever the [SfCalendar] elements tapped on view.
///
/// The tapped date, appointments, and element details when the tap action
/// performed on element available in the [CalendarTapDetails].
///
/// see also:
/// * [CalendarTapDetails], which contains the details of the tapped element
/// in the calendar.
/// * [CalendarElement], to know about the different available elements in the
/// calendar.
/// * [initialSelectedDate], to selected the date programmatically on calendar
/// initially.
/// * [CalendarController.selectedDate], to selected date programmatically on
/// calendar in the runtime.
/// * [selectionDecoration], to add decoration for the selected cell in
/// calendar.
/// * [onSelectionChanged], the callback which notifies when the selected cell
/// changed on calendar.
/// * Knowledge base: [How to get appointment details for the onTap](https://www.syncfusion.com/kb/10999/how-to-get-appointment-details-from-the-ontap-event-of-the-flutter-calendar)
/// * Knowledge base: [How to add a special region dynamically using onTap, onViewChanged](https://www.syncfusion.com/kb/11729/how-to-add-a-special-region-dynamically-using-ontap-onviewchanged-callbacks-of-the-flutter)
/// * Knowledge base: [How to interact with event calendar with appointments loaded](https://www.syncfusion.com/kb/12218/how-to-interact-with-event-calendar-cell-when-appointments-loaded-in-the-flutter-calendar)
/// * Knowledge base: [How to add the appointments using the onTap](https://www.syncfusion.com/kb/12300/how-to-add-the-appointments-using-the-ontap-callback-in-the-flutter-calendar)
/// * Knowledge base: [How to design and configure your appointment editor](https://www.syncfusion.com/kb/11204/how-to-design-and-configure-your-appointment-editor-in-flutter-calendar)
///
/// ```dart
///
///return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onTap: (CalendarTapDetails details){
///          DateTime date = details.date!;
///          dynamic appointments = details.appointments;
///          CalendarElement view = details.targetElement;
///        },
///      ),
///    );
///  }
///
/// ``` ¿§Ö=¿÷Ñ∞/// Called whenever the [SfCalendar] elements long pressed on view.
///
/// The long-pressed date, appointments, and element details when the
/// long-press action
/// performed on element available in the [CalendarLongPressDetails].
///
/// see also:
/// * [CalendarLongPressDetails], which contains the details of the long
/// pressed element in the calendar.
/// * [CalendarElement], to know about the different available elements in the
/// calendar.
/// * [selectionDecoration], to add decoration for the selected cell in
/// calendar.
/// * [onSelectionChanged], the callback which notifies when the selected cell
/// changed on calendar.
/// * Knowledge base: [How to handle the long press action](https://www.syncfusion.com/kb/12121/how-to-handle-the-long-press-action-on-date-selection-in-the-flutter-calendar)
///
/// ```dart
///
///return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onLongPress: (CalendarLongPressDetails details){
///          DateTime date = details.date!;
///          dynamic appointments = details.appointments;
///          CalendarElement view = details.targetElement;
///        },
///      ),
///    );
///  }
///
/// ``` ¿ËÖ¶¿$|Ö/// Called whenever a [SfCalendar] cell is selected.
///
/// The callback details argument contains the selected date and
/// its resource details.
///
/// see also:
/// * [CalendarSelectionDetails], which contains the details of the selected
/// element in the calendar.
/// * [CalendarElement], to know about the different available elements in the
/// calendar.
/// * [initialSelectedDate], to selected the date programmatically on calendar
/// initially.
/// * [CalendarController.selectedDate], to selected date programmatically on
/// calendar in the runtime.
/// * [selectionDecoration], to add decoration for the selected cell in
/// calendar.
/// * [onTap], the callback which notifies when the calendar elements tapped
/// on view.
/// * Knowledge base: [How to get the selected dates using the selection changed](https://www.syncfusion.com/kb/12551/how-to-get-the-selected-dates-using-selection-changed-callback-in-the-flutter-calendar)
///
/// ```dart
///
///return Container(
///      child: SfCalendar(
///        view: CalendarView.timelineDay,
///        onSelectionChanged: (CalendarSelectionDetails details){
///          DateTime date = details.date!;
///          CalendarResource resource = details.resource!;
///        },
///      ),
///    );
///  }
///
/// ``` ¿$ïêƒ¿5Oèµ/// Used to set the [Appointment] or custom event collection through the
/// [CalendarDataSource] class.
///
/// If it is not [null] the collection of appointments set to the
/// [CalendarDataSource.appointments] property will be set to [SfCalendar] and
/// rendered on view.
///
/// Defaults to null.
///
/// see also:
/// * [CalendarDataSource], to add and handle the appointments and resource on
/// the calendar.
/// * [Appointment], the object which holds the details of the appointment.
/// * [CalendarResource], the object which holds the details of the resource
/// in the calendar.
/// * [loadMoreWidgetBuilder], allows to build an widget which will display
/// when appointments loaded on demand in the calendar.
/// * [resourceViewHeaderBuilder], to set custom widget for the resource view
/// in the calendar.
/// * [resourceViewSettings], to customize the resource view in the calendar.
/// * [appointmentBuilder], to set custom widget for the appointment view in
/// the calendar.
/// * [appointmentTextStyle], to customize the text style for the appointments
/// in calendar.
/// * [appointmentTimeTextFormat], to customize the time format for the
/// appointment view in calendar.
/// * Knowledge base: [How to perform the crud operations using firestore database](https://www.syncfusion.com/kb/12661/how-to-perform-the-crud-operations-in-flutter-calendar-using-firestore-database)
/// * Knowledge base: [How to load appointments on demand](https://www.syncfusion.com/kb/12658/how-to-load-appointments-on-demand-in-flutter-calendar)
/// * Knowledge base: [How to load google calendar events in iOS](https://www.syncfusion.com/kb/12647/how-to-load-the-google-calendar-events-to-the-flutter-calendar-sfcalendar-in-ios)
/// * Knowledge base: [How to get the appointments between the given start and end date](https://www.syncfusion.com/kb/12549/how-to-get-the-appointments-between-the-given-start-and-end-date-in-the-flutter-calendar)
/// * Knowledge base: [How to get the current month appointments](https://www.syncfusion.com/kb/12477/how-to-get-the-current-month-appointments-in-the-flutter-calendar)
/// * Knowledge base: [How to load data from offline sqlite database](https://www.syncfusion.com/kb/12399/how-to-load-data-from-offline-sqlite-database-to-flutter-calendar)
/// * Knowledge base: [How to create time table](https://www.syncfusion.com/kb/12392/how-to-create-time-table-using-flutter-event-calendar)
/// * Knowledge base: [How to add google calendar events](https://www.syncfusion.com/kb/12116/how-to-add-google-calendar-events-to-the-flutter-event-calendar-sfcalendar)
/// * Knowledge base: [How to add a custom appointments of business objects](https://www.syncfusion.com/kb/11529/how-to-add-a-custom-appointments-or-objects-in-the-flutter-calendar)
/// * Knowledge base: [How to delete an appointment](https://www.syncfusion.com/kb/11522/how-to-delete-an-appointment-in-the-flutter-calendar)
///
///
/// ```dart
///
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        dataSource: _getCalendarDataSource(),
///        timeSlotViewSettings: TimeSlotViewSettings(
///            timeTextStyle: TextStyle(
///                fontSize: 12,
///                fontWeight: FontWeight.w500,
///                color: Colors.blue,
///                fontStyle: FontStyle.italic)
///        ),
///      ),
///    );
///  }
///
/// class DataSource extends CalendarDataSource {
///  DataSource(List<Appointment> source) {
///    appointments = source;
///  }
/// }
///
///  DataSource _getCalendarDataSource() {
///    List<Appointment> appointments = <Appointment>[];
///    appointments.add(Appointment(
///      startTime: DateTime.now(),
///      endTime: DateTime.now().add(Duration(hours: 2)),
///      isAllDay: true,
///      subject: 'Meeting',
///      color: Colors.blue,
///      startTimeZone: '',
///      endTimeZone: '',
///    ));
///
///    return DataSource(appointments);
///  }
///
/// ``` ¿5`â¿>Tà]/// Defines the collection of special [TimeRegion] for [SfCalendar].
///
/// It is used to highlight time slots on day, week, work week
/// and timeline views based on [TimeRegion] start and end time.
///
/// It also used to restrict interaction on time slots.
///
/// See also:
/// * [timeRegionBuilder], to set custom widget for the time regions in the
/// calendar
/// * [TimeRegion], to now the details about the special time regions and it's
/// properties in calendar.
/// * Knowledge base: [How to customize special regions with builder](https://www.syncfusion.com/kb/12192/how-to-customize-the-special-time-region-using-custom-builder-in-the-flutter-calendar)
/// * Knowledge base: [How to create time table](https://www.syncfusion.com/kb/12392/how-to-create-time-table-using-flutter-event-calendar)
/// * Knowledge base: [How to add a special region dynamically using onTap and onViewChanged](https://www.syncfusion.com/kb/11729/how-to-add-a-special-region-dynamically-using-ontap-onviewchanged-callbacks-of-the-flutter)
/// * Knowledge base: [How to use multiple recurrence rule in special region](https://www.syncfusion.com/kb/11730/how-to-use-multiple-recurrence-rule-rrule-in-special-region-using-flutter-calendar)
/// * Knowledge base: [How to highlight the weekends](https://www.syncfusion.com/kb/11712/how-to-highlight-the-weekends-in-the-flutter-calendar)
/// * Knowledge base: [How to highlight the lunch hours](https://www.syncfusion.com/kb/11712/how-to-highlight-the-weekends-in-the-flutter-calendar)
///
/// ``` dart
///  Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        specialRegions: _getTimeRegions(),
///      ),
///    );
///  }
///
///  List<TimeRegion> _getTimeRegions() {
///    final List<TimeRegion> regions = <TimeRegion>[];
///    regions.add(TimeRegion(
///        startTime: DateTime.now(),
///        endTime: DateTime.now().add(Duration(hours: 1)),
///        enablePointerInteraction: false,
///        color: Colors.grey.withOpacity(0.2),
///        text: 'Break'));
///
///    return regions;
///  }
///
///  ``` ¿>iÉá¿A‚É%/// Used to display the week number of the year in all calendar views except
/// schedule view of the SfCalendar.
///
/// In the month view, it is displayed at the left side as a separate column.
/// whereas in the week and work week view it is displayed beside the view
/// header panel, and for day and timeline views it is displayed next to the
/// header text in the header panel of the calendar.
///
/// Defaults to false
///
/// see also:
/// * [weekNumberStyle], to customize the week number view in the calendar.
/// * [firstDayOfWeek], to change the first day of the week in the calendar.
///
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///       view: CalendarView.month,
///       showWeekNumber: true,
///      ),
///    );
///  } ¿A˜ÉÒ¿EŸÉz/// Defines the text style for the text in the week number panel of the
/// SfCalendar.
///
/// Using a [SfCalendarTheme] gives more fine-grained control over the
/// appearance of various components of the calendar.
///
/// Defaults to false
///
/// see also:
/// * [showWeekNumber], to display the week number view on the calendar views.
/// * [WeekNumberStyle], to know more about the available customization
/// options for week number view in calendar.
/// * [SfCalendarTheme], to handle theming with calendar for giving consistent
/// look.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///   body: SfCalendar(
///     view: CalendarView.month,
///     showWeekNumber: true,
///     weekNumberStyle: WeekNumberStyle(
///         backgroundColor: Colors.blue,
///         textStyle: TextStyle(color: Colors.grey, fontSize: 20),
///   ),
///  );
/// } ¿EÔÜ˛¿L‘Ü</// Defines the builder that builds a widget and replaces the header
/// view of resource in SfCalendar.
///
/// Defaults to null.
///
/// see also:
/// * [resourceViewSettings], to customize the resource view in the calendar
/// * [CalendarResource], the object which holds the data of the resource in
/// calendar.
/// * [dataSource.resources], the collection of resource to be displayed in
/// the timeline views of [SfCalendar].
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return MaterialApp(
///     home: Scaffold(
///       appBar: AppBar(
///         title: Text('Calendar'),
///       ),
///       body: SfCalendar(
///           view: CalendarView.timelineMonth,
///           resourceViewHeaderBuilder:
///               (BuildContext context, ResourceViewHeaderDetails details) {
///             if (details.resource.image != null) {
///               return Column(
///                 mainAxisAlignment: MainAxisAlignment.center,
///                 crossAxisAlignment: CrossAxisAlignment.center,
///                 mainAxisSize: MainAxisSize.max,
///                 children: [
///                   CircleAvatar(backgroundColor: details.resource.image),
///                   Text(details.resource.displayName)
///                 ],
///               );
///             } else {
///               return Container(
///                 color: details.resource.color,
///                 child: Text(
///                     details.resource.displayName
///                 ),
///               );
///             }
///           }),
///     ),
///   );
/// } ¿LÙÖ¿QˆÑç/// Allows to drag and drop the appointment, to reschedule this into
/// new date time.
///
/// Defaults to false.
///
/// See also:
/// * [allowAppointmentResize], which allows to resize the appointment to
/// reschedule.
/// * [dragAndDropSettings], which allows to customize the drag and
/// drop environment.
///
/// _Note:_ This doesn't applicable when the [view] set as
/// [CalendarView.schedule]. This doesn't applicable when the [view] set as
/// [CalendarView.month] and [CalendarView.timelineMonth] in mobile layout.
///
/// This method must be implemented to get the data with business object type
/// when drag and drop or appointment resizing enabled.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///       view: CalendarView.month,
///       showWeekNumber: true,
///       allowDragAndDrop: true,
///       dragAndDropSettings: DragAndDropSettings(
///         allowNavigation: true,
///         allowScroll: true,
///         autoNavigateDelay: Duration(seconds: 1),
///         indicatorTimeFormat: 'HH:mm a',
///         showTimeIndicator: true,
///       ),
///     ),
///   );
/// } ¿RÉm¿UgÇÙ/// Allows to customize the drag and drop environment.
///
/// See also:
/// * [monthViewSettings], which allows to customize the month view of
/// the calendar.
/// * [timeSlotViewSettings], which allows to customize the timeslot view
/// of the calendar.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///       view: CalendarView.month,
///       showWeekNumber: true,
///       allowDragAndDrop: true,
///       dragAndDropSettings: DragAndDropSettings(
///         allowNavigation: true,
///         allowScroll: true,
///         autoNavigateDelay: Duration(seconds: 1),
///         indicatorTimeFormat: 'HH:mm a',
///         showTimeIndicator: true,
///       ),
///     ),
///   );
/// } ¿UÅÉÓ¿YdÉs/// Called whenever the appointment starts to drag in the  [SfCalendar].
///
/// The callback arguments contains the dragging appointment and associated
/// resource details.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///         view: CalendarView.month,
///         showWeekNumber: true,
///         allowDragAndDrop: true,
///         dragAndDropSettings: DragAndDropSettings(
///           allowNavigation: true,
///           allowScroll: true,
///           autoNavigateDelay: Duration(seconds: 1),
///           indicatorTimeFormat: 'HH:mm a',
///           showTimeIndicator: true,
///         ),
///         onDragStart: (AppointmentDragStartDetails details) {
///           dynamic appointment = details.appointment!;
///           CalendarResource? resource = details.resource;
///         }),
///   );
/// } ¿YvÑ˘¿^cÑs/// Called whenever the appointment is dragging in the [SfCalendar].
///
/// The callback arguments contains the dragging appointment, dragging time,
/// dragging offset, source resource and target resource details.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///         view: CalendarView.month,
///         showWeekNumber: true,
///         allowDragAndDrop: true,
///         dragAndDropSettings: DragAndDropSettings(
///           allowNavigation: true,
///           allowScroll: true,
///           autoNavigateDelay: Duration(seconds: 1),
///           indicatorTimeFormat: 'HH:mm a',
///           showTimeIndicator: true,
///         ),
///         onDragUpdate: (AppointmentDragUpdateDetails details) {
///           dynamic appointment = details.appointment!;
///           CalendarResource? sourceResource = details.sourceResource;
///           CalendarResource? targetResource = details.targetResource;
///           Offset? draggingPosition = details.draggingPosition;
///           DateTime? draggingTime = details.draggingTime;
///         }),
///   );
/// } ¿^vÑê¿b˝Ñ/// Called when the dragging appointment is dropped in the [SfCalendar].
///
/// The callback arguments contains the dropped appointment, dropping time,
/// source and target resource details.
///
/// ``` dart
/// Widget build(BuildContext context) {
///   return Scaffold(
///     body: SfCalendar(
///         view: CalendarView.month,
///         showWeekNumber: true,
///         allowDragAndDrop: true,
///         dragAndDropSettings: DragAndDropSettings(
///           allowNavigation: true,
///           allowScroll: true,
///           autoNavigateDelay: Duration(seconds: 1),
///           indicatorTimeFormat: 'HH:mm a',
///           showTimeIndicator: true,
///         ),
///         onDragEnd: (AppointmentDragEndDetails details) {
///           dynamic appointment = details.appointment!;
///           CalendarResource? sourceResource = details.sourceResource;
///           CalendarResource? targetResource = details.targetResource;
///           DateTime? draggingTime = details.droppingTime;
///         }),
///   );
/// } ¿cç¨¿pØå©/// An object that used for programmatic date navigation and date selection
/// in [SfCalendar].
///
/// A [CalendarController] served for several purposes. It can be used
/// to selected dates programmatically on [SfCalendar] by using the
/// [controller.selectedDate]. It can be used to navigate to specific date
/// by using the [controller.displayDate] property.
///
/// ## Listening to property changes:
/// The [CalendarController] is a listenable. It notifies it's listeners
/// whenever any of attached [SfCalendar]`s selected date, display date
/// changed (i.e: selecting a different date, swiping to next/previous
/// view] in in [SfCalendar].
///
/// ## Navigates to different view:
/// In [SfCalendar] the visible view can be navigated programmatically by
/// using the [controller.forward] and [controller.backward] method.
///
/// ## Programmatic selection:
/// In [SfCalendar] selecting dates programmatically can be achieved by
/// using the [controller.selectedDate] which allows to select date on
/// [SfCalendar] on initial load and in run time.
///
/// The [CalendarController] can be listened by adding a listener to the
/// controller, the listener will listen and notify whenever the selected
/// date, display date changed in the [SfCalendar].
///
/// Defaults to null.
///
/// See also:
/// * [CalendarController], to know more about the controller and it's usage
/// with the calendar.
/// * [initialSelectedDate], to select dates initially on the calendar.
/// * [initialDisplayDate], the date which shown when the calendar displayed
/// initially.
/// * [onViewChanged], the callback which notifies when the current view
/// visible date changed on calendar.
/// * [onSelectionChanged], the callback which notifies when the selected cell
/// changed on the calendar.
/// * Knowledge base: [How to programmatically navigate to adjacent days](https://www.syncfusion.com/kb/12654/how-to-programmatically-navigate-to-the-adjacent-dates-in-the-flutter-calendar)
/// * Knowledge base: [How to do programmatic navigation](https://www.syncfusion.com/kb/12141/how-to-do-programmatic-navigation-using-flutter-calendar)
/// * Knowledge base: [How to programmatically select the dates](https://www.syncfusion.com/kb/12115/how-to-programmatically-select-the-dates-in-the-flutter-calendar)
/// * Knowledge base: [How to move to a specific time while switching view](https://www.syncfusion.com/kb/10943/how-to-move-to-a-specific-time-while-switching-from-month-to-day-view-in-the-flutter)
///
///
/// This example demonstrates how to use the [CalendarController] for
/// [SfCalendar].
///
/// ```dart
///
/// class MyAppState extends State<MyApp>{
///
///  CalendarController _calendarController;
///  @override
///  initState(){
///    _calendarController = CalendarController();
///    _calendarController.selectedDate = DateTime(2022, 02, 05);
///    _calendarController.displayDate = DateTime(2022, 02, 05);
///    super.initState();
///  }
///
///  @override
///  Widget build(BuildContext context) {
///    return MaterialApp(
///      home: Scaffold(
///        body: SfCalendar(
///          view: CalendarView.month,
///          controller: _calendarController,
///        ),
///      ),
///    );
///  }
///}
/// ``` ¿p¿ÇÔ¿sôÇá/// Allows to reschedule the appointment by resizing the appointment.
///
/// Defaults to `false`.
///
/// _Note:_ The appointment resizing is not applicable for mobile platform.
///
/// This method must be implemented to get the data with business
/// object type when drag and drop or appointment resizing enabled.
///
/// See also:
/// 	‚Ä¢ [allowDragAndDrop], which allows to reschedule a appointment by drag
/// and drop to different date time.
///
/// ```dart
///
/// Widget build(BuildContext context) {
///    return Container(
///      child: SfCalendar(
///         allowAppointmentResize: true,
///      ),
///    );
///  }
///
/// ```` ¿s∂Ñ¿w¶Éx/// Called whenever the appointment starts to resizing in [SfCalendar].
///
/// The resizing appointment and resource details when the appointment starts
/// to resize available in the [AppointmentResizeStartDetails].
///
/// See also:
/// * [AppointmentResizeStartDetails], which contains the details of the
/// resizing appointment in the calendar.
/// * [onAppointmentResizeUpdate], callback to notifies when the appointment
/// resizing.
/// * [onAppointmentResizeEnd], callback to notify when the appointment
/// resizing ends.
///
/// ```dart
///
/// return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onAppointmentResizeStart: (AppointmentResizeStartDetails details){
///          dynamic appointment = details.appointment!;
///          CalendarResource? resource = details.resource;
///        },
///      ),
///    );
///  }
///
/// ``` ¿w≈Ñ–¿||Ñ5/// Called whenever the appointment resizing in [SfCalendar].
///
/// The resizing appointment, position, time and resource details when the
/// appointment resizing available in the [AppointmentResizeUpdateDetails].
///
/// See also:
/// * [AppointmentResizeUpdateDetails], which contains the details of the
/// resizing appointment details in the calendar.
/// * [onAppointmentResizeStart], callback to notifies when the appointment
/// start resizing.
/// * [onAppointmentResizeEnd], callback to notify when the appointment
/// resizing ends.
///
/// ```dart
///
/// return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onAppointmentResizeUpdate: (AppointmentResizeUpdateDetails
///                                                               details){
///          dynamic appointment = details.appointment!;
///          CalendarResource? resource = details.resource;
///          DateTime time = details.resizingTime!;
///          Offset position = details.resizingOffset!;
///        },
///      ),
///    );
///  }
///
/// ``` ¿|úÑâ¿ÅÉÙ/// Called whenever the appointment resizing end in the [SfCalendar].
///
/// The resizing appointment, start time, end time and resource details when
/// the appointment resizing ends available in the
/// [AppointmentResizeEndDetails].
///
/// See also:
/// * [AppointmentResizeEndDetails], which contains the details of the
/// resized appointment details in the calendar.
/// * [onAppointmentResizeStart], callback to notifies when the appointment
/// start resizing.
/// * [onAppointmentResizeUpdate], callback to notifies when the appointment
/// resizing.
///
/// ```dart
///
/// return Container(
///      child: SfCalendar(
///        view: CalendarView.week,
///        onAppointmentResizeEnd: (AppointmentResizeEndDetails details){
///          dynamic appointment = details.appointment!;
///          CalendarResource? resource = details.resource;
///          DateTime time = details.startTime!;
///          DateTime endTime = details.endTime!;
///        },
///      ),
///    );
///  }
///
/// ```  ¿Å,àx¿ÜÌÖJ/// Returns the date time collection at which the recurrence appointment will
/// recur
///
/// Using this method the recurrence appointments occurrence date time
/// collection can be obtained.
///
/// * rRule - required - the recurrence rule of the appointment
/// * recurrenceStartDate - required - the start date in which the recurrence
/// starts.
/// * specificStartDate - optional - the specific start date, used to get the
/// date collection for a specific interval of dates.
/// * specificEndDate - optional - the specific end date, used to get the date
/// collection for a specific interval of dates.
///
///
/// return `List<DateTime>`
///
/// See also:
/// * [Appointment.recurrenceRule], to set the recurrence rule for the
/// [Appointment], which will recur based on the given rule.
/// * [TimeRegion.recurrenceRule], to set the recurrence rule for the
/// [TimeRegion], which will recur based on the given rule.
/// * Knowledge base: [How to get the recurrence date collection](https://www.syncfusion.com/kb/12344/how-to-get-the-recurrence-date-collection-in-the-flutter-calendar)
///
///```dart
///
/// DateTime dateTime = DateTime(2020, 03, 15);
/// List<DateTime> dateCollection =
///                   SfCalendar.getRecurrenceDateTimeCollection(
///                             'FREQ=DAILY;INTERVAL=1;COUNT=3', dateTime);
///
/// ``` ¿á¿á  ¿á#¿á-  ¿áI¿áT  ¿áf¿áq   ¿â™ÑÊ¿éÑ/// Returns the recurrence properties based on the given recurrence rule and
/// the recurrence start date.
///
/// Used to get the recurrence properties from the given recurrence rule.
///
/// * rRule - optional - recurrence rule for the properties required
/// * recStartDate - optional - start date of the recurrence rule for which
/// the properties required.
///
/// returns `RecurrenceProperties`.
///
/// See also:
/// * [RecurrenceProperties], to know more about the available recurrence
/// properties which helps to create the recurrence rule.
/// * [generateRRule], to generate recurrence rule based on the
/// [RecurrenceProperties].
/// * Knowledge base: [How to get the recurrence properties from rrule](https://www.syncfusion.com/kb/12370/how-to-get-the-recurrence-properties-from-rrule-in-the-flutter-calendar)
///
///
/// ```dart
///
/// DateTime dateTime = DateTime(2020, 03, 15);
/// RecurrenceProperties recurrenceProperties =
///    SfCalendar.parseRRule('FREQ=DAILY;INTERVAL=1;COUNT=1', dateTime);
///
/// ``` ¿é'¿é/  ¿é5¿é?   ¿éñàá¿ï†ÜÉ/// Generates the recurrence rule based on the given recurrence properties and
/// the start date and end date of the recurrence appointment.
///
/// Used to generate recurrence rule based on the recurrence properties.
///
/// * recurrenceProperties - required - the recurrence properties to generate
/// the recurrence rule.
/// * appStartTime - required - the recurrence appointment start time.
/// * appEndTime - required - the recurrence appointment end time.
///
/// returns `String`.
///
/// See also:
/// * [RecurrenceProperties], to know more about the available recurrence
/// properties which helps to create the recurrence rule.
/// * [parseRRule], to generate the recurrence properties based on the
/// recurrence rule.
/// * [Appointment.recurrenceRule], to set the recurrence rule for the
/// [Appointment], which will recur based on the given rule.
/// * [TimeRegion.recurrenceRule], to set the recurrence rule for the
/// [TimeRegion], which will recur based on the given rule.
///
/// ```dart
///
/// RecurrenceProperties recurrenceProperties =
/// RecurrenceProperties(startDate: DateTime.now());
///recurrenceProperties.recurrenceType = RecurrenceType.daily;
///recurrenceProperties.recurrenceRange = RecurrenceRange.count;
///recurrenceProperties.interval = 2;
///recurrenceProperties.recurrenceCount = 10;
///
///Appointment appointment = Appointment(
///    startTime: DateTime(2019, 12, 16, 10),
///    endTime: DateTime(2019, 12, 16, 12),
///    subject: 'Meeting',
///    color: Colors.blue,
///    recurrenceRule: SfCalendar.generateRRule(recurrenceProperties,
///        DateTime(2019, 12, 16, 10), DateTime(2019, 12, 16, 12)));
///
/// ``` ¿ïÆ)¿ïƒ  ¿ï‡¿ïÍ  ¿ï˜¿ñ   ¿ó#t¿ós   ¿ó#¿ó$¿óùìƒ¿óØ  ¿ó√&¿ó‡  ¿óù¿óûóÂóÊ¿´h¿&¿´n   9¿´«,¿´€  ¿´¯¿¨  ¿¨¿¨!  ¿¨3H¿¨M ¿¨y¿¨z¿¨d¿¨x¿¨e¿¨ÄL¿¨ñ ¿¨ ¿¨À¿¨π¿¨…¿¨∫¿¨—¿¨ÿ ¿¨Ì¿¨ın¿≠LA/// Used to get the scrolled position to update the header value. ¿≠e¿≠eA/// Used to get the scrolled position to update the header value. ¿≠ä1¿≠®  ¿≠ƒ ¿≠ƒ  ¿≠ÈV¿Æ ¿Æ!¿Æ.¿Æ8¿Æ7¿Æ/¿Æ9¿Æ>¿Æ:¿ÆD¿ÆP  ¿Æ\#¿Æq  ¿ÆÑ¿Æê  ¿Æõ
¿Æõ  ¿Æß¿Æß  ¿Æº'¿Æ’  ¿ÆË0¿Ø  ¿Ø¿Ø  ¿Ø5D¿Øf  ¿ØÇ¿ØÇ  ¿ØúÄê¿∞Z/// Notifier to repaint the resource view if the image doesn't loaded on
/// initial load. ¿∞3i¿∞~=/// Used to assign the forward list as center of scroll view.¿∞ë¿∞ö¿∞õ¿∞£Y¿∞ÚB/// Used to create the new scroll view for schedule calendar view. ¿±z¿±[D/// Used to create the custom scroll view that holds calendar views.¿±r¿±{¿±|¿±Ña¿±◊;/// Used to store the visible dates before the display date ¿±Ï\¿≤>:/// Used to store the visible dates after the display date ¿≤OÄÄ¿≤∫C/// Used to store the height of each views generated by next dates. ¿≤÷ÄÖ¿≥EG/// Used to store the height of each views generated by previous dates. ¿≥bE¿≥ü//// Used to store the max and min visible date. ¿≥©¿≥©//// Used to store the max and min visible date. ¿≥∏Ä∂¿¥ZÄè/// Used to store the agenda date view width and the value used on agenda
/// view generation, tap and long press callbacks and mouse hovering. ¿¥uÅ1¿µèÅ//// Used to notify the time zone data base loaded or not.
//// Example, initially appointment added on visible date changed callback then
//// data source changed listener perform operation but the time zone data base
//// not initialized, so it makes error.¿µ°¿µ´A¿µ≈ ¿µÍ¿µÎ¿µ’¿µÈ¿µ÷¿µÒ#¿∂	  ¿∂Ä¡¿∂–Ä£/// Used to identify the schedule web view size changed and reformat the
/// schedule view when the UI changed to mobile UI from web UI or web UI
/// to mobile UI. ¿∂„Äç¿∑bh/// Collection used to store the blackout dates and check the collection
/// manipulations(add, remove). ¿∑w¿∑Å  ¿∑å¿∑û  ¿∑®¿∑≤  ¿∑¬¿∑Œ  ¿∑Â,¿∑˛  ¿∏Äì¿∏ój/// Used for hold the schedule display date value used for show nothing
/// planned text on schedule view. ¿∏≤h¿π	I/// Used to check the current platform as mobile platform(android or iOS) ¿π!b¿πo@/// Used to check the desktop platform needs mobile platform UI. ¿πäb¿π€8/// Fade animation controller to controls fade animation ¿πÛc¿∫OE/// Fade animation animated on view changing and web view navigation. ¿∫]s¿∫≠0/// Opacity of widget handles by fade animation.¿∫∏¿∫≈¿∫Ã¿∫∆¿∫Õ¿∫œ¿∫Œ¿∫◊g¿ª%E/// Used to identify whether the load more function triggered or not.¿ª9¿ªEÄ™¿ªÿÄá/// Used to check whether the load more widget needed or not. In schedule
/// calendar view it denotes the bottom end load more widget.¿ªÍ¿ªˆÄà¿º^\/// Used to check whether the top end load more needed or not in schedule
/// calendar view.¿ºy¿ºÖÄÔ¿ΩdÄÀ/// Holds the schedule view loading min date value. It is used only load more
/// enabled. This value updated before load more triggered and this value
/// set to [_minDate] when the load more completed. ¿Ω{ÄÔ¿æZÄÀ/// Holds the schedule view loading max date value. It is used only load more
/// enabled. This value updated before load more triggered and this value
/// set to [_maxDate] when the load more completed. ¿æqu¿æŒI/// Focus node to maintain the focus for schedule view, when view changed¿æ€¿æ‰¿æÂ¿æÌÄ¶¿øÄt/// Collection used to store the resource collection and check the collection
/// manipulations(add, remove, reset). ¿øöÄ∑¿¿F/// The image painter collection to paint the resource images in view.¿¿O¿¿P¿¿/¿¿N¿¿0¿¿8¿¿XÅ:¿¡uÅ/// Used to indicate whether the time slot views(day, week, work week,
/// timeline views) needs scrolling or not when display date changed.
/// This value maintain the time slot view scrolling when calendar view
/// changed and view navigation(forward and backward).¿¡é K¿¡ôä3¿¡´   ¿¡ô¿¡ö¿À“Ñ¿À‰   ¿À“¿À”¿œÚûh¿–  ¿–¿–   ¿œÚ¿œÛ¿Ó`äR¿Ót  ¿Óz¿Óà  ¿Ó`¿Óa¿¯∏îP¿˘)Y/// Get the calendar details by using the [getCalendarDetailsAtOffset] in
/// SfCalendar. ¿˘=¿˘E   ¿¿ `I¿a>//// Get the calendar details for schedule view in SfCalendar. ¿y¿Å   ¿m]Ñ“¿mo   ¿m]¿m^¿r5íy¿rI  ¿rd%¿ry  ¿rã¿rò   ¿Ñ¥u¿Ñπ    ¿Ö/ÅB¿ÖÜF/// loads the time zone data base to handle the time zone for calendar   ¿ÜwÅ¿Ü‡]/// Generates the calendar appointments from the given data source, and
/// time zone details   ¿áîàt¿áÒ5/// Updates the visible appointments for the calendar   ¿êÄ∑¿ê    ¿êÀÇö¿ê–    ¿ìkîj¿ì∫F/// Handle the scroll view scroll changes to update header date value.   ¿ß€ÇG¿®Le/// Method that raise the selection changed callback
/// when selected date changed programmatically.   ¿™(ân¿™-  ¿™K¿™S   ¿≥úåÌ¿≥°    ¿¿èÉá¿¿î    ¿ƒí≤¿ƒoJ//// Perform action while data source changed based on data source action. ¿ƒí¿ƒ¨  ¿ƒ±¿ƒ¿   ¿÷‘ïp¿◊ıÅ/// Load the newly added appointments dates for schedule view when
/// hideEmptyScheduleWeek is used.
/// This method will call when reset, add, use new data source collection
/// operations, and Add appointments to the week that do not exist in the
/// schedule view. ¿ÿ$¿ÿ2   ¿ÏJÜn¿ÏO    ¿ÚæÅ@¿Ú√    ¿ÙÑ¿Ù©Äô/// Updates the visible appointments collection based on passed collection,
/// the collection modified based on the data source's add and remove action. ¿Ù’6¿Ù   ¿¯Ä˚¿¯    ¿˘ä¿˘  ¿˘2¿˘@   ¿0Ç"¿5  ¿L,¿g   ¿XÇ›¿]    ¿;Ü1¿@  ¿q1¿é   ¿rÅ»¿É  ¿•¿∑  ¿√¿€   ¿@Ç⁄¿E  ¿w1¿î   ¿ âÄ¿%    ¿¶ÇN¿´    ¿˙Ä±¿    ¿±Å≥¿∂  ¿‘¿‹   ¿!jí¢¿!o  ¿!ë¿!ô  ¿!Ø¿!µ  ¿!“
¿!ÿ  ¿!Â¿!  ¿"¿"  ¿""¿"*  ¿"=¿"C  ¿"3¿"V¿4År¿4  ¿42¿4E  ¿4K¿4Q  ¿4g
¿4m  ¿4{¿4Ü  ¿4ô¿4¢  ¿4∑¿4ø  ¿4“¿4ÿ  ¿4»¿4È¿5äÅr¿5è  ¿5™¿5Ω  ¿5√¿5…  ¿5ﬂ
¿5Â  ¿5Û¿5˛  ¿6¿6  ¿6/¿67  ¿6J¿6P  ¿6@¿6a¿7Ä’¿7  ¿7¿7+   ¿7›èÆ¿8Wj/// Calculate the maximum appointment date based on appointment collection
/// and schedule view settings. ¿8v&¿8ë  ¿8•¿8Æ  ¿8æ¿8»  ¿8◊¿8·  ¿8Ù)¿9
  ¿9&¿9,   ¿GëÖ¿Hj/// Calculate the minimum appointment date based on appointment collection
/// and schedule view settings. ¿H*&¿HE  ¿HY¿Hb  ¿Hr¿H|  ¿Hã¿Hï  ¿H®)¿Hæ  ¿H⁄¿H‡   ¿Lôå{¿M [/// Check any appointment in appointments collection in between
/// the start and end date. ¿M&¿M6  ¿MJ¿MT  ¿M^¿Mh  ¿Mp¿My   ¿YÅÌ¿Z6Å
/// This method is used to check the appointment needs all day appointment
/// view or not in agenda view, because the all day appointment view shown
/// as half of the normal appointment view in agenda view.
/// Agenda view used on month and schedule calendar view. ¿ZO¿Zd   ¿[ÅØ¿[ZE/// Return the all day appointment count from appointment collection. ¿[j/¿[Ö   ¿\¬Ñx¿]R`/// Return the collection of appointment collection listed by
/// start date of the appointment. ¿]/¿]ö  ¿]∑¿]¡  ¿]“¿]‹   ¿a@¿ èÖ¿aÄ4/// Return the widget to scroll view based on index. ¿aâ¿aó  ¿aü	¿a§  ¿a™
¿a∞   ¿ÀçÂ¿“  ¿¿˙  ¿Ò¿Ò  ¿Ò
¿Ò  ¿Ò#¿Ò)  ¿Ò>¿ÒF  ¿ÒV¿Ò\  ¿ÒS¿Òn¿˛∂êb¿˛Ω  ¿˛Ÿ
¿˛ﬂ  ¿˛Ï¿˛ˆ  ¿ˇ!¿ˇ  ¿ˇ:¿ˇB  ¿ˇY!¿ˇa  ¿ˇÉ¿ˇã   ¿íI¿#  ¿I¿S  ¿f¿n  ¿|&¿ó  ¿´¿≥  ¿ ¿“  ¿·¿Á  ¿˝¿  ¿¿!m¿ NC¿!t  ¿!~¿!Ü  ¿!ç
¿!ì   ¿o∂éƒ¿oΩ  ¿oﬂ¿oÈ  ¿o˛¿p  ¿p¿p%  ¿p@¿pH  ¿pe¿pm   ¿~Ä¿ à„¿~á  ¿~ù¿~•  ¿~¨
¿~≤   ¿iÅ'¿πG/// Method to handle keyboard navigation for schedule view in calendar. ¿ƒ¿—   ¿ñÅ_¿£  ¿¿¿   ¿€¿Â   ¿	˚Ä√¿
     ¿
ƒ£T¿
À    ¿.êÉ¿.ëe/// Adds the resource panel on the left side of the view, if the resource
/// collection is not null. ¿.£¿.©  ¿.ª¿.√  ¿.€¿.„  ¿.Í
¿.   ¿>ßÇ‡¿?)v/// Handles and raises the [widget.onLongPress] callback, when the resource
/// panel is long pressed in [SfCalendar]. ¿?T¿?k  ¿?s¿?{   ¿AçÇ©¿Bj/// Handles and raises the [widget.onTap] callback, when the resource panel
/// is tapped in [SfCalendar]. ¿B(¿B6  ¿B>¿BF   ¿D<É(¿D«v/// Filter and returns the appointment collection for the given resource from
/// the visible appointments collection. ¿DË¿D˙   ¿GjÅU¿G≈F/// Returns the tapped resource details, based on the tapped position. ¿G‡¿GË  ¿G˜¿Gˇ   ¿H≈ÖÑ¿IJ/// Adds the custom scroll view which used to produce the infinity scroll. ¿I7
¿I?  ¿IJ¿IR  ¿Ij
¿Ip  ¿I}¿IÉ  ¿Iú¿I§  ¿I±¿Iπ  ¿I«¿Iœ   ¿NOå¿NV  ¿Nk¿Ns  ¿NÄ¿Nà  ¿Nè¿Nó  ¿Nù
¿N£   ¿ZcÄ≈¿Zh    ¿[.Ä«¿[3    ¿[˚•w¿\  ¿\
¿\  ¿\
¿\#   ¿ÅxÅ«¿Å}  ¿Åñ"¿Å≤   ¿ÉEÜ®¿ÉJ  ¿É_"¿É{   ¿âÛÅ¿ä(,//// Handles the on tap callback for  header ¿ä>¿äF   ¿ãxÅ®¿ã¥3//// Handles the on long press callback for  header ¿ã–¿ãÿ   ¿ç&Å¿ç/    ¿éAÉΩ¿éz0//// Handles the onTap callback for agenda view. ¿éé¿éú  ¿é§¿éØ   ¿íÉˆ¿íC6//// Handles the onLongPress callback for agenda view. ¿íe¿í|  ¿íÑ¿íè   ¿ñ ã≠¿ñ  ¿ñ/¿ñ7  ¿ñE¿ñP   ¿°Ôûú¿°ˆ  ¿¢¿¢  ¿¢¿¢$  ¿¢2¿¢:  ¿¢@
¿¢F    ¿¿íÅ
¿¿ò  ¿¿√C ¿¿…¿¿◊ ¿¿Ÿ¿¿Ë  ¿¿Ó¿¿˝   ¿¡¿¡  ¿¡%#¿¡A   ¿¡OJ¿¡r   ¿¡O¿¡P ¿¡†É!¿¡¶     ¿¡›f¿¡Ô   ¿¡›¿¡ﬁ¿¬IÅ¿¬[  ¿¬k"¿¬Ö  ¿¬I¿¬J¿√Ww¿√\    ¿√‘e¿√Ê   ¿√‘¿√’¿ƒ?¿ƒS  ¿ƒY¿ƒg  ¿ƒ?¿ƒ@ ¿ƒ≈Å≤¿≈:/// Widget used to show the pop up animation to the child. ¿≈0X ¿≈6¿≈B ¿≈L¿≈[  ¿≈a$¿≈g  ¿≈r¿≈{¿≈|¿≈é:¿≈√$/// Widget that animated like popup. ¿≈œV¿∆9/// Alignment defines the popup animation start position.  ¿∆,H¿∆O   ¿∆,¿∆- ¿∆{Ñ¿∆Å   ¿∆›]¿«&,/// Controller used to handle the animation. ¿«A[¿«í6/// Popup animation used to show the child like popup.  ¿«£Å¿«µ   ¿«£¿«§¿»Ω]¿»œ   ¿»Ω¿»æ¿… Åo¿…4  ¿…:¿…H  ¿… ¿…! ¿ ñä)¿ ®  ¿ ÿÑ- ¿ ﬁ¿ Ò %¿ ˙¿À   ¿À¿À  ¿À-¿À3  ¿ÀF	¿ÀL  ¿ÀX¿À^  ¿Ày¿À  ¿Àî
¿Àö  ¿Àß¿À≠  ¿Àª¿À¡  ¿À‹¿À‚  ¿ÀÙ¿À˙  ¿Ã	¿Ã  ¿Ã
¿Ã$  ¿Ã1¿Ã7  ¿ÃE¿ÃK  ¿Ãa¿Ãg  ¿ÃÇ¿Ãà  ¿Ã§¿Ã™  ¿Ãø¿Ã≈  ¿ÃŸ¿Ãﬂ  ¿Ã˙¿Õ   ¿Õ¿Õ  ¿Õ/¿Õ5  ¿ÕP¿ÕV  ¿Õp¿Õv  ¿Õè¿Õï  ¿Õ¥¿Õ∫  ¿Õ’¿Õ€  ¿ÕÚ¿Õ¯  ¿Œ¿Œ  ¿Œ.¿Œ4  ¿ŒM¿ŒS  ¿Œi¿Œo  ¿ŒÖ¿Œã  ¿Œ¢$¿Œ®  ¿Œœ¿Œ’  ¿ŒÏ¿ŒÚ   %¿œ!¿œ   ¿œ1¿œB  ¿œU%¿œo  ¿œ%¿œï  ¿œ©'¿œ√  ¿œ’¿œÂ  ¿œı¿–  ¿–¿–  ¿–3¿–>  ¿–H¿–U  ¿–`¿–k  ¿–É#¿–ú  ¿–´¿–∫  ¿–∆¿–’  ¿–·¿–Ó  ¿–¯¿—  ¿—¿—   ¿—3&¿—M  ¿—^¿—i  ¿—Å2¿—†  ¿—∏¿—À  ¿—‹/¿—˙  ¿“5¿“.  ¿“J¿“U  ¿“n#¿“Ñ  ¿“ñ2¿“µ  ¿“Õ,¿“Á  ¿“˛¿”	  ¿”¿”(  ¿”< ¿”I  ¿”a¿”l  ¿”Å¿”è  ¿”§¿”Ø  ¿”≈¿”–  ¿”„>¿‘  ¿‘&¿‘3  ¿‘G¿‘Q   ¿‘jR¿‘ê   ¿‘j¿‘k¿ ñ¿ ó¿‘√¿ ±d¿‘…   ¿’
-¿’)   ¿’>Å/¿’P   ¿’>¿’?¿÷sÇÏ¿÷Ö  ¿÷ï¿÷™  ¿÷s¿÷t¿Ÿe¿ x¿Ÿy  ¿Ÿ¿Ÿç  ¿Ÿe¿Ÿf¿X„Ä‚¿Xı   ¿X„¿X‰¿YÀ8¿Y–    ¿Z	y¿Z    ¿ZàÄì¿Zç    ¿[!Äë¿[&    ¿[∏î#¿[ø  ¿[ﬁ¿[Â  ¿\¿\  ¿\#¿\)  ¿\;¿\C  ¿\P¿\X  ¿\f¿\q  ¿\~¿\Ö  ¿\ó¿\û  ¿\µ¿\√  ¿\œ¿\’  ¿\Í¿\Ú  ¿]"¿]  ¿]4¿]=   ¿o·Üp¿oË    ¿vWèÕ¿v^     ¿Ü+¶«¿ÜÅN/// It is used to generate the week and month label of schedule calendar view. ¿Ü≤Å£ ¿Ü≤¿Ü« ¿Ü–¿Ü÷  ¿ÜÁ¿ÜÌ  ¿Ü¸¿á  ¿á¿á$  ¿á8
¿á>  ¿áK¿áQ  ¿á_¿áe  ¿áÄ¿áÜ  ¿á†¿á¶  ¿áª¿á¡  ¿á◊¿á›  ¿áı¿á˚  ¿à
¿à¿à ¿àS¿à(¿à!¿à8¿àM¿à*¿à:¿àO¿à[¿àj  ¿àx¿àà  ¿àî¿àü  ¿à∞¿àª  ¿à≈¿à“  ¿à›/¿à¯  ¿â$¿â'  ¿â:¿âE  ¿â]D¿âè  ¿â¶'¿â¿  ¿â“¿â›  ¿âÔ¿â¸  ¿ä.¿ä" ¿ä1¿ä<¿ä=¿äC(¿äO ¿äd¿äi¿äj¿™ËÅ•¿¨*Å/// overrides this property to build the semantics information which uses to
/// return the required information for accessibility, need to return the list
/// of custom painter semantics which contains the rect area and the semantics
/// properties for accessibility  ¿¨ ¿¨¿ärÅò¿äÑ  ¿ää¿äí  ¿äô	¿äü  ¿är¿äs¿åáÉ¿å  ¿å*¿å2  ¿å9	¿å?   ¿ìôâX¿ìû  ¿ì¨¿ì¥  ¿ìª	¿ì¡   ¿ú˜á≈¿ú¸  ¿ù¿ù  ¿ù	¿ù    ¿§¬Å¿§«  ¿§⁄¿§‰   ¿•›S¿•Ô  ¿•˝¿¶  ¿•›¿•ﬁ¿¶6Ñ¨¿¶S  ¿¶h	¿¶n   ¿¨ì\¿¨•  ¿¨º¿¨À  ¿¨ì¿¨î ¿¨ˆÑ¿≠lm/// Used to implement the sticky header in schedule calendar view
/// based on its header and content widget. ¿≠òÅÉ ¿≠ò¿≠∞ ¿≠∏¿≠…  ¿≠÷¿≠Á  ¿≠Û¿Æ
  ¿Æ¿Æ   ¿Æ+¿Æ0¿Ø¿Æ@¿Æ=¿ÆB¿ÆZ¿ÆR¿Æd¿ÆÀ¿Æ\¿Æc¿Æ]¿Æs¿ÆÇ¿Æë¿Æà¿ÆÉ¿Æä¿Æ°¿Æ∞¿Ææ¿Æ∂¿Æ±¿Æ∏¿Æ‚¿ÆŸ¿ÆÓ¿Æ‰¿ÆÒ¿Ø¿Ø  ¿Ø!Å"¿Ø:  ¿ØM¿Ø[  ¿Ø!¿Ø"¿∞IÅ)¿∞m  ¿∞Ä¿∞é  ¿∞ñ¿∞£  ¿∞I¿∞J¿∞V¿∞W ¿±yè≠¿±∂5/// Render object of the schedule calendar view item. ¿±ÚÅ| ¿±Ú¿≤ ¿≤ ¿≤.  ¿≤C;¿≤V  ¿≤Ö¿≤ï  ¿≤®¿≤≤  ¿≤a¿≤u¿≤v¿≤∑¿≤ø¿≤¿¿≤·¿≤–¿≤„¿≤˝¿≥¿≥l¿≥¿≥¿≥¿≥=¿≥0¿≥?¿≥\¿≥Y¿≥^¿≥tb¿≥∆=/// Used to update the child position when it scroll changed. ¿≥›h¿¥/// Current view port.   ¿¥K9¿¥`    ¿¥äÅO¿¥é  ¿¥û¿¥∞   ¿ΩÅ~¿ΩJ /// Return the view port height.   ¿µﬂÄÕ¿∂4?/// attach will called when the render object rendered in view. ¿∂;¿∂J  ¿∂"¿∂#¿∂≤Äπ¿∑@/// attach will called when the render object removed from view.  ¿∂ˆ¿∂˜¿∑qÄ±¿∑É  ¿∑â¿∑ö  ¿∑¢¿∑™  ¿∑q¿∑r¿∏(ÑÌ¿∏-    ¿æüÅj¿øg/// Check current header offset exits content size, if exist then place the
/// header at content size. ¿ø&¿ø.  ¿ø<¿øD   ¿¿Å¿¿\B/// Return current offset value from header size and content size. ¿¿s¿¿{  ¿¿å¿¿î  ¿¿†¿¿®    ¿¡*ÉΩ¿¡í_/// Used to create the custom splash factory that shows the splash for inkwell
/// interaction.    ¿¡—É¿¬8@/// Called when the inkwell pressed and it return custom splash. ¿¬F)¿¬f  ¿¬v¿¬ä  ¿¬ú¿¬≠  ¿¬ª¿¬À  ¿¬÷$¿¬Ó  ¿√¿√  ¿√%¿√4  ¿√F¿√U  ¿√g¿√u  ¿√á¿√ê  ¿√ú¿√´  ¿¬¿¬¿√ ¿ƒÎó¿≈4A/// Custom ink splash used to animate the inkwell on intercation. ¿≈eàt ¿»¿»(Çà/// Begin a splash, centered at position relative to [referenceBox].
///
/// The [controller] argument is typically obtained via
/// `Material.of(context)`.
///
/// If `containedInkWell` is true, then the splash will be sized to fit
/// the well rectangle, then clipped to it when drawn. The well
/// rectangle is the box returned by `rectCallback`, if provided, or
/// otherwise is the bounds of the [referenceBox].
///
/// If `containedInkWell` is false, then `rectCallback` should be null.
/// The ink splash is clipped only to the edges of the [Material].
/// This is the default.
///
/// When the splash is removed, `onRemoved` will be called.¿»0)¿»P  ¿»`¿»t  ¿»Ü¿»ó  ¿»•¿»µ  ¿»¿¿»∆  ¿»‰¿»Û  ¿…¿…  ¿…&¿…5  /¿»ÿ¿…R¿…H¿…T¿…u¿…g¿…Ñ¿…w¿…á¿…ì¿…î¿…±¿…£¿…≥¿…√¿ ¿…“¿…‡¿…Ú¿  ¿ "¿ ¿ 1¿ A¿ n¿ B¿ P¿ b¿ î¿ z¿ ñ¿ ó¿ ≤¿ ∑¿ÀC¿ –¿ ∆¿ “¿ ˜¿ Î¿ ˘¿À¿À¿À¿À8¿À/¿À:	¿ÕﬂC¿Œ)/// Position holds the input touch point. ¿Œ)W¿Œs3/// Specifies the border radius used on the inkwell ¿Œác¿Œ›E/// Radius of ink circle to be drawn on canvas based on its position. ¿ŒÒÄ¡¿œ•Äô/// clipCallback is the callback used to obtain the rect used for clipping
/// the ink effect. If it is null, no clipping is performed on the ink circle. ¿œπÄî¿–4i/// Specifies the reference box repositioned or not. Its value depends on
/// contained inkwell property. ¿–TF¿–ì$/// Animation used to show a ripple. ¿–°a¿–Ò3/// Controller used to handle the ripple animation. ¿—	E¿—H'/// Animation used to handle a opacity. ¿—Ub¿—ß4/// Controller used to handle the opacity animation.  ¿—æÅ√¿—–   ¿—æ¿—ø¿”áC¿”ô   ¿”á¿”à¿”–Ä«¿”’  ¿”Ô¿‘    ¿‘ùÄö¿‘Ø   ¿‘ù¿‘û¿’=Üƒ¿’Ü3///Draws an ink splash or ink ripple on the canvas. ¿’ì¿’õ  ¿’¢¿’´  ¿’t¿’u ¿‹Æm¿‹  ¿‹@Åê ¿‹@¿‹V ¿‹_¿‹e  ¿‹y¿‹  ¿‹ò¿‹û  ¿‹∫¿‹¿  ¿‹€¿‹·  ¿‹˜¿‹˝  ¿›¿›  ¿›&¿›,  ¿›F¿›L  ¿›]
¿›c  ¿›p¿›v  ¿›ç¿›ì  ¿›≠¿›≤¿›Œ¿›∫¿›≥¿›º¿›÷¿›Ê  ¿›˜*¿ﬁ  ¿ﬁ&0¿ﬁB  ¿ﬁ[ ¿ﬁh  ¿ﬁÄ¿ﬁë  ¿ﬁ§¿ﬁ±  ¿ﬁºD¿ﬁÓ  ¿ﬂ'¿ﬂ  ¿ﬂ1¿ﬂ>  ¿ﬂL¿ﬂW  ¿ﬂa¿ﬂn  ¿ﬂÇ¿ﬂç  ¿ﬂ¢"¿ﬂÆ ¿ﬂΩ¿ﬂ¬¿ﬂ√¿ﬂ….¿ﬂ€ ¿ﬂÍ¿ﬂı¿ﬂˆ¿ÓÅ•¿0Å/// overrides this property to build the semantics information which uses to
/// return the required information for accessibility, need to return the list
/// of custom painter semantics which contains the rect area and the semantics
/// properties for accessibility  ¿¿¿ﬂ˛äy¿‡  ¿‡¿‡  ¿‡%	¿‡+  ¿ﬂ˛¿ﬂˇ¿Í}Å>¿ÍÇ  ¿Íï¿Íü   ¿Î¡ä(¿Î∆  ¿Î‰¿ÎÏ  ¿Î˙	¿Ï   ¿Ï¿Ï  ¿Ï#¿Ï.  ¿ÏB¿ÏM  ¿Ïb¿Ïh  ¿Ïw¿Ï}   ¿ıÔé ¿ıÙ  ¿ˆ¿ˆ  ¿ˆ	¿ˆ  ¿ˆ!¿ˆ)  ¿ˆ8¿ˆC  ¿ˆP¿ˆ[  ¿ˆi¿ˆo   ¿ıÅö¿˙  ¿¿  ¿"¿*  ¿4¿<  ¿F¿N   ¿ïS¿ß  ¿µ¿ƒ  ¿ï¿ñ¿ô\¿´  ¿¬¿—  ¿ô¿ö¿˚Çw¿  ¿-	¿3    ¿
yÄÛ¿Äô/// Used to store the height and intersection point of scroll view item.
/// intersection point used to identify the view does not have same month dates.  ¿5¿A  ¿M¿Y         ¿pÉ(¿«N/// Returns the maximum radius value calculated based on input touch position. ¿ÿ¿„  ¿¿ˆ  ¿¿  ¿(¿0   ¿úÅ¬¿Î?/// Return the rect callback value based on its argument value. ¿¿  ¿¿   ¿1¿@   ¿bÖS¿g  ¿Å¿â  ¿é¿ñ  ¿ù¿•  ¿´¿π  ¿«¿”   ¿πÉ«¿”  ¿È¿˙   ¿ÑÅV¿«:/// Return day label width based on schedule view setting. ¿È)¿ˇ  ¿¿    à8>à@   àhàp    Ü§ÅásÄº/// Specifies the unconfirmed ripple animation duration used on custom splash.
/// The duration was unconfirmed because the ripple animation duration changed
/// based on its radius value.áóáüá™áßá†á©á∞ÄÉà@/// Specifies the fade animation duration used on custom splash.àà à2à-à!à/  ¨Ô JsÄúÄ∆ÄÅÅMÅÅ¥ÅÚÇ(ÇiÇìÇïÇƒÇ˙É1ÉfÉüÉ’Ñ Ñ,ÑTÑqÑìÑ√ÑÔÖÖEÖrÖ¢Ö“Ö˜Ü(ÜSÜ~Ü¢Ü§ÜÙáDádáÆá∞áÚà6à8àxàzàõà†àÕà“ââjâµâ≈â äääläùä¢äÃäÊãã ã<ã^ãÅã®ãÃãÎãåmårå¿å˙åˇçQçyç~çœç˘ç˛éHéïé£é®éÚè<èaè¢è·êê"êfêkêzê∆ëë_ë®ë¯íGíñí›ì'ìvìãì⁄ìÎî:î[î`îeîrîõî¥î—îıï'ï4ï?ïGïLïï¨ïÀï”ï⁄ïﬂññEñ_ñxñ°ñÃñÛóó3óUóvóïó•ó™ó”ó€óÂóÒòòhòwò~òœò÷ôô6ô=ôàôòôßô ôËöö&öEö_özöïö´öøöﬁö˜õõõ=õSõxõëõªõ◊õıúú.úcúòú◊ùùOùrùëù–ùËû û2ûPûgûçû≠û‘û¸ü#üNümü•üΩü◊ü¯††<†q†ñ†¿†‰°	°+°O°å°£°ª°–¢¢1¢Z¢¨¢˝£$£X£ô£«£Û§)§C§E§í§º§√••c•±•˝¶O¶û¶»¶œßß?ßFßîß„®®&®7®à®±®¸©©µ©º©Ã©›™
™(™D™d™è™º™¸´>´n´ú´“¨¨3¨É¨©¨›≠≠H≠É≠√≠ÒÆCÆ\ÆsÆàÆóÆ§ÆÆÆµÆ¿Æ˜Æ˘ØGØ`ØgØÄØáØòØ‚∞#∞q∞æ±V±]±m±ô±µ±‘±˙≤*≤[≤ç≤¡≤ﬂ≤Ó≤˚≥≥≥≥B≥D≥ë≥•≥¨≥»≥œ≥‡¥1¥H¥ò¥´µ;µBµRµYµÖµ°µ¿µÊ∂∂∂)∂3∂:∂E∂h∂j∂∑∂æ∑∑J∑Q∑m∑t∑Ö∑’∑Ë∏6∏dπ)π0π@πlπàπßπÀπÛ∫∫∫∫ ∫+∫O∫Q∫°∫Âªª
ª%ª,ª=ªÜªçªîª§ª–ªÏºº1º`ºmºwº~ºâº±º≥º·ºËΩΩΩ'ΩhΩ≤ΩÛæ@æëæ®æ¯øøõø¢ø©øπø‰¿ @ ¿ @¿ @E¿ @T¿ @a¿ @k¿ @r¿ @~¿ @ö¿ @ú¿ @ﬂ¿ @Ê¿ A4¿ A¿ A±¿ A∏¿ A„¿ AÍ¿ B9¿ BÜ¿ B¬¿ B…¿ B⁄¿ C)¿ Cs¿ CΩ¿ C—¿ Cÿ¿ CË¿ D¿ D/¿ DN¿ Du¿ D±¿ D¿¿ DÕ¿ D◊¿ Dﬁ¿ DÍ¿ E¿ E¿ EK¿ ER¿ E†¿ EÍ¿ F¿ F#¿ FO¿ FV¿ F•¿ FÚ¿ G.¿ G5¿ GF¿ Gï¿ G›¿ H'¿ H;¿ HB¿ HR¿ HY¿ HÑ¿ H†¿ Hø¿ HÊ¿ I"¿ I1¿ I>¿ IH¿ IO¿ I[¿ Iv¿ Ix¿ Iæ¿ I⁄¿ I·¿ IÚ¿ JD¿ Jk¿ Jµ¿ J∆¿ K\¿ L¿ L%¿ L4¿ LD¿ Lq¿ Lå¿ L´¿ L–¿ Lˆ¿ M¿ M]¿ M}¿ M†¿ MΩ¿ MÏ¿ Mˇ¿ N¿ N¿ N.¿ N8¿ ND¿ Nq¿ Ns¿ N¬¿ O¿ O¿ O&¿ Op¿ Oª¿ P¿ P¿ P&¿ P7¿ Pâ¿ P€¿ PÏ¿ Q9¿ QS¿ R¿ R¿ R#¿ Ra¿ Rh¿ Rz¿ Rß¿ R≈¿ R·¿ S¿ S)¿ SR¿ Sç¿ S⁄¿ T&¿ TL¿ Tí¿ T⁄¿ U¿ U¿ Ud¿ Uò¿ Uﬂ¿ V¿ V8¿ Vn¿ V•¿ V˜¿ W-¿ Wp¿ WÆ¿ WÎ¿ X ¿ XT¿ Xë¿ XÃ¿ X˛¿ YB¿ Yh¿ Yµ¿ Y·¿ Z"¿ Zc¿ Zõ¿ ZÍ¿ [¿ [R¿ [†¿ [‰¿ \0¿ \q¿ \©¿ \˜¿ ]¿ ]<¿ ]W¿ ]ã¿ ]“¿ ]¯¿ ^>¿ ^Ü¿ ^æ¿ ^’¿ ^È¿ ^¸¿ _¿ _¿ _)¿ _3¿ _?¿ _x¿ _z¿ _À¿ `
¿ `¿ `"¿ `n¿ `¿¿ `ﬂ¿ a£¿ a™¿ a±¿ a¿¿ a«¿ aÛ¿ b.¿ bX¿ bû¿ b¿¿ bﬂ¿ c¿ cC¿ cv¿ cï¿ cú¿ c∂¿ c¿¿ c«¿ cŸ¿ d¿ d$¿ dB¿ d`¿ dÜ¿ d∑¿ dÿ¿ e(¿ eJ¿ ew¿ e¶¿ e≈¿ e˘¿ f4¿ fI¿ fv¿ fß¿ fÛ¿ g#¿ gu¿ g≠¿ g‰¿ g˜¿ h¿ h¿ h%¿ h/¿ h;¿ hj¿ hl¿ hß¿ hÆ¿ h¯¿ i=¿ it¿ i{¿ i´¿ i€¿ j¿ j1¿ j_¿ jå¿ j∫¿ jÂ¿ k¿ k>¿ kk¿ kô¿ k»¿ kˆ¿ l%¿ lX¿ lÖ¿ l≥¿ lﬁ¿ m
¿ m7¿ me¿ mì¿ m¬¿ mÚ¿ n!¿ nQ¿ nÖ¿ n≥¿ n‚¿ o¿ o9¿ of¿ oë¿ oΩ¿ oÍ¿ p¿ pD¿ pp¿ pú¿ p«¿ pÛ¿ q¿ q%¿ q>¿ qE¿ qV¿ qú¿ qÎ¿ r1¿ r’¿ r‹¿ r„¿ rÛ¿ s¿ s0¿ sN¿ sj¿ sä¿ s¥¿ s„¿ sÚ¿ t ¿ t¿ t¿ t"¿ tE¿ tG¿ tê¿ tπ¿ t¿¿ t—¿ u¿ uÎ¿ uÚ¿ v¿ v¿ v?¿ vZ¿ vy¿ vû¿ v«¿ w¿ wN¿ wn¿ wë¿ wÆ¿ wÁ¿ x¿ x-¿ x>¿ xM¿ x\¿ xf¿ xr¿ xª¿ xΩ¿ xÛ¿ x˙¿ yK¿ yì¿ yö¿ y‘¿ y€¿ yÏ¿ z/¿ zœ¿ z÷¿ z›¿ zÌ¿ zÙ¿ { ¿ {<¿ {[¿ {Ç¿ {£¿ {≤¿ {ø¿ {…¿ {–¿ {‹¿ {˘¿ {˚¿ |D¿ |p¿ |w¿ |π¿ |Ò¿ |¯¿ }:¿ }Å¿ }à¿ }°¿ }®¿ }π¿ }˙¿ ~î¿ ~õ¿ ~´¿ ~≤¿ ~›¿ ~˘¿ ¿ @¿ t¿ ò¿ Â¿ Ä¿ Ä(¿ Ä5¿ Ä?¿ ÄF¿ ÄR¿ Ä~¿ ÄÄ¿ Ä—¿ Äÿ¿ ÄÒ¿ Ä¯¿ ÅB¿ Å{¿ ÅÇ¿ Åì¿ ÅÂ¿ ÅÚ¿ Ç:¿ Ç‘¿ Ç€¿ ÇÎ¿ ÇÚ¿ É¿ É9¿ ÉX¿ É~¿ É™¿ Éπ¿ É∆¿ É–¿ É◊¿ É·¿ Ñ¿ Ñ¿ ÑV¿ Ño¿ Ñv¿ Ñ¡¿ ÑÛ¿ Ö$¿ ÖX¿ Öê¿ Ö‚¿ ÖÈ¿ Ö˙¿ ÜJ¿ Ün¿ Üπ¿ Ü‹¿ á¢¿ àp¿ â?¿ â¡¿ ä_¿ äf¿ äv¿ ä}¿ äé¿ äª¿ ä◊¿ äˆ¿ ã!¿ ã[¿ ãà¿ ã¬¿ ã‚¿ å¿ å)¿ å8¿ åE¿ åO¿ åV¿ åb¿ åñ¿ åò¿ å‹¿ å„¿ ç#¿ çN¿ çó¿ çû¿ é¿ é%¿ é6¿ éà¿ é†¿ éÔ¿ è<¿ èM¿ è—¿ ê{¿ êÇ¿ êë¿ êº¿ ê÷¿ êÒ¿ ë¿ ëD¿ ëã¿ ë∏¿ ëÁ¿ ëÙ¿ ëˇ¿ í¿ í¿ í<¿ í>¿ í{¿ íÇ¿ íƒ¿ ì¿ ì1¿ ì8¿ ì¡¿ ì»¿ ìŸ¿ î+¿ îP¿ îû¿ îØ¿ ï\¿ ñ¿ ñ≤¿ ñπ¿ ñ»¿ ñœ¿ ñ˙¿ ó¿ ó5¿ ó\¿ óå¿ óº¿ ò	¿ òX¿ òg¿ òt¿ ò~¿ òÖ¿ òê¿ ò∫¿ òº¿ ô¿ ô¿ ô!¿ ô(¿ ô¢¿ ô©¿ ô∫¿ ö¿ ö¿ öh¿ öy¿ ö˝¿ õß¿ õÆ¿ õΩ¿ õƒ¿ õÔ¿ ú¿ ú*¿ úQ¿ úr¿ úÅ¿ úé¿ úò¿ úü¿ ú™¿ ú»¿ ú ¿ ù¿ ù7¿ ù>¿ ùW¿ ù^¿ ùß¿ ùº¿ ù√¿ ù‘¿ û"¿ ûE¿ ûï¿ û¿¿ ü¿ ü€¿ ü‚¿ üÚ¿ †¿ †;¿ †Z¿ †Ä¿ †°¿ †∞¿ †Ω¿ †«¿ †Œ¿ †Ÿ¿ †˘¿ †˚¿ °I¿ °P¿ °i¿ °p¿ °∫¿ °Û¿ °˙¿ ¢K¿ ¢ô¿ ¢‡¿ ¢Á¿ ¢¯¿ £H¿ £ê¿ £ﬂ¿ §1¿ §B¿ §ë¿ §∂¿ •E¿ •L¿ •[¿ •b¿ •ç¿ •©¿ •»¿ •Û¿ ¶"¿ ¶F¿ ¶y¿ ¶£¿ ¶÷¿ ¶Â¿ ¶Ú¿ ¶¸¿ ß¿ ß¿ ß8¿ ß:¿ ßä¿ ßë¿ ß™¿ ß±¿ ®4¿ ®;¿ ®L¿ ®û¿ ®√¿ ©p¿ ™¿ ™∆¿ ™Õ¿ ™‹¿ ™„¿ ´¿ ´*¿ ´I¿ ´p¿ ´ï¿ ´§¿ ´±¿ ´ª¿ ´¬¿ ´Õ¿ ´Ô¿ ´Ò¿ ¨.¿ ¨5¿ ¨Ö¿ ¨ÿ¿ ≠¿ ≠¿ ≠%¿ ≠,¿ ≠v¿ ≠Ø¿ ≠∂¿ ≠«¿ Æ¿ Æ7¿ Æ{¿ ÆÕ¿ Æ⁄¿ ØÄ¿ Øá¿ Øñ¿ Øù¿ Ø…¿ ØÂ¿ ∞¿ ∞+¿ ∞Z¿ ∞i¿ ∞v¿ ∞Ä¿ ∞á¿ ∞í¿ ∞∑¿ ∞π¿ ∞Û¿ ∞˙¿ ±¿ ±¿ ±f¿ ±•¿ ±¨¿ ±¸¿ ≤A¿ ≤H¿ ≤î¿ ≤ƒ¿ ≤À¿ ≥¿ ≥N¿ ≥U¿ ≥f¿ ≥∑¿ ≥–¿ ¥"¿ ¥G¿ ¥í¿ ¥¿¿ µ¿ µ3¿ µª¿ µ¬¿ µ—¿ µ¸¿ ∂¿ ∂7¿ ∂_¿ ∂§¿ ∂Õ¿ ∂˚¿ ∑
¿ ∑¿ ∑!¿ ∑,¿ ∑P¿ ∑R¿ ∑ö¿ ∑°¿ ∑∫¿ ∑¡¿ ∏¿ ∏D¿ ∏K¿ ∏\¿ ∏£¿ ∏ı¿ π¿ πû¿ π•¿ π¥¿ πª¿ πÊ¿ ∫¿ ∫!¿ ∫H¿ ∫{¿ ∫ä¿ ∫ó¿ ∫°¿ ∫®¿ ∫≥¿ ∫‘¿ ∫÷¿ ª ¿ ª'¿ ªr¿ ª√¿ ªı¿ ª¸¿ º¿ º¿ ºd¿ ºÉ¿ ºä¿ ºõ¿ ºÁ¿ Ω¿ Ω`¿ Ωà¿ æb¿ æi¿ æp¿ æÄ¿ æ´¿ æ«¿ æÊ¿ ø¿ ø5¿ øD¿ øQ¿ ø[¿ øb¿ øm¿ øê¿ øí¿ ø„¿ ø˝¿ ¿¿ ¿0¿ ¿7¿ ¿}¿ ¿«¿ ¿ˇ¿ ¡¿ ¡¿ ¡c¿ ¡ã¿ ¡›¿ ¡˛¿ ¬O¿ ¬ó¿ √3¿ √:¿ √J¿ √u¿ √ë¿ √∞¿ √÷¿ ƒ¿ ƒ ¿ ƒ-¿ ƒ7¿ ƒ>¿ ƒI¿ ƒy¿ ƒ{¿ ƒÃ¿ ƒË¿ ƒÔ¿ ≈0¿ ≈~¿ ≈™¿ ≈‹¿ ∆¿ ∆Z¿ ∆¨¿ ∆”¿ ∆⁄¿ ∆Î¿ «:¿ «]¿ «Ø¿ «“¿ »$¿ »J¿ »ô¿ »¡¿ …U¿   ¿  ⁄¿ Àç¿ ÃG¿ ÃÌ¿ ÃÙ¿ Õ¿ Õ
¿ Õ5¿ ÕQ¿ Õp¿ Õõ¿ Õ’¿ Õˆ¿ Œ¿ Œ>¿ Œe¿ Œä¿ ŒÆ¿ Œ√¿ Œ˚¿ œ%¿ œK¿ œn¿ œí¿ œ∏¿ œ«¿ œ‘¿ œﬁ¿ œÂ¿ œ¿ –$¿ –&¿ –u¿ –É¿ –ä¿ –õ¿ –Ï¿ — ¿ —O¿ —z¿ —√¿ —Â¿ “1¿ “P¿ “Ó¿ “ı¿ ”¿ ”¿ ”A¿ ”]¿ ”|¿ ”¨¿ ”‡¿ ‘¿ ‘E¿ ‘b¿ ‘ï¿ ‘»¿ ‘Ï¿ ’!¿ ’0¿ ’=¿ ’G¿ ’O¿ ’V¿ ’ä¿ ’∑¿ ’Ò¿ ÷¿ ÷6¿ ÷@¿ ÷H¿ ÷O¿ ÷{¿ ÷µ¿ ÷ˆ¿ ◊¿ ◊C¿ ◊Ä¿ ◊ú¿ ◊º¿ ◊‹¿ ÿ¿ ÿ&¿ ÿE¿ ÿL¿ ÿc¿ ÿ°¿ ÿŸ¿ ÿ‡¿ Ÿ¿ Ÿ¿ Ÿ#¿ Ÿ.¿ Ÿb¿ Ÿd¿ Ÿ≥¿ ŸÃ¿ Ÿ”¿ ⁄¿ ⁄A¿ ⁄t¿ ⁄õ¿ ⁄”¿ €¿ €$¿ €5¿ €Ñ¿ €ï¿ €Ê¿ €˙¿ ‹C¿ ‹v¿ ‹ƒ¿ ‹ı¿ ›¿¿ ﬁd¿ ﬂE¿ ﬂÂ¿ ‡∞¿ ·@¿ ·‹¿ ‚•¿ ‚¨¿ ‚ª¿ ‚¬¿ ‚Ì¿ „	¿ „(¿ „P¿ „Ñ¿ „ß¿ „–¿ „˝¿ ‰O¿ ‰s¿ ‰ø¿ ‰Œ¿ ‰€¿ ‰Â¿ ‰Ï¿ ‰˜¿ Â%¿ Â'¿ Âe¿ Âá¿ Âé¿ Âß¿ ÂÆ¿ ÂÛ¿ Ê1¿ Êk¿ Êr¿ ÊÉ¿ ÊÕ¿ Êﬁ¿ Á°¿ Ë)¿ Ë€¿ Ë‚¿ ËÒ¿ Ë¯¿ È$¿ ÈB¿ È^¿ È~¿ Èß¿ È—¿ Í	¿ ÍA¿ Íy¿ Í∞¿ Í¬¿ Í”¿ Í‚¿ ÍÔ¿ Í˘¿ Î ¿ Î¿ Î3¿ Î5¿ ÎÇ¿ Î°¿ ÎÊ¿ Ï¿ Ïd¿ Ïk¿ ÏÑ¿ Ïã¿ Ï’¿ Ì¿ Ì¿ Ì&¿ Ìo¿ Ì¡¿ ÌŒ¿ Óë¿ Ô¿ ÔÀ¿ Ô“¿ ÔŸ¿ ÔÈ¿ Ô¿ ¿ :¿ V¿ v¿ †¿ ”¿ Ò¿ Ò4¿ ÒV¿ ÒÄ¿ Òí¿ Ò£¿ Ò≤¿ Òø¿ Ò…¿ Ò–¿ Ò€¿ Ú¿ Ú	¿ ÚH¿ ÚO¿ Úh¿ Úo¿ Úπ¿ ÚÚ¿ Ú˘¿ Û
¿ ÛZ¿ Û©¿ Û…¿ Ù¿ Ù(¿ Ù‡¿ ÙÁ¿ Ùˆ¿ Ù˝¿ ı(¿ ıD¿ ıc¿ ıã¿ ıΩ¿ ıÈ¿ ˆ¿ ˆT¿ ˆz¿ ˆ«¿ ˆı¿ ˜¿ ˜¿ ˜#¿ ˜-¿ ˜4¿ ˜?¿ ˜i¿ ˜k¿ ˜†¿ ˜ß¿ ˜Ù¿ ¯¿ ¯¿ ¯T¿ ¯|¿ ¯É¿ ¯î¿ ¯Ê¿ ˘¿ ˘W¿ ˘p¿ ˘¡¿ ˘⁄¿ ˙,¿ ˙S¿ ˙°¿ ˙≥¿ ˚u¿ ¸6¿ ¸=¿ ¸L¿ ¸S¿ ¸~¿ ¸ö¿ ¸π¿ ¸‡¿ ˝$¿ ˝3¿ ˝@¿ ˝J¿ ˝Q¿ ˝\¿ ˝Ç¿ ˝Ñ¿ ˝∑¿ ˝æ¿ ˛¿ ˛W¿ ˛~¿ ˛Ö¿ ˛‘¿ ˇ"¿ ˇs¿ ˇâ¿ ˇê¿ ˇ©¿ ˇ∞¿ ˇ¡¿ ¿  ¿ n¿ {¿ ›¿ ‰¿ Î¿ Ú¿¿¿3¿O¿n¿ï¿«¿÷¿„¿Ì¿Ù¿ˇ¿¿¿U¿\¿§¿´¿ƒ¿À¿‹¿-¿M¿ò¿©¿Ú¿¿P¿}¿œ¿Î¿¡¿k¿r¿Å¿à¿≥¿œ¿Ó¿¿Z¿i¿u¿¿Ü¿ë¿π¿ª¿ ¿¿T¿ê¿À¿	¿	U¿	v¿	ø¿	›¿	‰¿
.¿
?¿
c¿
j¿
{¿
Õ¿
Í¿;¿ç¿≤¿˛¿¿h¿Å¿D¿$¿¿	¿¿¿J¿f¿Ö¿¨¿Á¿$¿5¿D¿Q¿[¿b¿m¿ö¿ú¿›¿‰¿2¿u¿|¿ç¿›¿ı¿G¿X¿™¿º¿¿-¿x¿â¿€¿˜¿∞¿é¿e¿¿⁄¿·¿¿˜¿¿.¿U¿à¿∑¿Ù¿2¿C¿R¿_¿i¿p¿{¿†¿¢¿È¿¿9¿R¿õ¿¢¿≥¿ˇ¿'¿y¿ä¿’¿Ê¿8¿T¿¿¿¿#¿;¿Z¿Å¿¿¿Ô¿,¿j¿{¿ä¿ó¿°¿®¿≥¿‰¿Ê¿¿%¿i¿Ü¿ç¿û¿Ó¿ ¿ `¿ q¿ √¿ ’¿!&¿!F¿!ë¿!¢¿!Ú¿"¿"”¿"⁄¿"È¿"¿#¿#'¿#U¿#õ¿# ¿$	¿$¿$)¿$6¿$@¿$G¿$R¿$ë¿$ì¿$ﬂ¿%¿%	¿%N¿%†¿%π¿%¿¿%Ÿ¿%‡¿%Ò¿&C¿&X¿&ß¿&˜¿'¿'^¿'ô¿'Í¿(¿(S¿(£¿(∏¿)
¿)¿)i¿)é¿*Z¿*Ù¿+Ø¿,â¿-5¿-Â¿.t¿/!¿/⁄¿0l¿0s¿0z¿0â¿0ê¿0º¿0ÿ¿0˜¿1¿1R¿1å¿1∏¿1‹¿2¿29¿2l¿2}¿2å¿2ô¿2£¿2™¿2ﬂ¿3¿3/¿39¿3B¿3I¿3w¿3≥¿3€¿4¿4?¿4[¿4{¿4õ¿4∫¿4◊¿4Â¿4Ï¿5¿5!¿5(¿53¿5\¿5^¿5¶¿5≠¿5Ô¿63¿6:¿6u¿6|¿6ç¿6‹¿6Ï¿7>¿7]¿8!¿8∞¿9ë¿:Z¿:Ó¿;Ö¿;å¿;ú¿;…¿;Â¿<¿<+¿<\¿<k¿<x¿<Ç¿<â¿<∂¿<Ò¿=¿=<¿={¿=™¿=›¿=¸¿>¿>¿>'¿>.¿>:¿>e¿>g¿>∑¿>ﬂ¿>Ê¿?7¿?Ö¿?’¿@¿@¿@-¿@4¿@E¿@î¿@‰¿@Î¿@Ú¿A¿A.¿AH¿Ae¿Aå¿AØ¿Aæ¿AÀ¿A’¿AÛ¿Aı¿B@¿BS¿BZ¿B§¿B›¿B‰¿B˝¿C¿C¿Cg¿C≤¿C„¿D5¿DB¿DI¿DY¿DÖ¿Dü¿D∫¿Dﬂ¿E ¿E-¿EZ¿E°¿E≠¿E∏¿E¡¿EÎ¿EÌ¿F5¿F\¿Fc¿F|¿FÉ¿Fî¿F‰¿G4¿GE¿Gî¿Gø¿G∆¿G÷¿H¿H¿H:¿HW¿H¿Hè¿HÆ¿H·¿I¿I^¿Ió¿Iª¿Iˇ¿JE¿J|¿Jü¿JÔ¿K+¿KE¿K]¿Ky¿K†¿K÷¿K˙¿L2¿LL¿Ld¿Ly¿Lé¿Lú¿L®¿L±¿L¿LÚ¿M:¿MP¿MW¿Mq¿Mx¿Mâ¿M÷¿MÈ¿N0¿NI¿NP¿Né¿N›¿O,¿O3¿OÑ¿Oø¿O∆¿O÷¿P¿P¿P9¿P`¿PÉ¿P®¿Pﬂ¿Q¿Q'¿Q_¿Qé¿Q∂¿Q∆¿Q‘¿Q‡¿QÈ¿R	¿R¿RE¿RL¿R]¿Rß¿Rº¿S	¿S!¿S(¿S8¿Sd¿S~¿Sõ¿S¬¿SÂ¿T
¿TA¿Tg¿Tâ¿T¡¿T¿U¿U(¿U6¿UB¿UK¿U}¿U¿UÀ¿U“¿V!¿V:¿VA¿VQ¿V}¿Vó¿V¥¿V›¿W¿W)¿Wb¿Wä¿WÆ¿WË¿X¿XC¿XU¿Xô¿X÷¿Y¿Y)¿Y5¿Y>¿Yr¿Yt¿Yº¿Y√¿Z¿ZX¿Z_¿Zo¿Zõ¿Zµ¿Z“¿Z˚¿[ ¿[G¿[Ä¿[®¿[Ã¿\¿\7¿\a¿\s¿\π¿\ˆ¿]B¿]é¿]‘¿^¿^'¿^3¿^<¿^r¿^t¿^¿¿^«¿_¿_A¿_H¿_X¿_Ñ¿_û¿_ª¿_‰¿`	¿`0¿`i¿`ë¿`µ¿`Ô¿a ¿aJ¿a\¿aú¿aŸ¿b%¿bq¿b±¿bƒ¿b–¿bŸ¿c	¿c¿cZ¿cr¿cy¿c√¿d
¿dX¿dè¿dñ¿dø¿e¿eV¿e†¿e¡¿e»¿eÔ¿f<¿fÑ¿fã¿f≠¿f¯¿gB¿gw¿g~¿g ¿h¿hN¿hU¿hn¿hu¿hÜ¿h÷¿h¿i;¿iã¿iù¿iÈ¿j¿jd¿jÑ¿kE¿k‡¿lä¿mS¿mZ¿ma¿m™¿mø¿m∆¿m’¿m‹¿n
¿n¿nA¿nS¿nh¿nû¿n„¿o'¿oD¿oN¿oU¿og¿oî¿o≤¿oŒ¿oÓ¿p¿pI¿pZ¿pi¿pv¿pÄ¿pà¿pì¿pº¿pæ¿q¿q¿q*¿q1¿qÄ¿qá¿qÃ¿r¿r¿r+¿rz¿r¢¿r©¿r∏¿rø¿rÎ¿s¿s&¿sS¿sb¿so¿sy¿sÄ¿så¿s≤¿s¥¿sˇ¿t¿tW¿tö¿t°¿t≤¿t˛¿u+¿u{¿uå¿u◊¿uÌ¿uÙ¿v¿v
¿v#¿vB¿vi¿v∫¿vˆ¿w5¿wF¿wU¿wb¿wl¿ws¿w~¿w¡¿w√¿x¿x¿xY¿x®¿xØ¿x¿¿y¿yB¿yë¿y®¿yÛ¿z	¿z¿z¿z&¿z?¿z^¿zÖ¿zŒ¿{¿{Y¿{ò¿{œ¿|
¿|¿|*¿|7¿|A¿|H¿|S¿|ò¿|ö¿|„¿|Í¿}:¿}p¿}ñ¿}ù¿}Æ¿}¯¿~,¿~{¿~í¿~‚¿~Û¿~˙¿	¿¿)¿H¿o¿º¿¯¿Ä7¿Äk¿Ä†¿Ä±¿Ä¿¿ÄÕ¿Ä◊¿Äﬁ¿ÄÈ¿Å(¿Å*¿Å{¿Åà¿Åè¿ÅŸ¿Å¸¿Ç¿ÇF¿Çó¿Ç¶¿Ç˜¿É0¿ÉÇ¿É∂¿ÉΩ¿Éƒ¿É„¿ÉÍ¿É˚¿ÑE¿ÑÖ¿ÑŒ¿Ö¿Öπ¿Ö¿¿ÖŒ¿Ö’¿Ü¿Ü/¿Üt¿Ü√¿Ü ¿Ü’¿á¿áB¿áÖ¿áÆ¿á“¿à¿à9¿àb¿àÜ¿àπ¿àÏ¿â*¿âO¿â°¿â¶¿â®¿â¯¿ä¿ä!¿än¿äu¿äΩ¿ã¿ã,¿ã3¿ãZ¿ãa¿ãr¿ãø¿ã¸¿å?¿å^¿ç¿ç¿ç$¿ç3¿ç:¿çm¿ç†¿çÏ¿çÛ¿ç˛¿éO¿éç¿éí¿éî¿éÊ¿è(¿è/¿è{¿èÇ¿è”¿èÔ¿ê9¿ê¿êÜ¿êü¿ê¶¿ê∑¿ë¿ëA¿ëã¿ë£¿ëÌ¿í-¿ív¿íµ¿íº¿íÀ¿í“¿ì¿ì=¿ì¿ì√¿ìÏ¿î¿î$¿îQ¿îÇ¿î±¿îœ¿îÌ¿ï6¿ï~¿ïÖ¿ïê¿ï⁄¿ñ¿ña¿ñ≤¿ñ¥¿ñ‡¿ó¿ó¿ó!¿ó.¿ó`¿óô¿óõ¿ó®¿óÓ¿ò¿òc¿ò¥¿ò…¿ô¿ô.¿ô~¿ôé¿ô›¿ôÚ¿öB¿öa¿ö´¿ö≤¿ö¬¿õ¿õH¿õÅ¿õµ¿õÚ¿ú¿úS¿úí¿úß¿ú¯¿ù¿ù^¿ùõ¿ù–¿ùˇ¿û8¿ûg¿û®¿ûÏ¿ü/¿üz¿ü¡¿ü÷¿†(¿†[¿†ê¿†√¿†˙¿°B¿°ä¿°“¿¢"¿¢j¿¢®¿¢”¿£"¿£f¿£ç¿£ÿ¿§¿§V¿§£¿§ﬁ¿•¿•T¿•â¿•≈¿•¯¿¶8¿¶s¿¶æ¿¶Û¿ß*¿ße¿ß¶¿ß€¿®¿®S¿®ó¿®Õ¿©¿©T¿©d¿©¥¿©…¿™¿™^¿™Ö¿™Õ¿™ˆ¿´;¿´^¿´c¿´f¿´h¿´ö¿´≈¿´ˆ¿¨¿¨1¿¨~¿¨œ¿¨Ò¿¨Û¿≠8¿≠Ü¿≠à¿≠æ¿≠Á¿Æ¿ÆB¿ÆZ¿ÆÇ¿Æ∫¿ÆÊ¿Ø3¿Ø|¿Øò¿Øö¿ØÊ¿Ø˚¿∞/¿∞1¿∞r¿∞ü¿∞°¿∞Á¿∞ˇ¿±¿±I¿±Ä¿±Ç¿±¡¿±Ë¿±Í¿≤(¿≤K¿≤M¿≤î¿≤“¿≤‘¿≥¿≥^¿≥`¿≥ì¿≥¥¿≥∂¿¥¿¥L¿¥q¿¥s¿¥±¿µ¿µW¿µÉ¿µ©¿µÔ¿∂¿∂¿∂e¿∂±¿∂∆¿∂ﬂ¿∂·¿∑-¿∑P¿∑s¿∑u¿∑ä¿∑¶¿∑¿¿∑„¿∏¿∏¿∏a¿∏á¿∏Æ¿∏∞¿∏˝¿π¿π¿πc¿πÜ¿πà¿πƒ¿πÔ¿πÒ¿∫:¿∫Y¿∫[¿∫è¿∫”¿∫’¿ª¿ªA¿ªC¿ªê¿ª—¿ªÚ¿ªÙ¿ºA¿ºW¿ºÅ¿ºÉ¿º‘¿Ω!¿ΩX¿Ωw¿Ωy¿Ω ¿æ¿æN¿æm¿æo¿æº¿æÈ¿æÎ¿ø<¿øf¿øñ¿øò¿ø‚¿¿)¿¿T¿¿V¿¿†¿¿È¿¡4¿¡n¿¡ï¿¡ó¿¡§¿¡∫¿¡ÿ¿¡Ú¿¬¿¬0¿¬n¿¬º¿√
¿√D¿√}¿√´¿√Ê¿ƒ¿ƒR¿ƒï¿ƒ”¿≈¿≈F¿≈â¿≈⁄¿∆+¿∆X¿∆é¿∆µ¿∆’¿∆˝¿«9¿«[¿«Ö¿«å¿«Ø¿«¿»¿»P¿»ü¿»‘¿»€¿»›¿…(¿…d¿…k¿…m¿…π¿…‰¿  ¿ F¿ z¿ ¥¿ ª¿ Ω¿ ·¿À+¿Àa¿Àè¿Àë¿À±¿À…¿ÀŒ¿À–¿À›¿Àˇ¿Ã?¿Ãê¿ÃÆ¿Ã‚¿Õ1¿ÕG¿Õ^¿ÕÆ¿Õƒ¿Œ¿Œy¿Œ¥¿ŒÁ¿ŒÈ¿œ¿œ ¿œa¿œó¿œ≈¿œÈ¿œÓ¿œ¿œ˝¿–-¿–c¿–¿– ¿—¿—[¿—É¿—»¿—Î¿“(¿“H¿“ç¿“À¿“€¿”¿”a¿”´¿”‹¿‘¿‘¿‘S¿‘Ñ¿‘¶¿‘Ù¿‘˚¿‘˝¿’3¿’Y¿’ä¿’∏¿’Î¿÷*¿÷u¿÷§¿÷—¿◊¿◊I¿◊ï¿◊æ¿◊Ô¿ÿ¿ÿF¿ÿà¿ÿ∞¿ÿÍ¿Ÿ*¿Ÿ7¿Ÿ9¿Ÿä¿Ÿ¥¿Ÿø¿Ÿ»¿Ÿœ¿Ÿ—¿⁄¿⁄P¿⁄o¿⁄ä¿⁄±¿⁄◊¿€"¿€J¿€U¿€\¿€^¿€î¿€∫¿‹
¿‹8¿‹~¿‹∆¿‹œ¿‹—¿› ¿›,¿›3¿›5¿›g¿›†¿›“¿ﬁ¿ﬁ,¿ﬁN¿ﬁt¿ﬁ°¿ﬁÒ¿ﬂ?¿ﬂ`¿ﬂi¿ﬂß¿ﬂÊ¿‡¿‡O¿‡o¿‡è¿‡ß¿‡ø¿‡∆¿‡»¿‡¸¿·.¿·z¿·Å¿·É¿·∫¿·Ï¿·Û¿·ı¿‚'¿‚L¿‚S¿‚U¿‚é¿‚ ¿„¿„V¿„Ö¿„≤¿„Ú¿‰¿‰P¿‰é¿‰ô¿‰õ¿‰Í¿Â¿Â¿Â"¿Â$¿Âo¿Â≠¿Â¥¿Â∂¿Âﬁ¿Ê¿Êg¿Êû¿Ê√¿Ê ¿ÊÃ¿Á¿Á¿Áe¿Á®¿Á™¿Á˜¿Ë7¿Ë@¿ËB¿Ëp¿Ë©¿Ë∞¿Ë≤¿Ë‚¿È!¿È>¿ÈÖ¿Èå¿Èé¿Èæ¿ÈÓ¿Í%¿Ím¿Íö¿Í¥¿ÍŒ¿Î¿Î,¿ÎU¿Îî¿Î‰¿Ï#¿Ïs¿Ï~¿Ïá¿Ïé¿Ïê¿Ï∏¿ÏË¿Ì¿ÌI¿ÌP¿ÌR¿Ìl¿Ìâ¿Ì ¿Ó ¿Ó.¿Ó0¿ÓW¿Ó\¿Ó^¿Ók¿Óì¿Óß¿Óﬁ¿Ó˘¿Ô@¿Ô{¿Ôí¿Ôµ¿ÔÚ¿
¿.¿0¿K¿ï¿≥¿Ò¿Ò¿Ò5¿ÒÅ¿Òô¿Ò«¿ÒÈ¿Ò˛¿Ú¿Ú1¿ÚV¿Úu¿ÚÄ¿ÚÇ¿ÚÕ¿ÚÒ¿Û¿ÛA¿Ûd¿Ûò¿Û–¿ÛÙ¿ÙC¿Ùk¿Ùt¿Ùv¿Ùó¿Ù≥¿Ùµ¿ÙÂ¿ÙÁ¿ı1¿ıo¿ıì¿ıú¿ıû¿ıƒ¿ıÁ¿ˆ5¿ˆ^¿ˆr¿ˆt¿ˆì¿ˆÆ¿ˆÀ¿ˆÍ¿˜6¿˜g¿˜ù¿˜Ã¿¯¿¯O¿¯[¿¯p¿¯ê¿¯ú¿¯¶¿¯Ø¿¯¥¿¯∂¿˘¿˘¿˘Q¿˘¿˘…¿˘Ô¿˙¿˙V¿˙Ç¿˙ª¿˙Û¿˚¿˚&¿˚-¿˚/¿˚S¿˚î¿˚ñ¿˚∏¿˚÷¿˚ı¿¸¿¸#¿¸Z¿¸ä¿¸ø¿¸ ¿¸Í¿¸ı¿˝+¿˝m¿˝©¿˝◊¿˛¿˛A¿˛ê¿˛’¿ˇ¿ˇ7¿ˇT¿ˇe¿ˇg¿ˇô¿ˇ»¿ ¿ ¿ ¿ U¿ Ç¿ ≠¿ Ù¿!¿#¿u¿±¿ÿ¿¿)¿\¿ë¿¬¿‹¿Î¿¯¿˙¿1¿a¿ñ¿°¿«¿Ó¿¿A¿L¿v¿≈¿¿9¿~¿Œ¿˚¿4¿j¿∫¿˛¿@¿ä¿¬¿Ô¿¿¿I¿Ñ¿´¿“¿	¿	7¿	9¿	|¿	º¿	Ù¿
1¿
3¿
É¿
 ¿
¿F¿S¿U¿å¿º¿Á¿¿-¿m¿ñ¿°¿ƒ¿˛¿¿
¿¿N¿ç¿∫¿¿(¿p¿ï¿œ¿¿@¿v¿®¿œ¿÷¿ÿ¿ˆ¿7¿Z¿o¿ä¿ ¿˘¿7¿M¿_¿j¿l¿¨¿µ¿∑¿—¿¿H¿Q¿_¿†¿Œ¿¿%¿i¿{¿Ü¿à¿ ¿”¿’¿Ô¿#¿i¿r¿y¿{¿õ¿‡¿‚¿0¿|¿Ã¿¿>¿`¿ê¿Ã¿Ì¿¿:¿l¿†¿‡¿¿1¿q¿è¿–¿“¿ ¿/¿l¿ü¿Ï¿6¿R¿p¿Ñ¿≤¿”¿¿X¿Z¿†¿Á¿¿O¿ü¿æ¿¿¿¿4¿}¿§¿Ô¿3¿5¿Ä¿ù¿ƒ¿¿K¿`¿k¿m¿ö¿™¿≥¿∫¿º¿ ¿ $¿ K¿ â¿ “¿ Á¿ Ú¿ Ù¿!!¿!1¿!:¿!A¿!C¿!í¿!œ¿"¿"¿"U¿"W¿"®¿"’¿"◊¿#)¿#8¿#u¿#ß¿#Ÿ¿#€¿$¿$?¿$p¿$ú¿$‹¿%¿%¿%T¿%î¿%ñ¿%√¿%‰¿&¿&I¿&m¿&≤¿&¥¿'¿'G¿'u¿'û¿'⁄¿((¿(c¿(Ü¿(õ¿(’¿(¸¿)¿)¿)¿)J¿)S¿)U¿)¶¿)Õ¿*¿*6¿*o¿*ª¿*˘¿+¿+-¿+t¿+ù¿+±¿+∫¿+º¿+‰¿+Î¿+Ì¿,>¿,n¿,ø¿,‡¿-¿-U¿-\¿-^¿-¨¿-º¿-¸¿.¿.d¿.~¿.Ä¿.º¿.Î¿/¿/_¿/†¿/≥¿/Â¿0 ¿0¿0D¿0t¿0é¿0ª¿0Ω¿1¿1=¿1v¿1≈¿1‡¿2/¿2¿2√¿3¿3A¿3h¿3û¿3—¿3”¿4¿4P¿4W¿4Y¿4•¿4Œ¿5¿5¿5a¿5ä¿5œ¿5—¿6¿6G¿6á¿6”¿7¿7`¿7p¿7º¿7¸¿8M¿8V¿8]¿8_¿8ã¿8ç¿8 ¿9¿9B¿9¿9™¿9Â¿:¿:¿:S¿:v¿:∏¿:¡¿:√¿;¿;W¿;•¿;Ò¿<A¿<ë¿<ﬂ¿<ˇ¿=*¿=a¿=û¿=À¿=Õ¿>¿>i¿>ì¿>Õ¿>ˆ¿?2¿?t¿?¿?Å¿?¨¿?µ¿?∑¿@¿@K¿@ó¿@„¿A1¿A¿AÀ¿AÎ¿B¿BM¿Bä¿B∑¿Bπ¿C¿CU¿C¶¿C¯¿D:¿DE¿DG¿Dl¿Du¿Dw¿D…¿E¿E)¿EQ¿Et¿E®¿Eﬁ¿F¿FN¿Fo¿Fò¿F‘¿G"¿G]¿GÄ¿Gï¿G”¿G˙¿H¿H¿H¿HH¿Hr¿H{¿H}¿H»¿I¿I<¿Is¿I†¿I¢¿IÓ¿J>¿Jh¿J¢¿JÀ¿K¿KI¿KT¿KV¿KÅ¿Kä¿Kå¿K◊¿L ¿LK¿LÇ¿LØ¿L±¿L˝¿MM¿Mw¿M±¿M⁄¿N¿NX¿Nc¿Ne¿Nê¿Nô¿Nõ¿N€¿O¿OT¿Oç¿O∑¿OÔ¿P<¿PE¿PG¿Pn¿PÖ¿P¢¿P√¿PÔ¿Q¿Q6¿Q{¿Q√¿QÊ¿R+¿Rj¿Rü¿R¬¿S¿SF¿S}¿S¿S∑¿S˘¿T:¿Tb¿T§¿TÒ¿U$¿U1¿U3¿UÅ¿U¡¿U‰¿V¿VQ¿VÄ¿Vø¿V˛¿W(¿Ww¿W¢¿W∏¿W ¿X¿XS¿Xï¿X‚¿Y¿Yg¿Yö¿YŒ¿YÏ¿Z¿Zj¿ZØ¿ZÊ¿ZË¿[:¿[~¿[•¿[’¿\¿\M¿\ê¿\”¿]¿]¿]l¿]ú¿]∂¿]≈¿]«¿^¿^¿^¿^#¿^%¿^q¿^x¿^z¿^ ¿^È¿_¿_I¿_ó¿_ﬂ¿`¿`B¿`z¿`°¿`€¿a¿a$¿a&¿aO¿az¿aÅ¿aÉ¿a”¿aÚ¿b¿bR¿b†¿bË¿c#¿cK¿cÉ¿c™¿c‰¿d$¿d-¿d/¿dX¿dÉ¿dä¿då¿dπ¿e¿eP¿eú¿eΩ¿eÂ¿f¿f?¿fä¿f’¿g#¿g5¿g]¿g°¿g¿¿gÁ¿h!¿hm¿h¶¿hÛ¿i¿i(¿iQ¿iX¿iZ¿iñ¿iº¿iÂ¿j¿jE¿jl¿j¶¿jÊ¿jÔ¿jÒ¿k¿kE¿kL¿kN¿kÖ¿k∞¿kŸ¿l¿l9¿l`¿lö¿l⁄¿l„¿lÂ¿m¿m9¿m@¿mB¿mT¿mY¿m[¿mh¿m|¿m®¿mı¿n ¿nG¿nN¿nP¿nÉ¿nµ¿n„¿nÍ¿nÏ¿o.¿ot¿o∏¿o∫¿oﬂ¿o·¿p¿pM¿pT¿pV¿p|¿pº¿p·¿q¿q	¿q¿q'¿q>¿qE¿qG¿qñ¿q◊¿q˚¿r¿r,¿r1¿r3¿r^¿rß¿rœ¿s¿s6¿s|¿sú¿sË¿t¿tT¿ty¿t ¿tÈ¿u4¿u[¿uö¿uø¿uÂ¿v7¿vf¿vä¿v⁄¿vı¿w<¿w`¿wú¿w÷¿x¿xK¿xi¿x¥¿x”¿y¿yj¿y∑¿yœ¿z¿z/¿zW¿z¢¿z∫¿z˚¿{¿{B¿{á¿{∫¿|C¿|r¿}¿}5¿}ø¿}Ó¿~å¿~ª¿c¿í¿Ä3¿Äb¿Å-¿Å\¿Ç%¿ÇT¿É¿É6¿É‹¿Ñ¿Ñ´¿Ñ∞¿Ñ≤¿Ñ”¿ÑË¿Ñ˜¿Ñ˛¿Ö ¿Ö&¿Ö+¿Ö-¿Öw¿Öü¿Öæ¿Ü¿Ü?¿Ü\¿Ün¿Üs¿Üu¿Ü¿¿ÜŸ¿Üı¿á:¿áh¿áã¿áê¿áí¿áÀ¿áÍ¿à¿à4¿àC¿àJ¿àu¿àª¿à¯¿âG¿âq¿â≤¿âÔ¿ä7¿äb¿ä°¿äÒ¿ã=¿ãF¿ãH¿ãà¿ã±¿ãÏ¿å
¿å&¿åD¿åd¿åí¿å–¿ç¿ç=¿çU¿çn¿çª¿ç›¿çÏ¿ç˜¿ç˘¿é
¿é¿é¿éK¿éM¿éó¿é“¿éı¿é¸¿é˛¿èH¿èê¿è§¿èπ¿èÛ¿è˛¿ê¿ê
¿ê¿ê/¿êD¿êS¿êZ¿ê\¿êo¿ê¨¿êπ¿ê¬¿ê«¿ê…¿êÒ¿ë¿ë0¿ëT¿ë†¿ë‹¿í¿í¿íN¿íP¿í†¿í≤¿í˙¿ì¿ì6¿ìL¿ìb¿ìg¿ìi¿ì≥¿ì€¿ìı¿ì˜¿î"¿î1¿î8¿î:¿îZ¿î©¿î´¿î¯¿ï¿ïZ¿ïâ¿ïª¿ïÁ¿ñ ¿ñL¿ñv¿ñ≥¿ñµ¿ñ˚¿ó.¿ó^¿óà¿óä¿ó‹¿ò+¿òx¿òµ¿òﬂ¿ô¿ô^¿ôk¿ôm¿ô∫¿ô˛¿ö)¿öw¿ö√¿ö˚¿õ7¿õD¿õF¿õX¿õc¿õe¿õç¿õñ¿õ§¿õÒ¿ú2¿úa¿úî¿ú¡¿ú⁄¿ù&¿ùP¿ùç¿ùè¿ù’¿û¿û:¿ûh¿ûj¿ûº¿ü¿üX¿üï¿üø¿ü¯¿†?¿†L¿†N¿†õ¿†ﬂ¿°
¿°X¿°§¿°‹¿¢¿¢%¿¢'¿¢9¿¢D¿¢F¿¢n¿¢w¿¢~¿¢Ä¿¢∞¿¢Â¿£)¿£q¿£¢¿£ø¿£Â¿§¿§\¿§ö¿§Á¿§È¿•"¿•D¿•O¿•Q¿•Ö¿•û¿•Ã¿•Ú¿¶¿¶¿¶¿¶X¿¶•¿¶ß¿¶·¿ß¿ß¿ß¿ßD¿ß]¿ßÇ¿ß®¿ß∑¿ß¬¿ßÀ¿ß“¿ß◊¿ßŸ¿®¿®E¿®q¿®ª¿®‚¿®Ò¿®¯¿©¿©e¿©§¿©µ¿©ÿ¿™¿™$¿™&¿™_¿™y¿™†¿™Œ¿´¿´¿´¿´I¿´^¿´ë¿´ú¿´…¿´Ê¿¨¿¨<¿¨M¿¨V¿¨X¿¨m¿¨ö¿¨æ¿≠¿≠P¿≠ì¿≠æ¿≠Ò¿Æ¿Æ&¿Æ(¿ÆM¿Æt¿Æ´¿ÆÈ¿Ø6¿Ø8¿Øá¿Ø∆¿∞¿∞,¿∞9¿∞F¿∞u¿∞±¿∞Û¿±¿±U¿±ï¿±¢¿±§¿±ı¿≤¿≤_¿≤à¿≤≤¿≤¡¿≤–¿≥
¿≥4¿≥v¿≥Å¿≥å¿≥ì¿≥ò¿≥ö¿≥π¿¥¿¥2¿¥A¿¥H¿¥J¿¥ì¿¥ƒ¿¥”¿¥⁄¿¥‹¿¥Ú¿µ¿µ ¿µd¿µö¿µØ¿µº¿µæ¿µÂ¿∂¿∂'¿∂]¿∂è¿∂∫¿∂ﬂ¿∑¿∑P¿∑|¿∑ã¿∑ù¿∑®¿∑»¿∑”¿∏¿∏>¿∏r¿∏£¿∏‰¿π¿π`¿π≠¿πÍ¿∫#¿∫p¿∫†¿∫÷¿∫Î¿∫¯¿∫˙¿ª!¿ªJ¿ªc¿ªô¿ªƒ¿ª”¿ªÂ¿ª¿º¿º=¿ºh¿ºÜ¿º•¿º»¿º¿º˚¿Ω?¿Ωe¿Ωï¿ΩÁ¿æ¿æA¿æÄ¿æ£¿æÙ¿ø ¿ø/¿øe¿øz¿øá¿øâ¿ø∞¿øŸ¿øÚ¿¿(¿¿S¿¿b¿¿t¿¿¿¿Ü¿¿ã¿¿ç¿¿¥¿¿˛¿¡3¿¡i¿¡z¿¡ø¿¡œ¿¬¿¬?¿¬Y¿¬[¿¬©¿¬‡¿¬Ú¿¬Ù¿√$¿√F¿√ê¿√¥¿ƒ¿ƒ¿ƒ¿ƒ¿ƒ¿ƒh¿ƒå¿ƒ»¿ƒÒ¿≈ ¿≈¿≈	¿≈M¿≈o¿≈Ã¿∆)¿∆Ü¿∆√¿«¿«¿«¿«F¿«ì¿«™¿«Œ¿«˚¿»¿»¿»¿»¿»1¿»]¿»h¿»Ü¿»∏¿»ı¿… ¿…¿…:¿…E¿…}¿…º¿…˙¿ 4¿ 6¿ g¿ ≥¿ ˆ¿À¿À\¿Àå¿À”¿Ã¿Ãd¿Ãï¿Ã⁄¿Ã˘¿ÕC¿Õï¿Õ§¿Õ¶¿Õÿ¿Œ¿Œ7¿ŒY¿Œz¿Œ†¿Œ‘¿œ¿œ&¿œ(¿œa¿œê¿œù¿œü¿œÌ¿œ¯¿–¿–5¿–@¿–s¿–•¿–„¿—¿—J¿—`¿—q¿—Ä¿—ç¿—è¿—¡¿—√¿—ˆ¿“(¿“u¿“ø¿“˙¿”¿”!¿”0¿”=¿”ã¿”ñ¿”¶¿”ÿ¿‘¿‘A¿‘L¿‘~¿‘ì¿‘†¿‘¢¿‘Â¿’¿’B¿’]¿’Ç¿’—¿÷¿÷Q¿÷z¿÷ã¿÷ú¿÷©¿÷¥¿÷ƒ¿÷À¿÷–¿÷“¿◊¿◊>¿◊ã¿◊ÿ¿◊Ó¿ÿ@¿ÿä¿ÿ≈¿ÿ¿Ÿ¿ŸO¿Ÿu¿ŸÑ¿Ÿã¿Ÿç¿Ÿ›¿⁄/¿⁄u¿⁄ï¿⁄⁄¿€'¿€m¿€†¿€¿‹%¿‹c¿‹ß¿‹Î¿›/¿›`¿›ï¿›Õ¿ﬁ¿ﬁ`¿ﬁç¿ﬁ∏¿ﬁ‡¿ﬂ¿ﬂ8¿ﬂy¿ﬂè¿ﬂπ¿ﬂ˛¿‡=¿‡V¿‡~¿‡ã¿‡ñ¿‡¶¿‡À¿·¿·5¿·x¿·ç¿·ò¿·ö¿·›¿·Ê¿·Ë¿‚!¿‚^¿‚Ö¿‚…¿„¿„8¿„L¿„Y¿„d¿„f¿„Ü¿„õ¿„¶¿„®¿„«¿‰
¿‰ ¿‰j¿‰ê¿‰‡¿‰‚¿Â¿ÂR¿Âw¿Âö¿ÂŒ¿Â¯¿Ê¿ÊO¿ÊQ¿Êë¿Ê∂¿ÊŸ¿Á¿Á7¿ÁB¿ÁD¿Áñ¿Áò¿Á—¿Ë¿Ëh¿ËÆ¿Ë›¿È*¿ÈS¿Èb¿È∞¿È”¿È‡¿ÈÎ¿ÈÌ¿Í¿ÍP¿Íá¿ÍΩ¿ÍÊ¿Î5¿ÎQ¿Î\¿Îe¿Îl¿În¿Îæ¿Î˙¿Ï ¿Ï)¿ÏA¿ÏF¿ÏH¿Ïx¿Ï£¿Ï„¿Ì	¿Ì¿Ì¿Ì!¿ÌX¿Ìë¿Ìì¿Ì∑¿Ì˛¿Ó ¿ÓC¿Óu¿Óù¿ÓÎ¿Ô<¿Ô_¿Ô£¿Ô“¿Ô‡¿ÔÈ¿Ô¿ÔÚ¿%¿Z¿\¿Ä¿«¿…¿Ò¿Ò>¿Òf¿Ò¥¿Ú¿Ú(¿Úl¿Úó¿Ú•¿ÚÆ¿Úµ¿Ú∫¿Úº¿ÚÂ¿Û¿Û\¿Ûã¿Û¡¿Û ¿ÛÃ¿ÛÙ¿Û˚¿Ù ¿Ù¿ÙQ¿Ù¢¿Ùœ¿ı¿ı;¿ıà¿ıü¿ıÁ¿ıÙ¿ıˇ¿ˆ¿ˆ¿ˆ¿ˆF¿ˆÜ¿ˆï¿ˆú¿ˆû¿ˆÿ¿ˆ⁄¿˜"¿˜[¿˜|¿˜«¿˜‹¿˜¯¿¯¿¯¿¯¿¯¿¯;¿¯ã¿¯ö¿¯°¿¯£¿¯∂¿˘¿˘¿˘¿˘¿˘H¿˘ò¿˘Ø¿˘ˇ¿˙-¿˙w¿˙¥¿˚¿˚L¿˚v¿˚≠¿˚¥¿˚∂¿˚˙¿¸¿¸g¿¸Ö¿¸–¿¸Ú¿˝¿˝S¿˝m¿˝á¿˝©¿˝Ã¿˝Ì¿˛¿˛G¿˛v¿˛Ü¿˛¶¿˛Ø¿˛÷¿ˇ¿ˇA¿ˇY¿ˇo¿ˇÜ¿ˇõ¿ˇ≈¿ˇÒ¿ ¿ ,¿ F¿ á¿ »¿ Ï¿ ˜¿¿1¿R¿b¿é¿º¿Î¿˚¿,¿F¿^¿w¿é¿∫¿Ë¿¿ ¿'¿,¿.¿}¿∏¿‡¿¿Z¿j¿ò¿ÿ¿·¿„¿¿H¿O¿T¿V¿Å¿±¿·¿¿&¿/¿1¿Å¿ª¿	¿F¿T¿Ñ¿±¿ƒ¿Õ¿œ¿ˇ¿+¿2¿7¿9¿k¿ß¿Â¿	#¿	H¿	ã¿	’¿
 ¿
%¿
N¿
ù¿
÷¿ ¿'¿=¿S¿b¿o¿z¿É¿Ö¿∑¿Ò¿+¿d¿®¿“¿˙¿¿'¿)¿n¿æ¿Û¿
¿¿N¿Y¿b¿i¿n¿p¿ü¿‰¿¿0¿J¿d¿x¿¿Å¿≤¿˝¿¿¿#¿%¿7¿<¿>¿q¿≠¿Ó¿,¿L¿ó¿È¿¿.¿9¿;¿à¿æ¿…¿“¿‘¿¿¿¿¿C¿x¿†¿Ø¿∂¿∏¿’¿◊¿¿a¿c¿å¿õ¿¢¿§¿‰¿¿@¿ã¿Æ¿⁄¿)¿F¿Z¿à¿ë¿ò¿ö¿Ê¿¿¿L¿s¿u¿∫¿‡¿¿a¿í¿·¿¿`¿q¿É¿å¿é¿ü¿®¿™¿¯¿¿\¿ü¿€¿‰¿Ê¿˜¿ ¿¿A¿e¿g¿©¿¿Ú¿6¿|¿ù¿¢¿§¿…¿„¿¿Q¿e¿µ¿ˇ¿'¿M¿g¿n¿p¿é¿¶¿≠¿Ø¿Ò¿ˆ¿¯¿¿X¿r¿®¿≠¿Ø¿Ì¿ ¿ D¿ K¿ M¿ {¿ §¿ ´¿ ≠¿ ﬁ¿!
¿!¿!¿!a¿!f¿!h¿!ã¿!©¿!Ã¿!ﬂ¿!˝¿"¿"7¿"a¿"¿"é¿"ï¿"ó¿"∞¿"ı¿#:¿#m¿#¢¿#∞¿#–¿#Ê¿$¿$V¿$p¿$º¿$Ï¿%;¿%É¿%Æ¿%·¿&¿&¿&¿&N¿&{¿&Ü¿&à¿&∫¿&Á¿&Ú¿&Ù¿')¿'Y¿'d¿'f¿'à¿'”¿'Û¿'ı¿(B¿(K¿(M¿(ô¿(™¿(≥¿(µ¿(·¿)¿)H¿)á¿)±¿)◊¿*¿*F¿*u¿*õ¿*π¿*ƒ¿*∆¿*ˇ¿+¿+)¿+9¿+Ö¿+£¿+≈¿+Œ¿+–¿,¿,S¿,Ü¿,¥¿,ø¿,¡¿,Û¿- ¿-+¿--¿-b¿-í¿-ù¿-ü¿-ƒ¿-Ô¿.¿.H¿.[¿.f¿.h¿.®¿.Í¿/$¿/4¿/Ñ¿/–¿0¿0b¿0∞¿0‹¿1¿1H¿1S¿1r¿1•¿1”¿1ﬁ¿1‡¿2¿2?¿2J¿2L¿2Å¿2±¿2º¿2‚¿3¿32¿3_¿3r¿3}¿3ø¿3˘¿4¿4	¿4¿4¿4,¿4t¿4ì¿4±¿4Ã¿4Ù¿5A¿5Å¿5Ü¿5à¿5§¿5Ï¿6¿6)¿6D¿6l¿6π¿6˘¿6˛¿7 ¿74¿7\¿7É¿7™¿7‘¿7Ÿ¿7€¿8)¿8L¿8p¿8ü¿8∏¿8—¿8Ó¿9 ¿9C¿9à¿9◊¿9Ó¿9ı¿9˜¿:#¿:D¿:b¿:i¿:k¿:≤¿:˙¿;/¿;o¿;í¿;—¿<¿<¿<L¿<{¿<Ω¿<Ù¿<ˇ¿=¿=¿=¿=¿=f¿=â¿=∆¿>¿>&¿>F¿>O¿>Q¿>ç¿>“¿?¿?L¿?í¿?∏¿?Û¿@1¿@{¿@µ¿@‰¿@˘¿A¿A¿A¿A<¿Ay¿Aü¿A≈¿Aœ¿A—¿Aˆ¿B	¿B¿B¿BO¿Bã¿B’¿C¿C$¿C9¿CD¿CM¿CO¿Cë¿C’¿D¿DO¿Dv¿D≥¿DŒ¿E¿E%¿EQ¿Eå¿E ¿EÒ¿F ¿F¿F¿F¿F;¿Fä¿F¡¿F˝¿G.¿GB¿GO¿GZ¿Gc¿Gj¿Gl¿Gà¿Gç¿Gè¿G›¿H ¿H$¿HS¿Hl¿HÖ¿H¢¿H‘¿H˜¿I<¿Iã¿I¢¿I©¿I´¿I◊¿I¯¿J¿J¿J¿Jf¿JÆ¿J„¿K#¿KH¿Ká¿K”¿K’¿L¿LO¿LX¿LZ¿Lk¿Lr¿Lt¿Lê¿Lï¿Ló¿L⁄¿L˘¿MD¿MÖ¿M«¿N¿N$¿N9¿N@¿NB¿Nw¿N∑¿N‹¿O¿Og¿Oä¿O…¿P¿P¿PD¿Ps¿P∑¿PË¿Q ¿Q¿Q¿Q ¿Q)¿Q+¿Q`¿Qs¿Q|¿Q~¿Q∞¿QÒ¿R/¿R{¿R†¿R©¿R´¿RÓ¿S¿SL¿Sr¿S∏¿Sﬁ¿T¿TW¿T°¿T◊¿TÏ¿T˜¿U ¿U¿U/¿Ul¿Uû¿U‚¿V.¿V[¿VÖ¿Vá¿V¨¿Vø¿V»¿V ¿W¿WA¿WW¿W`¿Wb¿W≤¿X¿X?¿X}¿X∫¿X‘¿X·¿XÏ¿Xı¿X¸¿X˛¿Y¿Y¿Y¿Yf¿Y¥¿YÚ¿Z/¿Zs¿Zó¿Zπ¿[¿[	¿[¿[T¿[û¿[∏¿[ˆ¿\?¿\s¿\é¿\ó¿\û¿\†¿\π¿\æ¿\¿¿]¿]'¿]y¿]±¿]Ã¿]Á¿^.¿^`¿^≠¿^ˇ¿_?¿_ä¿_À¿`¿`¿`!¿`#¿`N¿`W¿`Y¿`Ç¿`∫¿`√¿`≈¿a¿a¿a¿a7¿a<¿a>¿av¿aπ¿aÊ¿b.¿bT¿bú¿b¡¿b˚¿c/¿cl¿c¢¿c‘¿c˚¿d¿d¿dG¿dI¿d`¿dÜ¿d¨¿d∫¿e¿eN¿eè¿eƒ¿e¿f
¿f&¿fA¿fa¿fâ¿f´¿f≠¿f¸¿g.¿gg¿gà¿gü¿gÒ¿gÛ¿h8¿hÑ¿hÜ¿hÕ¿i¿i[¿ié¿i∫¿i‘¿i¿j¿j+¿jS¿ju¿jw¿j∆¿j˘¿k3¿kT¿kk¿kº¿kæ¿kÊ¿l&¿lL¿lN¿lg¿l´¿l€¿m#¿ma¿m{¿m}¿m…¿n¿n8¿nf¿n≤¿nÔ¿nÒ¿o'¿og¿oÑ¿oú¿o≠¿oØ¿o€¿p'¿p)¿pr¿p¿¿p˘¿q$¿qm¿q•¿qœ¿r¿rA¿râ¿r∂¿r–¿r·¿r¿rÚ¿s;¿sH¿sS¿s\¿s^¿sw¿s√¿s˜¿tH¿té¿t®¿t™¿tˆ¿uE¿ue¿uì¿u‡¿v¿v ¿vW¿vö¿v∑¿vœ¿v‡¿v‚¿w¿w[¿w]¿w¶¿wÙ¿x-¿xX¿x¢¿x⁄¿y¿yM¿yw¿y¿¿yÚ¿z¿z¿z,¿z.¿zx¿zÖ¿zê¿zô¿z†¿z¢¿z«¿z…¿{¿{"¿{H¿{z¿{é¿{ï¿{ó¿{∑¿{˝¿{ˇ¿|M¿|ô¿|È¿}¿}I¿}k¿}õ¿}◊¿}¯¿~¿~3¿~e¿~ô¿~Ÿ¿¿'¿g¿Ö¿∆¿»¿Ó¿Ä"¿Äe¿Äî¿Ä∂¿ÄΩ¿Äø¿Å¿Å¿ÅY¿Åå¿ÅŸ¿Ç#¿Ç?¿Ç]¿Çq¿Çü¿Ç¿¿É¿ÉE¿ÉG¿Éç¿É‘¿Ñ¿Ñ<¿Ñå¿Ñ´¿Ñ≠¿Ñ˙¿Ö!¿Öj¿Öë¿Ö‹¿Ü ¿Ü"¿Üm¿Üä¿Ü±¿ÜÔ¿á8¿áM¿áX¿áZ¿áá¿áó¿á†¿áß¿á©¿áÙ¿à¿à8¿àv¿àø¿à‘¿àﬂ¿à·¿â¿â¿â'¿â.¿â0¿â¿âº¿â˘¿â˚¿äB¿äD¿ä~¿ä™¿ä‘¿ã¿ã#¿ã%¿ãv¿ãë¿ãì¿ãÂ¿ãÙ¿ãˆ¿å-¿å_¿åí¿å¥¿å∂¿ç ¿çO¿çÉ¿ç¢¿ç‡¿é¿éW¿éü¿é√¿è¿èC¿èÉ¿è±¿è¸¿ê8¿êv¿ê≤¿ê¿ë¿ë]¿ë°¿ë∆¿ëœ¿ë÷¿ëÿ¿í¿í'¿íi¿íw¿í°¿í€¿ì¿ì8¿ìx¿ì©¿ì´¿ì¿î0¿îJ¿îé¿îÿ¿îı¿î˜¿ï¿ï¿ï^¿ïö¿ï⁄¿ñ¿ñN¿ño¿ñq¿ñº¿ñﬂ¿ó$¿ó-¿ó/¿óK¿óì¿ó–¿ò	¿ò"¿òF¿ò¿ò•¿ò¨¿òÆ¿òË¿ô2¿ô¿ôŒ¿ö¿öK¿öe¿öß¿ö©¿öÓ¿õ7¿õ9¿õ}¿õ¢¿õ¿ú¿ú?¿úA¿úå¿úü¿úΩ¿úÁ¿úˆ¿ù5¿ùC¿ùn¿ù}¿ùæ¿ù≈¿ù«¿ùı¿ù˜¿û$¿ûE¿ûf¿û™¿û¯¿üF¿üH¿üò¿üæ¿ü·¿üÍ¿üÏ¿†7¿†Ñ¿†Ü¿†◊¿°"¿°)¿°+¿°|¿°¨¿°˝¿¢¿¢C¿¢ì¿¢ö¿¢¬¿¢ƒ¿£¿£"¿£b¿£¿£ ¿£‰¿£Ê¿§"¿§Q¿§y¿§≈¿•¿•¿•K¿•f¿•~¿•™¿•⁄¿•Ù¿¶!¿¶#¿¶s¿¶£¿¶‹¿ß+¿ßF¿ßï¿ßÂ¿®)¿®m¿®ß¿®Œ¿©¿©7¿©9¿©}¿©∂¿©Ω¿©ø¿™¿™P¿™ù¿™≈¿™Ô¿´¿´V¿´õ¿´Á¿¨
¿¨T¿¨o¿¨v¿¨x¿¨»¿¨Ô¿≠¿≠>¿≠x¿≠¿≠Å¿≠—¿≠¯¿Æ¿ÆG¿ÆÅ¿Æà¿Æä¿Æ÷¿Æˇ¿ØD¿ØF¿Øí¿Øª¿∞ ¿∞¿∞?¿∞{¿∞∑¿∞Ù¿±¿±Z¿±{¿±}¿±»¿±Î¿≤-¿≤6¿≤8¿≤[¿≤´¿≤Ï¿≥,¿≥v¿≥x¿≥©¿≥Œ¿≥Î¿¥3¿¥V¿¥£¿¥Ã¿¥◊¿¥‡¿¥‚¿µ)¿µn¿µù¿µŸ¿∂¿∂¿∂_¿∂à¿∂¢¿∂Ã¿∂‰¿∂Ê¿∑,¿∑R¿∑r¿∑ñ¿∑±¿∑”¿∑‚¿∑Ì¿∑Ô¿∏;¿∏ã¿∏”¿π¿π4¿πc¿πu¿π§¿πØ¿π∏¿π∫¿∫¿∫N¿∫ú¿∫Ë¿ª8¿ªà¿ª÷¿ªˆ¿º!¿ºX¿ºï¿ºΩ¿º∆¿º»¿Ω¿Ω\¿Ω®¿ΩÙ¿æB¿æê¿æ‹¿æ¸¿ø'¿ø^¿øõ¿ø◊¿ø‡¿ø‚¿¿4¿¿Ç¿¿î¿¿Ã¿¡ ¿¡6¿¡U¿¡^¿¡`¿¡´¿¡Ù¿¬¿¬V¿¬~¿¬á¿¬â¿¬‘¿√¿√H¿√¿√ª¿√ƒ¿√∆¿ƒ¿ƒ7¿ƒ¿ƒ∏¿ƒÂ¿≈¿≈G¿≈î¿≈’¿≈ﬁ¿≈‡¿∆¿∆G¿∆Å¿∆É¿∆¥¿∆’¿«¿«^¿«¿«¬¿«ˇ¿»2¿»S¿»ñ¿»”¿…¿…
¿…K¿…k¿…õ¿…›¿ ¿ +¿ Q¿ Å¿ √¿À¿À¿À4¿Àb¿Àà¿Àæ¿À‰¿Ã¿Ã9¿Ãp¿Ã±¿Ã·¿Õ¿Õ,¿ÕZ¿Õ~¿Õû¿Õ…¿Õˆ¿ŒB¿Œg¿Œò¿Œ»¿Œ˙¿œ*¿œ]¿œâ¿œ¶¿œ⁄¿œ˛¿–*¿–H¿–h¿–è¿–∂¿–‚¿—¿—?¿—h¿—í¿—ƒ¿—Ù¿“¿“j¿“ä¿“ü¿“Œ¿“Ú¿”#¿”n¿”ê¿”∆¿‘¿‘8¿‘p¿‘Å¿‘É¿‘ ¿‘Ó¿’¿’¿’¿’k¿’∞¿’¿¿÷¿÷%¿÷V¿÷°¿÷√¿÷˘¿◊5¿◊k¿◊£¿◊¥¿◊∂¿ÿ¿ÿ-¿ÿF¿ÿW¿ÿY¿ÿ™¿ÿ¿Ÿ ¿Ÿ¿Ÿ¿ŸH¿ŸJ¿Ÿé¿Ÿ≤¿Ÿ–¿ŸÚ¿⁄¿⁄+¿⁄8¿⁄A¿⁄H¿⁄J¿⁄ö¿⁄π¿⁄‚¿€¿€\¿€ò¿€ﬁ¿‹¿‹¿‹8¿‹_¿‹w¿‹ü¿‹µ¿‹∑¿‹˚¿›¿›=¿›_¿›x¿›ò¿›•¿›Æ¿›∞¿›˛¿ﬁF¿ﬁÅ¿ﬁ¬¿ﬁÌ¿ﬁÙ¿ﬁˆ¿ﬂF¿ﬂe¿ﬂé¿ﬂ≈¿‡¿‡D¿‡ä¿‡≤¿‡ƒ¿‡‰¿·¿·#¿·K¿·a¿·c¿·ß¿·À¿·È¿‚¿‚$¿‚D¿‚Q¿‚Z¿‚\¿‚™¿‚Ú¿„-¿„n¿„ô¿„†¿„¢¿„œ¿‰¿‰f¿‰≤¿‰”¿‰˚¿Â#¿Âs¿Âæ¿Ê	¿ÊW¿Êi¿Ê®¿Êı¿Á¿Á+¿ÁF¿Ái¿Áà¿Á’¿Á¿Ë8¿Ë]¿Ëd¿Ëf¿Ë¢¿Ë»¿ËÒ¿È4¿Èp¿È∂¿Èﬁ¿È¿Í¿Í7¿ÍO¿Íw¿Íç¿Íè¿Í”¿Í˜¿Î¿Î7¿ÎP¿Îp¿Î}¿ÎÜ¿Î±¿Î∏¿Î∫¿ÎÒ¿Ï¿ÏE¿Ïà¿Ïƒ¿Ì
¿Ì2¿ÌD¿Ìd¿Ìã¿Ì£¿ÌÀ¿Ì·¿Ì„¿Ó'¿ÓK¿Ói¿Óã¿Ó§¿Óƒ¿Ó—¿Ó⁄¿Ô¿Ô¿Ô¿ÔP¿Ô¿Ôª¿ÔŸ¿¿)¿q¿x¿z¿¬¿«¿…¿Í¿Ò7¿Òy¿Òò¿Ò≥¿Ò˝¿Ú3¿Ú^¿Úò¿Ú∆¿Û¿Ûc¿Ûj¿Ûl¿Ûâ¿Û§¿Û«¿Ù¿ÙW¿Ù©¿ÙŒ¿Ù˚¿ı¿ıG¿ıo¿ıæ¿ıÏ¿ˆ¿ˆ)¿ˆb¿ˆä¿ˆ∞¿ˆÍ¿˜¿˜9¿˜_¿˜í¿˜ƒ¿˜Ò¿¯¿¯N¿¯z¿¯ü¿¯À¿˘¿˘J¿˘o¿˘π¿˙	¿˙8¿˙T¿˙¿˙ü¿˙‚¿˚¿˚¿˚$¿˚&¿˚^¿˚u¿˚æ¿˚”¿˚Ô¿¸¿¸L¿¸b¿¸n¿¸´¿¸À¿˝¿˝:¿˝O¿˝\¿˝^¿˝ú¿˝≥¿˝¸¿˛¿˛-¿˛Y¿˛ä¿˛†¿˛≠¿˛≤¿˛¥¿˛”¿˛Ê¿ˇ
¿ˇ4¿ˇS¿ˇ}¿ˇñ¿ˇØ¿ˇ›¿ #¿ O¿ [¿ ¿ ≠¿ Û¿¿+¿L¿x¿ú¿–¿˚¿¿L¿Å¿¿¿Ó¿¿5¿a¿É¿°¿ ¿ı¿B¿e¿≥¿È¿¿C¿p¿è¿≈¿Â¿¿'¿V¿Ñ¿≠¿÷¿¿0¿m¿§¿∑¿‰¿¿5¿Ç¿¢¿÷¿	¿	H¿	Ö¿	î¿	ñ¿	€¿	˝¿
¿
#¿
%¿
Q¿
v¿
û¿
»¿
Í¿¿¿B¿P¿è¿±¿‡¿-¿M¿Å¿ø¿Û¿0¿?¿A¿å¿¥¿À¿⁄¿‹¿¿-¿U¿¿°¿ª¿”¿˙¿¿¿¿¿C¿`¿v¿•¿ƒ¿€¿ˆ¿¿L¿Ç¿¬¿ˇ¿#¿Z¿ú¿À¿‘¿÷¿Ú¿(¿=¿ä¿¥¿¿C¿Ä¿®¿—¿Â¿ı¿1¿F¿ì¿Ω¿¿L¿â¿±¿⁄¿Ó¿˜¿¿N¿x¿ ¿˘¿ ¿b¿ï¿±¿œ¿¿¿m¿Ç¿Ø¿≈¿◊¿¿,¿{¿ê¿Ω¿”¿ﬁ¿‡¿Ò¿˙¿¸¿3¿u¿¶¿Ú¿¿?¿Y¿á¿œ¿¿C¿c¿ù¿∂¿¿5¿x¿©¿Í¿+¿W¿Ö¿ù¿±¿Ò¿
¿[¿â¿Ã¿˝¿ >¿ ¿ ´¿ Ÿ¿ Ò¿ ˛¿!¿!¿!¿!T¿!]¿!d¿!i¿!k¿!ú¿!¬¿" ¿"$¿"&¿"h¿"å¿"©¿"ƒ¿"À¿"Õ¿#¿#f¿#†¿#≈¿#ˇ¿$"¿$F¿$k¿$¶¿$…¿$Ì¿$Ô¿%4¿%}¿%º¿%Ô¿&¿&/¿&I¿&b¿&{¿&°¿&¡¿&√¿'¿'?¿'é¿'ﬁ¿'‡¿(#¿(m¿(o¿(¥¿(˝¿)<¿)m¿)ï¿)≠¿)«¿)‡¿)˘¿*¿*?¿*A¿*ç¿*Ω¿+¿+\¿+^¿+à¿+¬¿+Û¿,¿,_¿,ê¿,í¿,∆¿,Ù¿-=¿-^¿-}¿-≠¿-”¿-⁄¿-‹¿-ˇ¿.H¿.h¿.ï¿.∞¿.ﬁ¿/¿/)¿/+¿/z¿/ ¿/Ê¿0¿0Y¿0ì¿0ï¿0ƒ¿1¿1¿10¿1=¿1?¿1g¿1∞¿1≤¿1˜¿2-¿2S¿2¿2œ¿2ˆ¿3;¿3b¿3ß¿3æ¿3À¿3Õ¿3Ú¿3Ù¿48¿4k¿4∑¿5¿5D¿5m¿5®¿5‹¿6¿65¿6M¿6^¿6m¿6z¿6|¿6ö¿6±¿6æ¿6¿¿6Ï¿7 ¿7¿7¿7S¿7\¿7c¿7e¿7Ñ¿7∫¿7—¿8"¿88¿8:¿8â¿8Ÿ¿8ı¿9¿9g¿9†¿9¢¿9œ¿:¿:%¿:9¿:F¿:H¿:p¿:π¿:ª¿; ¿;6¿;\¿;à¿;ÿ¿;ˇ¿<D¿<k¿<∞¿<«¿<‘¿<÷¿<˛¿=¿=¿=¿=d¿=m¿=t¿=v¿=¬¿>¿>b¿>r¿>≤¿>—¿>”¿? ¿?c¿?à¿?ä¿?Ÿ¿@&¿@8¿@Y¿@z¿@¶¿@À¿@‘¿@÷¿A"¿Aq¿A¡¿AÌ¿B¿B[¿Bñ¿Bœ¿C¿C"¿C[¿C|¿Cú¿C∫¿C⁄¿CÒ¿CÛ¿D¿DW¿Dà¿DÀ¿E¿E¿E8¿E[¿E|¿E∆¿E˝¿F1¿Fh¿FÑ¿FŒ¿FÏ¿F˘¿F˚¿G¿Gp¿G{¿GÑ¿GÜ¿G¢¿G¡¿Gˇ¿HA¿Hy¿Hû¿H·¿HÏ¿HÓ¿I(¿I1¿I3¿IÅ¿I”¿J#¿JI¿Já¿J”¿K¿KA¿Kb¿Kù¿KÀ¿KÚ¿L¿L¿L?¿LX¿L°¿L£¿LÏ¿M'¿Mt¿Mí¿MÀ¿MÏ¿N¿N*¿NJ¿Na¿Nc¿Nä¿N¿¿N˙¿O¿Od¿OÑ¿Oì¿Oï¿O±¿O˘¿P¿P¿PL¿Pè¿P–¿Q¿QX¿Qî¿QΩ¿R¿R¿R¿RS¿R`¿Rk¿Rm¿Rß¿RÔ¿S&¿S@¿SI¿SK¿Sù¿S√¿S˙¿TB¿Tç¿Tñ¿Tù¿Tü¿TÈ¿U8¿UÅ¿U–¿V¿V%¿Vc¿Vî¿V…¿VÌ¿W4¿Wn¿W¨¿WÔ¿X¿Xe¿Xg¿X∞¿XÃ¿XÊ¿Y¿Y,¿YS¿Y~¿Yœ¿YÙ¿Z@¿Z}¿Zà¿Z…¿Z˝¿[(¿[j¿[≠¿[’¿\#¿\L¿\â¿\Ø¿\œ¿]¿]7¿]S¿]ç¿]À¿^¿^:¿^G¿^I¿^à¿^•¿^¿¿^‰¿_
¿_3¿_r¿_≥¿_æ¿_¿¿_Î¿`<¿`a¿`≠¿`Í¿`ı¿`˛¿a¿a¿a(¿aF¿a`¿aà¿aù¿a∞¿a≈¿aŸ¿b¿b$¿bC¿bÅ¿bº¿bÈ¿c¿cA¿c\¿cx¿cª¿c‡¿c¸¿d¿dK¿dm¿dí¿d∑¿d◊¿e¿eB¿eÖ¿e∑¿eŸ¿f¿f4¿fY¿fÅ¿f≠¿f◊¿g¿g5¿gf¿gç¿gµ¿g„¿g˛¿h*¿hV¿hÉ¿h∫¿hÁ¿i.¿i<¿iH¿i]¿iÑ¿iö¿i±¿iŒ¿iÚ¿j¿j@¿jd¿jß¿jﬂ¿k¿k2¿kS¿kê¿kœ¿l¿l6¿lQ¿lS¿lü¿l›¿m%¿m@¿mX¿my¿m∂¿mı¿n0¿nX¿ns¿nu¿n∂¿n—¿nˇ¿o¿o-¿oC¿ox¿oö¿o•¿o≠¿o≤¿o¥¿oŸ¿o¯¿p¿p:¿p_¿pà¿p±¿p≥¿pˆ¿qB¿q¿q≤¿r¿r¿r$¿r&¿rd¿rÇ¿rß¿rﬂ¿s¿s\¿s†¿sß¿s©¿sÚ¿t¿tE¿té¿tø¿u¿uT¿u~¿uº¿u˙¿v<¿vi¿v©¿vÃ¿vŒ¿w¿w@¿wá¿wí¿wî¿w≤¿w¸¿x;¿xv¿xë¿x∑¿xπ¿y¿yW¿yY¿yè¿y∫¿y„¿z ¿zD¿zO¿zX¿zZ¿zë¿zµ¿z∑¿zÙ¿{:¿{\¿{o¿{π¿{˙¿|$¿|7¿|_¿|v¿|ƒ¿|Ê¿},¿}R¿}w¿}Ø¿}¬¿~¿~)¿~I¿~P¿~R¿~w¿~|¿~~¿~ª¿~·¿¿C¿E¿á¿´¿»¿„¿Í¿Ï¿Ä7¿ÄÖ¿Äø¿Ä¡¿Ä¿Å¿ÅC¿Åg¿Å°¿Å≈¿ÅÈ¿Å¿ÅÚ¿Ç5¿Ç¿ÇÅ¿Ç´¿ÇÂ¿É¿ÉB¿ÉÇ¿É≥¿Éµ¿ÉÈ¿Ñ¿Ñ`¿ÑÅ¿Ñ†¿Ñ–¿Ñˆ¿Ñ˝¿Ñˇ¿Ö"¿Ör¿Öª¿Ö€¿Ü¿ÜC¿Üg¿ÜÜ¿Ü∏¿ÜÚ¿á¿á
¿áY¿á©¿á≈¿áÔ¿à8¿àr¿àt¿à£¿à‚¿à˚¿â¿â¿â¿âF¿âè¿âë¿â÷¿ä¿ä2¿ä^¿äÆ¿ä’¿ã¿ãA¿ãÜ¿ãù¿ã™¿ã¨¿ã—¿ã”¿å¿åJ¿åñ¿å‡¿ç#¿çL¿çá¿çª¿çÔ¿é¿é,¿é=¿éL¿éY¿é[¿éy¿éê¿éù¿éü¿éÀ¿éﬂ¿éÍ¿éÏ¿è2¿è;¿èB¿èD¿èè¿è¢¿è¿ê¿êW¿êç¿ê∑¿ë	¿ë7¿ëâ¿ëü¿ë°¿ë¿í@¿í\¿íÖ¿íŒ¿ì¿ì	¿ì6¿ìs¿ìå¿ì†¿ì≠¿ìØ¿ì◊¿î ¿î"¿îg¿îù¿î√¿îÔ¿ï?¿ïf¿ï´¿ï“¿ñ¿ñ.¿ñ;¿ñ=¿ñe¿ñy¿ñÑ¿ñÜ¿ñÀ¿ñ‘¿ñ€¿ñ›¿ó)¿óx¿ó…¿óŸ¿ò¿ò8¿ò:¿òá¿ò ¿òÔ¿òÒ¿ô@¿ôç¿ôü¿ô¿¿ô·¿ö¿ö2¿ö;¿ö=¿öâ¿öÿ¿õ(¿õT¿õÉ¿õ¬¿õ˝¿ú6¿úk¿úâ¿ú¬¿ú„¿ù¿ù!¿ùA¿ùX¿ùZ¿ù{¿ùæ¿ùÔ¿û2¿û~¿ûÄ¿ûü¿û¬¿û„¿ü-¿üd¿üò¿üœ¿üÎ¿†5¿†S¿†`¿†b¿†Ü¿†◊¿†‚¿†Î¿†Ì¿°	¿°(¿°f¿°®¿°‡¿¢¿¢H¿¢S¿¢U¿¢è¿¢ò¿¢ö¿¢Ë¿£:¿£ä¿£∞¿£Ó¿§:¿§¿§®¿§…¿•¿•2¿•Y¿•|¿•~¿•¶¿•ø¿¶¿¶
¿¶S¿¶é¿¶€¿¶˘¿ß2¿ßS¿ßs¿ßë¿ß±¿ß»¿ß ¿ßÒ¿®'¿®a¿®¿®À¿®Î¿®˙¿®¸¿©¿©`¿©m¿©o¿©≥¿©ˆ¿™7¿™y¿™ø¿™˚¿´$¿´k¿´z¿´|¿´∫¿´«¿´“¿´‘¿¨¿¨V¿¨ç¿¨ß¿¨∞¿¨≤¿≠¿≠*¿≠a¿≠è¿≠◊¿Æ¿Æ¿Æ¿Æ¿Æl¿Æ∫¿Æ›¿Ø¿Ø¿Øh¿Ø∂¿ØŸ¿∞¿∞M¿∞j¿∞ô¿∞∏¿∞˚¿±¿±[¿±]¿±ù¿±≈¿±Ã¿±Œ¿≤¿≤5¿≤<¿≤>¿≤à¿≤◊¿≥ ¿≥o¿≥¢¿≥ƒ¿¥¿¥!¿¥>¿¥d¿¥ù¿¥÷¿µ¿µ&¿µR¿µé¿µ¡¿µÔ¿∂1¿∂d¿∂f¿∂µ¿∂Î¿∑¿∑I¿∑l¿∑ì¿∑Â¿∑Ó¿∑¿∏7¿∏y¿∏{¿∏≤¿∏¿π¿πS¿πU¿πù¿π„¿∫¿∫¿∫X¿∫¢¿∫¡¿∫√¿ª¿ª'¿ªd¿ª´¿ªÎ¿º=¿ºZ¿ºt¿ºô¿ºÎ¿ºÌ¿Ω¿ΩO¿Ωë¿Ω≥¿Ω≈¿Ω«¿ΩÓ¿æ-¿æo¿æë¿æ£¿æ•¿æ’¿ø¿øM¿øü¿ø—¿ø”¿¿¿¿P¿¿ä¿¿…¿¿Û¿¿ı¿¡&¿¡]¿¡£¿¡µ¿¡∑¿¡˚¿¬+¿¬^¿¬£¿¬µ¿¬∑¿¬Ë¿√4¿√Å¿√∂¿√˚¿ƒ1¿ƒ`¿ƒb¿ƒÖ¿ƒá¿ƒ∞¿ƒ≤¿ƒ˙¿≈<¿≈Å¿≈«¿≈˚¿≈˝¿∆K¿∆j¿∆ó¿∆€¿«¿«¿«¿«a¿«ä¿«π¿«˝¿»'¿»6¿»8¿»|¿»£¿»•¿»ˆ¿…¿…j¿…y¿…{¿…ù¿…Î¿ .¿ m¿ å¿ ∂¿ ı¿À!¿À.¿À0¿Àp¿À¿¿À˝¿Ã"¿Ãq¿Ãø¿Õ ¿Õ ¿Õh¿Õj¿Õµ¿Õ’¿Œ¿Œ)¿Œ+¿Œ^¿Œì¿Œæ¿ŒÁ¿œ!¿œ]¿œf¿œh¿œ∑¿œ”¿–¿–B¿–å¿–À¿–¿—7¿—L¿—W¿—Y¿—r¿—{¿—}¿—®¿—÷¿“¿“9¿“i¿“r¿“t¿“£¿“•¿“Ó¿”+¿”i¿”è¿”ÿ¿‘*¿‘G¿‘a¿‘Ä¿‘“¿’
¿’F¿’^¿’∞¿’ª¿’Ω¿’‚¿÷¿÷N¿÷z¿÷¬¿÷Ë¿÷˛¿◊?¿◊v¿◊»¿◊˙¿◊¸¿ÿ8¿ÿy¿ÿ≥¿ÿÚ¿Ÿ¿Ÿ¿ŸO¿Ÿõ¿ŸË¿⁄¿⁄b¿⁄ò¿⁄«¿⁄…¿€¿€F¿€Å¿€»¿€‹¿€ﬁ¿‹¿‹J¿‹ú¿‹∞¿‹≤¿‹’¿‹◊¿› ¿›¿›J¿›å¿›—¿ﬁ¿ﬁK¿ﬁè¿ﬁ∑¿ﬁ∆¿ﬁ»¿ﬂ¿ﬂ3¿ﬂ5¿ﬂÜ¿ﬂØ¿ﬂ˙¿‡	¿‡¿‡-¿‡{¿‡æ¿‡˝¿·¿·F¿·Ö¿·±¿·æ¿·¿¿‚ ¿‚P¿‚ç¿‚≤¿„¿„O¿„ê¿„∞¿„¯¿„˙¿‰C¿‰c¿‰≤¿‰¯¿Â5¿ÂL¿Âô¿Âª¿Âﬂ¿ÂÍ¿ÂÏ¿Ê&¿Êb¿Êk¿Êm¿Êò¿Ê‚¿Ê‰¿Á2¿Áv¿Áö¿Á’¿Á˙¿ËD¿ËO¿ËQ¿Ë†¿Ë√¿È¿ÈJ¿Èm¿Èv¿È}¿È¿Èù¿Èº¿Í¿Í^¿Í`¿Í§¿Í–¿ÍŸ¿Í€¿Î¿ÎJ¿ÎS¿ÎZ¿Î\¿Îâ¿Îú¿Î≠¿Î¿¿Î“¿Î¯¿Ï¿Ï6¿Ïr¿Ï´¿Ï÷¿Ì¿Ì*¿ÌC¿Ì]¿Ìû¿Ì¡¿Ì€¿Ì˜¿Ó&¿ÓF¿Ói¿Óå¿Ó™¿Ó“¿Ô¿ÔR¿ÔÇ¿Ô¢¿Ô ¿Ô˘¿¿B¿l¿î¿æ¿Ó¿Ò¿ÒB¿Òh¿Òî¿Ò÷¿Ú ¿Ú*¿ÚU¿Úä¿Úµ¿Ú˙¿Û¿Û¿Û#¿ÛH¿Û\¿Ûq¿Ûå¿ÛÆ¿Û–¿Ù¿Ù_¿Ùã¿Ù¿¿ı¿ı%¿ı<¿ı>¿ıv¿ıª¿ˆ¿ˆY¿ˆï¿ˆ”¿ˆ’¿˜¿˜L¿˜e¿˜g¿˜®¿˜Œ¿˜Á¿˜È¿¯¿¯H¿¯z¿¯ï¿¯·¿˘/¿˘y¿˘µ¿˘Û¿˘ı¿˙=¿˙m¿˙Ü¿˙à¿˙…¿˙Ô¿˚¿˚
¿˚/¿˚`¿˚í¿˚≠¿˚ƒ¿˚Ê¿˚¸¿¸(¿¸N¿¸ë¿¸…¿˝¿˝K¿˝z¿˝¢¿˝≈¿˛¿˛E¿˛Ü¿˛∞¿˛Õ¿˛œ¿ˇ¿ˇ]¿ˇß¿ˇƒ¿ˇﬁ¿ ¿ @¿ Å¿ æ¿ Ë¿¿¿J¿g¿ó¿±¿…¿‚¿¿5¿=¿?¿y¿™¿¸¿7¿¿ß¿»¿Ì¿&¿j¿ä¿¡¿‡¿#¿C¿h¿|¿ë¿¨¿…¿ˆ¿ ¿h¿∑¿Õ¿‘¿÷¿˜¿¿/¿X¿`¿e¿g¿≤¿⁄¿¿¿!¿#¿Z¿ç¿í¿î¿∫¿˝¿	¿	*¿	1¿	3¿	R¿	Ç¿	“¿	Ú¿	˜¿	˘¿
¿
1¿
@¿
G¿
I¿
Ä¿
ú¿
£¿
•¿
ª¿
¿¿
¬¿
Ê¿¿7¿^¿y¿Ä¿Ç¿±¿‡¿˜¿:¿i¿ù¿∆¿¿1¿¿ ¿Í¿¿¿;¿k¿m¿é¿Œ¿¿¿J¿}¿∑¿Ë¿¿^¿{¿é¿ƒ¿Ú¿¿'¿0¿2¿O¿d¿í¿∂¿¬¿›¿¿J¿k¿É¿ñ¿‚¿¸¿
¿¿!¿(¿*¿c¿Ø¿Ò¿Û¿¿6¿h¿á¿â¿Ÿ¿(¿Z¿É¿ ¿Ã¿¿<¿[¿b¿d¿¨¿ﬁ¿¿4¿h¿¢¿‡¿!¿#¿p¿´¿¿¿¿F¿i¿É¿ö¿º¿⁄¿ˆ¿¯¿2¿Z¿É¿ö¿Î¿(¿M¿i¿Å¿É¿—¿¿¿2¿M¿j¿Ä¿ó¿µ¿Ò¿¯¿˙¿8¿J¿`¿b¿ô¿∏¿÷¿&¿;¿X¿ì¿‹¿¿V¿°¿∏¿Ù¿ ¿ Z¿ ö¿ Â¿ ¸¿!¿!`¿!i¿!w¿!å¿!≥¿!ˇ¿"H¿"Ü¿"¬¿#¿#$¿#q¿#õ¿#·¿$!¿$l¿$n¿$æ¿%¿%2¿%i¿%å¿%±¿%—¿%Ô¿&¿&¿&6¿&s¿&ñ¿&π¿&ÿ¿&ˆ¿'¿'¿'%¿''¿'<¿'M¿'}¿'¢¿'©¿'´¿'À¿'Î¿(+¿(S¿(ä¿(–¿(Ï¿)¿)¿)¿)T¿)î¿)‘¿)Ï¿*¿*$¿*=¿*T¿*r¿*ö¿*π¿*‰¿+¿+W¿+Å¿+®¿+›¿,¿,.¿,P¿,Ñ¿,©¿,‡¿-&¿-N¿-É¿-Õ¿-˛¿.¿.¿.¿.i¿.à¿.’¿.˘¿/¿/2¿/D¿/W¿/h¿/|¿/ô¿/£¿/™¿/¨¿/—¿0"¿0j¿0¶¿0‡¿11¿1L¿1c¿1â¿1∞¿2¿2¿29¿2L¿2c¿2´¿2≥¿2µ¿2Õ¿3¿3(¿39¿3M¿3w¿3é¿3»¿3·¿4"¿4I¿4Ñ¿4»¿4Ï¿5¿53¿5A¿5X¿5p¿5ò¿5«¿5·¿6¿6<¿6¿6 ¿6‡¿7¿7F¿7â¿7‘¿7Í¿8¿8F¿8á¿8¿¿8Ë¿9¿9`¿9ß¿9÷¿:¿:=¿:{¿:∞¿:È¿;¿;S¿;{¿;Æ¿;Ì¿<'¿<Z¿<à¿<Ã¿<Î¿=¿=:¿=å¿=§¿=Ì¿>(¿>a¿>y¿>ê¿>û¿>£¿>•¿>Ù¿?"¿?N¿?ë¿?‘¿?Ù¿@¿@
¿@¿@9¿@Ñ¿@¥¿@Ô¿A4¿AÑ¿Aâ¿Aã¿A⁄¿A¸¿B"¿B\¿B©¿B∏¿Bø¿B¡¿BÓ¿C9¿Ci¿C§¿C„¿D3¿D8¿D:¿Dã¿D∑¿E¿EK¿Et¿E†¿Eß¿E©¿EÊ¿F&¿FL¿Fv¿F´¿F÷¿G%¿G.¿G5¿G7¿Ga¿Gf¿Gh¿G≤¿G⁄¿H¿H,¿Hr¿Hì¿Hº¿H¡¿H√¿I¿I1¿ID¿Id¿Iw¿Iñ¿I´¿I¡¿Iﬂ¿I˜¿J¿JI¿Jä¿J∞¿JŒ¿JÏ¿K¿K-¿KA¿Kh¿Kå¿KÆ¿K¬¿Kÿ¿Kı¿L2¿LO¿Li¿Lâ¿L∂¿Lÿ¿L˜¿M¿M7¿MT¿Mq¿Mé¿MΩ¿M‡¿N¿N/¿N>¿NF¿NK¿NM¿Ne¿N¨¿N–¿O¿O>¿OÅ¿O¡¿O˝¿Oˇ¿P,¿P?¿PP¿Pc¿Pu¿Põ¿P∂¿P¿Q'¿QP¿Q{¿Q†¿Q¬¿Q⁄¿R¿R:¿RR¿Rl¿Rô¿R∑¿Rÿ¿R˘¿S¿S7¿St¿S≥¿S·¿Sˇ¿T%¿TR¿Ts¿Tó¿Tø¿TÂ¿U¿U;¿Uh¿Uã¿UØ¿UŸ¿U¸¿V$¿VL¿Vu¿V®¿V—¿W¿W¿Wl¿W∂¿WÚ¿XC¿X]¿Xê¿X∞¿X∏¿X¸¿Y¿YA¿YÖ¿Y ¿Z¿Z,¿Z3¿ZZ¿Z_¿Za¿Z¿Z∂¿ZÀ¿ZÈ¿ZÙ¿Z˚¿Z˝¿[%¿[*¿[,¿[J¿[r¿[õ¿[™¿[±¿[≥¿[∆¿[È¿[Ú¿[˜¿[˘¿\,¿\e¿\ò¿\ü¿\°¿\À¿\Û¿\ı¿]¿]0¿]2¿]Y¿]ó¿] ¿]È¿^4¿^Ü¿^√¿^Ÿ¿^˜¿_¿_?¿_M¿_n¿_å¿_µ¿_È¿_Î¿`=¿`é¿`¬¿`Ì¿a6¿a8¿aá¿a¨¿aÕ¿a÷¿aÿ¿b¿bL¿bê¿b≥¿bÌ¿c¿c&¿c^¿cu¿c¿¿c‚¿d ¿d	¿d¿d/¿dT¿db¿d¥¿dÚ¿e.¿e}¿e√¿f¿fA¿fC¿fe¿f£¿f–¿g¿g¿ga¿gî¿gπ¿g‡¿h¿h¿ha¿h£¿hº¿h€¿h˚¿i"¿iG¿ih¿i£¿iÆ¿i∑¿iæ¿i¿¿iÿ¿iÎ¿j ¿j¿j<¿jZ¿jy¿j£¿j÷¿k¿k+¿kx¿k®¿k’¿l¿l2¿lk¿lõ¿l’¿lÒ¿m
¿m0¿m}¿m≠¿m⁄¿n¿nX¿nr¿nù¿nÀ¿o¿o6¿oj¿oñ¿o¬¿oı¿pT¿p°¿p„¿q¿q0¿q[¿q~¿qÃ¿q¸¿r"¿rW¿r©¿r÷¿rı¿s¿s:¿sV¿sí¿s≤¿t¿t¿t`¿tô¿t’¿tÎ¿u-¿u`¿uá¿u‘¿v¿vE¿vj¿v¥¿v˘¿w?¿w~¿wî¿wÃ¿x¿x=¿xq¿xæ¿x˜¿y<¿yÇ¿y°¿y∏¿y∫¿z¿z8¿zr¿z©¿z¿{)¿{U¿{l¿{n¿{ò¿{À¿|	¿|B¿|n¿|õ¿|∆¿|˛¿}8¿}s¿}â¿}∞¿}˜¿~E¿~u¿~Ø¿~Ê¿-¿f¿í¿©¿´¿’¿Ä¿Ä;¿Äi¿Äï¿ÄÕ¿Å¿ÅB¿ÅX¿Åo¿Åt¿Åv¿ÅΩ¿ÅÊ¿Ç'¿ÇR¿Çá¿Çÿ¿É¿É<¿ÉA¿ÉC¿ÉÜ¿ÉÆ¿ÉÈ¿Ñ ¿Ño¿Ññ¿Ñ≈¿ÑÎ¿Ö¿Ö¿Ö¿Ög¿Ö™¿ÖÈ¿Ü ¿Ü?¿Ü~¿Ü£¿Ü·¿á¿á4¿áv¿áµ¿á˝¿à>¿àh¿àµ¿à¿¿à¬¿â¿â¿â¿â ¿âM¿â~¿â´¿â„¿âÍ¿âÔ¿âÒ¿ä!¿äO¿äp¿ää¿ä◊¿äÊ¿äÌ¿äÔ¿ã!¿ão¿ãt¿ãv¿ã≠¿ã·¿å¿å¿å_¿å¿åé¿åï¿åó¿åœ¿ç¿ç"¿ç$¿çI¿çq¿ç∞¿çæ¿ç¯¿é1¿é8¿é=¿é?¿és¿éø¿éŸ¿è ¿èJ¿èb¿è¥¿è‡¿ê¿ê¿ê¿êe¿êt¿ê{¿ê}¿ê≠¿êı¿ê˜¿ë)¿ë:¿ëQ¿ëp¿ëô¿ëƒ¿ëÎ¿ë˚¿í ¿í¿í<¿í_¿íü¿íπ¿í‡¿ì*¿ìB¿ìî¿ì¿¿ìÔ¿ìˆ¿ì¯¿î;¿î[¿îj¿îq¿îs¿î£¿îÎ¿îÌ¿ï%¿ï6¿ïM¿ïl¿ïï¿ï¿¿ïÁ¿ï˜¿ï¸¿ï˛¿ñ)¿ñ`¿ñ≤¿ñ”¿ñÓ¿ñı¿ñ˜¿ó8¿óy¿ó≈¿ó‡¿óÁ¿óÈ¿ò¿òU¿òë¿òì¿ò”¿òÛ¿ô¿ô5¿ô<¿ô>¿ô\¿ôù¿ô·¿ôˇ¿ö@¿ö{¿ö¨¿ö ¿õ¿õF¿õy¿õ{¿õê¿õƒ¿õ„¿õ˛¿ú"¿ú_¿úã¿ú≈¿úÛ¿ù¿ù_¿ùç¿ù»¿û¿û\¿ûÅ¿ûß¿û“¿ü¿ü.¿ü>¿üG¿üI¿üz¿üÅ¿üÉ¿üÕ¿ü˙¿†7¿†R¿†Y¿†[¿†ß¿†Õ¿°¿°N¿°Å¿°à¿°ä¿°™¿°Ø¿°±¿°Ì¿¢¿¢O¿¢ü¿¢π¿¢À¿¢ﬁ¿¢Ô¿£¿£ ¿£*¿£1¿£3¿£w¿£ú¿£¿¿£‚¿§¿§[¿§ñ¿§…¿§‰¿§˜¿§˛¿• ¿•(¿•B¿•a¿•v¿•ä¿••¿•«¿•È¿¶
¿¶\¿¶ô¿¶ƒ¿¶Ú¿ß%¿ßD¿ßr¿ßë¿ß±¿ß”¿ß¸¿®%¿®S¿®é¿®™¿®’¿©¿©5¿©U¿©v¿©ñ¿©Ë¿™
¿™A¿™|¿™î¿™›¿´¿´6¿´O¿´V¿´X¿´í¿´ ¿¨¿¨+¿¨l¿¨∞¿¨Œ¿≠¿≠J¿≠{¿≠ô¿≠⁄¿Æ¿ÆH¿ÆJ¿Æì¿Æ∫¿Æ‹¿Æﬁ¿Ø'¿Ø^¿ØÉ¿Ø©¿Ø„¿∞¿∞=¿∞}¿∞´¿∞œ¿∞˘¿±7¿±Ç¿±∏¿±¿≤
¿≤¿≤¿≤+¿≤H¿≤[¿≤m¿≤Ü¿≤¶¿≤∆¿≤Â¿≥5¿≥p¿≥ï¿≥œ¿¥¿¥'¿¥W¿¥ë¿¥—¿¥È¿µ¿µN¿µt¿µ∞¿µ‰¿∂¿∂B¿∂¿∂∆¿∂¸¿∑$¿∑S¿∑á¿∑±¿∑◊¿∏¿∏;¿∏Ä¿∏ú¿∏¡¿∏‰¿π'¿πk¿πë¿πΩ¿πÙ¿∫6¿∫g¿∫ò¿∫’¿∫˛¿ª6¿ªm¿ªó¿ª√¿ªˆ¿º)¿ºa¿º¶¿ºﬂ¿Ω¿ΩJ¿Ωà¿Ω…¿Ω˚¿æC¿æÅ¿æ≠¿æÕ¿æÎ¿ø¿ø"¿ø[¿ø°¿øª¿¿¿¿R¿¿l¿¿à¿¿ç¿¿ê¿¿í¿¿¡¿¡¿¡
¿¡!¿¡#¿¡K¿¡M¿¡Z¿¡õ¿¡û¿¡†¿¡€¿¡Ë¿¡˛¿¬(¿¬@¿¬E¿¬G¿¬T¿¬í¿¬¬¿¬Ù¿√ ¿√'¿√N¿√S¿√U¿√i¿√|¿√¬¿√À¿√–¿√“¿√ﬂ¿√Û¿ƒ ¿ƒ6¿ƒ;¿ƒ=¿ƒJ¿ƒr¿ƒª¿ƒ¿¿ƒ√¿ƒ≈¿≈¿≈.¿≈E¿≈ä¿≈å¿≈¥¿≈À¿≈Õ¿∆
¿∆(¿∆*¿∆7¿∆v¿∆y¿∆{¿∆∞¿∆€¿«¿«=¿«?¿«y¿«ü¿«°¿«Æ¿«ƒ¿«ı¿»9¿»K¿»ú¿»¥¿»π¿»ª¿»»¿»‹¿…¿…¿…¿…¿…+¿…S¿…z¿…ù¿…ü¿…Ω¿…‚¿…ˇ¿ %¿ A¿ å¿ ë¿ î¿ ñ¿ ¢¿ ÷¿ Ù¿À¿À'¿À@¿ÀR¿Às¿Àé¿À°¿Àµ¿À÷¿ÀÓ¿Ã¿Ã¿Ã+¿Ã?¿Ã[¿Ã|¿Ãû¿Ãπ¿Ã”¿ÃÙ¿Õ¿Õ)¿ÕJ¿Õj¿Õâ¿ÕÆ¿Õœ¿ÕÏ¿Œ
¿Œ(¿ŒG¿Œc¿Œ¿Œú¿Œ…¿ŒÊ¿œ¿œ	¿œ/¿œS¿œ}¿œß¿œ”¿œÛ¿–¿–1¿–F¿–^¿–Å¿–©¿–ƒ¿–ﬂ¿–ˆ¿—¿—1¿—\¿—¿—∂¿—⁄¿“¿“H¿“l¿“î¿“À¿“¸¿”¿”:¿”_¿”¿”¢¿”√¿”·¿‘$¿‘E¿‘f¿‘h¿‘u¿‘æ¿‘¡¿‘√¿’¿’:¿’<¿’I¿’_¿’¢¿’Œ¿÷¿÷R¿÷j¿÷o¿÷q¿÷~¿÷∑¿÷ˇ¿◊J¿◊è¿◊ñ¿◊ò¿◊À¿ÿ¿ÿ2¿ÿx¿ÿ¶¿ÿÈ¿ÿ¿ÿÚ¿Ÿ5¿Ÿ\¿Ÿa¿Ÿc¿Ÿp¿Ÿò¿Ÿ„¿⁄¿⁄0¿⁄X¿⁄Z¿⁄™¿⁄˘¿€+¿€T¿€°¿€À¿€˝¿‹ ¿‹"¿‹o¿‹í¿‹±¿‹∏¿‹∫¿‹Ì¿›*¿›^¿›`¿›ù¿›∆¿ﬁ¿ﬁ/¿ﬁM¿ﬁé¿ﬁ≥¿ﬁ‚¿ﬂ%¿ﬂT¿ﬂé¿ﬂ›¿‡¿‡<¿‡Z¿‡ü¿‡«¿‡Ô¿·*¿·^¿·¢¿·¡¿‚	¿‚;¿‚v¿‚ó¿‚÷¿‚ÿ¿‚˘¿„%¿„'¿„k¿„ì¿„∂¿„Ÿ¿‰¿‰J¿‰ö¿‰Á¿Â0¿Âw¿ÂÄ¿Âá¿Ââ¿Â™¿Â˚¿ÊJ¿Ê~¿ÊÄ¿ÊÆ¿Ê·¿Á¿Á ¿Á]¿Áõ¿Á¿¿Á˚¿Ë3¿ËL¿Ëf¿Ë¨¿Ë¿¿ËÚ¿È(¿È*¿ÈZ¿Èo¿È≥¿ÈÙ¿Í¿Í5¿Í<¿Í>¿Í\¿Íô¿Í·¿Í˚¿Î¿Î(¿ÎP¿Îí¿Î≈¿Ï ¿Ï¿Ï	¿Ï[¿Ï¨¿ÏÃ¿ÏÏ¿ÏÓ¿Ì¿Ì7¿ÌY¿Ìt¿Ì∫¿Ì›¿Ìˇ¿Ó¿Ó8¿Ól¿Óê¿Ó≤¿Ó∆¿ÓÊ¿Ô¿Ô¿Ô1¿ÔO¿Ôi¿Ô∞¿ ¿¿G¿t¿Ñ¿¬¿Ò ¿Ò¿Ò4¿ÒS¿Òo¿Òç¿Ò¨¿Òœ¿Ò—¿Ú¿Ú6¿Ú]¿Ú¢¿Ú§¿Úœ¿Ú—¿Û¿ÛD¿Ûâ¿Û«¿Ù¿Ùg¿Ùñ¿Ù”¿Ùˆ¿ı5¿ı`¿ı§¿ıÁ¿ˆ¿ˆ(¿ˆ*¿ˆv¿ˆ©¿ˆÿ¿˜
¿˜O¿˜v¿˜ò¿˜µ¿¯¿¯A¿¯à¿¯∫¿¯‚¿˘¿˘ ¿˘S¿˘u¿˘ç¿˘™¿˘Ã¿˘Í¿˙¿˙8¿˙h¿˙u¿˙á¿˙÷¿˚¿˚D¿˚q¿˚è¿˚æ¿˚÷¿¸%¿¸w¿¸º¿¸„¿˝¿˝"¿˝t¿˝¨¿˝—¿˝ı¿˛%¿˛K¿˛o¿˛Ñ¿˛¶¿˛∆¿˛‹¿˛˜¿ˇ¿ˇ3¿ˇc¿ˇÇ¿ˇÆ¿ˇﬁ¿ˇÈ¿ˇÚ¿ˇ˘¿ˇ˚¿ ¿ ^¿ }¿ õ¿ ù¿ ª¿¿[¿ü¿≈¿˘¿¿4¿N¿k¿ç¿•¿∆¿¿Y¿Å¿ë¿ﬂ¿)¿v¿ñ¿«¿–¿ﬁ¿%¿t¿∏¿‹¿˚¿¿1¿M¿T¿V¿ç¿π¿œ¿Ù¿¿&¿6¿Y¿´¿≤¿¥¿‰¿˙¿¿8¿Q¿a¿Ñ¿÷¿›¿ﬂ¿	¿	Q¿	è¿	∏¿	˝¿
9¿
`¿
i¿
k¿
ì¿
ö¿
ú¿
¥¿¿8¿m¿≠¿Ï¿*¿k¿m¿ì¿–¿¿[¿†¿‹¿)¿2¿4¿T¿[¿]¿}¿¿¿‚¿˜¿¿n¿•¿ª¿Â¿¿`¿É¿≤¿–¿ˇ¿ ¿r¿î¿¡¿Ò¿¿W¿v¿¨¿À¿‚¿¿^¿t¿ô¿œ¿Ó¿¿:¿á¿ù¿¬¿˜¿/¿c¿}¿¬¿„¿¿:¿r¿Ω¿‡¿+¿l¿ó¿ƒ¿¿H¿Ä¿ª¿¿í¿⁄¿¿e¿é¿»¿¿I¿Å¿Ã¿Ú¿¿@¿m¿Æ¿Ò¿)¿q¿≠¿˚¿!¿6¿C¿Y¿á¿≤¿¿%¿T¿r¿°¿¬¿ ¿ 6¿ c¿ ì¿ Õ¿ Ï¿!"¿!A¿!X¿!á¿!‘¿!Í¿"¿"E¿"d¿"{¿"∞¿"˝¿#¿#8¿#m¿#ü¿#ø¿$¿$P¿$ä¿$§¿$¶¿$¿%*¿%t¿%ô¿%Õ¿%Ò¿&¿&R¿&ù¿&¿¿'¿'E¿'n¿'ô¿'ÿ¿(¿(O¿(à¿(€¿)[¿)°¿)€¿*(¿*O¿*á¿*ƒ¿+¿+:¿+É¿+ß¿+»¿+Ò¿,¿,[¿,ú¿,“¿-¿-R¿-ü¿-¡¿-‹¿-Ò¿-ˇ¿.¿.8¿.N¿.b¿.≥¿.ﬂ¿/¿/,¿/X¿/{¿/∆¿/˛¿0,¿0Y¿0v¿0∂¿0›¿0¸¿1"¿1_¿1ì¿1”¿2¿2>¿2b¿2{¿2ö¿2¿¿2Ì¿3!¿3T¿3î¿3∏¿3–¿3Ê¿3˚¿4¿4 ¿4"¿4K¿4é¿4∞¿4≈¿4˝¿5¿5=¿5h¿5à¿5´¿5⁄¿5¯¿6'¿6H¿6¶¿6‹¿7¿7J¿7Ñ¿7©¿7Œ¿7ˆ¿8¿8I¿8x¿8Æ¿8Â¿9
¿9W¿9}¿9∂¿9˝¿:1¿:k¿:ù¿:…¿:Ê¿:¸¿;¿;¿;6¿;8¿;b¿;•¿;«¿;‹¿<¿<+¿<U¿<Ä¿<†¿<√¿<Ú¿=¿=?¿=`¿=æ¿=ı¿>/¿>e¿>ü¿>√¿>Ë¿?¿?6¿?b¿?ë¿?«¿?˛¿@8¿@n¿@ä¿@∞¿@È¿A0¿Ae¿A°¿A”¿Aˇ¿B¿B2¿BG¿BT¿Bl¿Bn¿Bì¿B”¿C¿C#¿CM¿Cx¿Cú¿Cø¿D¿D ¿DO¿Dp¿D¢¿D◊¿E¿EB¿Ea¿Eó¿E∂¿EÕ¿Eœ¿E˚¿F@¿FV¿F{¿F¢¿F“¿F¯¿G6¿Gp¿Gê¿GÀ¿Gˇ¿H2¿Hl¿Hñ¿H¬¿Hı¿I*¿IJ¿Ip¿I®¿I€¿J¿Jn¿J∑¿J◊¿K¿KE¿Ko¿Kô¿K ¿L¿LP¿L|¿LΩ¿Lﬁ¿LÙ¿M	¿M¿M.¿M0¿Mq¿Mò¿M∫¿M–¿M˙¿N%¿NG¿Nj¿N©¿N‘¿N˜¿O¿O&¿OA¿OX¿Op¿O~¿OÄ¿O¨¿OÆ¿OÈ¿P%¿PK¿Pl¿PÉ¿P†¿P∂¿P”¿PÈ¿Q ¿Q¿Q¿Q=¿QS¿Qj¿QÅ¿Qû¿Q¥¿QŒ¿Q⁄¿Q˜¿R(¿RU¿R^¿R`¿Rs¿R√¿S¿S@¿Sf¿Sá¿Sù¿S¥¿S—¿SÁ¿T¿T¿T'¿T7¿TT¿TÖ¿T≤¿T¥¿T›¿U¿U.¿UT¿Uy¿Uü¿U®¿U™¿UΩ¿V¿V¿VA¿Vb¿Vx¿Vè¿V¨¿V¬¿V‹¿V˘¿W¿W¿W,¿WM¿Wc¿Wz¿Wó¿WÆ¿Wƒ¿Wﬁ¿WÍ¿X¿X8¿Xe¿Xn¿Xp¿XÉ¿X”¿X⁄¿Xﬂ¿X·¿XÓ¿Y¿YH¿Yh¿Y¨¿Y¬¿Y«¿Y…¿YÍ¿Z ¿Z¿Z¿Z<¿ZQ¿Z`¿Zg¿Zi¿Z¿ZÑ¿ZÜ¿Zú¿Z¬¿Z—¿Zÿ¿ZÙ¿[¿[¿[¿[4¿[Z¿[i¿[p¿[å¿[Ø¿[¥¿[∂¿[ÿ¿[¸¿\¿\5¿\J¿\`¿\x¿\ë¿\Ø¿\…¿\‰¿]¿]-¿]O¿]¿]Å¿]≠¿]Ì¿^!¿^;¿^Ü¿^ù¿^¡¿^Ê¿^˚¿_¿_O¿_g¿_¨¿_ÿ¿_˛¿`¿`J¿`Ä¿`≤¿`Ê¿`ˇ¿a/¿aH¿aY¿aë¿aƒ¿a˚¿b¿bC¿bT¿bd¿bÉ¿b≤¿bﬁ¿c ¿c'¿cP¿cÜ¿cΩ¿c˜¿d-¿dI¿do¿dõ¿d ¿d˚¿e¿e:¿e`¿eã¿e∏¿eÚ¿f-¿fe¿f≤¿f˛¿g'¿gs¿g¶¿gÕ¿gˆ¿h+¿hi¿h∏¿hË¿i-¿iQ¿ix¿iª¿i¯¿j8¿jn¿j∏¿j¸¿kB¿kz¿k•¿k»¿kÍ¿l
¿l0¿lh¿l∏¿m¿m/¿m\¿mñ¿m≈¿n¿n6¿np¿n™¿nÊ¿o3¿oa¿o•¿o∆¿o–¿oÿ¿o›¿oﬂ¿p¿p¿p<¿pb¿pm¿p∫¿p÷¿p·¿q ¿q#¿qC¿qf¿qz¿q°¿q·¿r¿rL¿rï¿r¢¿r≠¿rΩ¿rË¿s(¿sa¿sì¿s‹¿t%¿tg¿tü¿t“¿t¿t˝¿u¿u¿u@¿uK¿uÅ¿u√¿uﬂ¿uÍ¿uÒ¿v8¿vN¿vS¿vU¿vr¿vî¿v∫¿w
¿w1¿wF¿wã¿w°¿w≈¿wÈ¿x
¿x&¿xI¿xT¿x¿xø¿x¸¿y	¿y:¿yÕ¿yÿ¿y¯¿z ¿z+¿zi¿zç¿z—¿{¿{6¿{c¿{ò¿|3¿|B¿|d¿|ó¿}H¿}U¿}W¿}Ç¿}¬¿}Ò¿}˛¿~/¿~¶¿~±¿~œ¿~Ó¿¿¿[¿Ü¿∆¿Ï¿˘¿Ä*¿Äè¿Äö¿Ä¿¿ÄÁ¿Å¿Å¿Å[¿Å¿Å√¿ÅÏ¿Ç¿Ç[¿ÇÇ¿Çë¿Çƒ¿É)¿É=¿Éj¿Éü¿Ñ:¿ÑI¿Ñk¿Ñã¿Ñ÷¿Ö¿Ö5¿Öl¿ÖŸ¿Ü¿Ü¿Ü¿Ü!¿Ü&¿Ü)¿Ü+¿Ü{¿Ü∞¿Ü ¿Ü·¿Üˆ¿á¿á2¿áE¿áY¿áz¿áö¿áµ¿á—¿áÓ¿à¿àW¿àY¿àv¿àí¿àÆ¿à√¿à€¿â¿â8¿â[¿â§¿â–¿âÌ¿ä¿äA¿än¿äp¿ä}¿äß¿äÎ¿äÌ¿ã¿ã%¿ãA¿ãn¿ã~¿ã§¿ã≠¿ãª¿ã€¿å ¿å¿å¿å¿åG¿åí¿å∑¿åÍ¿ç1¿çg¿ço¿çq¿çç¿ç¨¿çÆ¿ç»¿é¿é'¿ég¿én¿ép¿éï¿éÆ¿é¸¿é˛¿è1¿èK¿èx¿è¬¿è„¿ê¿ê/¿êv¿êö¿ê›¿ë¿ëD¿ëx¿ë∞¿ë¿¿ëÁ¿í¿í!¿íE¿íÄ¿íª¿í˝¿ì¿ì^¿ìÄ¿ìâ¿ìê¿ìï¿ìó¿ì…¿ì‰¿î¿î)¿îw¿îî¿î‘¿ï¿ï8¿ï?¿ïA¿ïb¿ïÄ¿ï¿¿ñ¿ñ6¿ñ]¿ñ§¿ñ¿¿ó¿ó¿ó0¿ór¿ót¿óô¿óØ¿ó‡¿ò¿ò<¿ò[¿ò]¿ò¨¿òÆ¿òˇ¿ôN¿ôÇ¿ô«¿ô‰¿ö ¿ö'¿ö)¿ö;¿ö{¿öÕ¿õ¿õ6¿õ}¿õú¿õ⁄¿õ„¿õÍ¿õÏ¿ú
¿ú#¿ú4¿úE¿ú]¿úv¿úΩ¿úÓ¿úÛ¿úı¿ù(¿ùC¿ùd¿ùÑ¿ù√¿ùË¿û(¿ûq¿ûç¿û÷¿ûﬁ¿ü¿ü%¿üh¿üß¿ü‚¿ü‰¿†
¿†:¿†Y¿†[¿†™¿†¨¿†ﬂ¿†˝¿°O¿°ü¿°”¿¢¿¢6¿¢r¿¢y¿¢{¿¢ç¿¢Õ¿£¿£/¿£Å¿£ô¿£·¿§ ¿§>¿§G¿§N¿§P¿§p¿§π¿§æ¿§¿¿§Ï¿•¿•+¿•`¿•ü¿•‘¿•Ÿ¿•€¿•Ë¿¶¿¶-¿¶2¿¶4¿¶v¿¶±¿¶÷¿¶Ó¿ß	¿ß%¿ß:¿ßY¿ßs¿ßê¿ß÷¿ßÛ¿®&¿®ú¿®¨¿®œ¿©¿©¿©)¿©n¿©º¿©√¿©≈¿©˜¿™6¿™^¿™Å¿™¨¿™∂¿™ø¿™¡¿™ﬂ¿™‰¿™Ê¿´6¿´à¿´⁄¿´˛¿¨¿¨>¿¨X¿¨Ç¿¨ä¿¨è¿¨ë¿¨û¿¨⁄¿¨Ï¿¨Ò¿¨Ù¿¨ˆ¿≠9¿≠f¿≠ñ¿≠¥¿≠“¿≠Ô¿Æ¿Æ$¿Æ3¿ÆH¿Æg¿Æï¿Æ¡¿Æœ¿Ø¿Ø¿Ø¿Ø,¿Øg¿Øí¿Øƒ¿Ø„¿∞(¿∞;¿∞E¿∞G¿∞T¿∞f¿∞≥¿∞È¿∞Î¿±*¿±h¿±o¿±t¿±w¿±y¿±∞¿±¿≤¿≤?¿≤Å¿≤§¿≤»¿≤ı¿≥¿≥&¿≥O¿≥d¿≥p¿≥r¿≥≥¿≥Ÿ¿≥€¿≥ı¿¥G¿¥I¿¥Ü¿¥à¿¥¡¿¥ˇ¿µ&¿µ(¿µ?¿µT¿µì¿µœ¿µ÷¿µ€¿µ›¿∂ ¿∂-¿∂S¿∂m¿∂©¿∂Æ¿∂∞¿∂Ù¿∑¿∑¿∑S¿∑h¿∑m¿∑o¿∑|¿∑π¿∑›¿∑¯¿∏¿∏$¿∏&¿∏E¿∏d¿∏ù¿∏À¿∏Õ¿∏È¿π ¿π"¿πQ¿πr¿π≠¿πØ¿π˚¿∫1¿∫W¿∫¶¿∫®¿∫˘¿ª¿ªh¿ªñ¿ª≥¿ªÁ¿º	¿ºE¿ºG¿ºt¿º¨¿ºÕ¿Ω¿Ω¿Ω¿Ω¿Ω=¿Ω_¿Ωå¿Ω¨¿ΩÆ¿Ω–¿Ω˛¿æ¿æ¿æ¿æF¿æg¿æn¿æp¿æñ¿æõ¿æù¿æÏ¿ø¿øS¿ø}¿ø√¿¿¿¿¿¿¿¿S¿¿o¿¿à¿¿ú¿¿¥¿¿ª¿¿È¿¿˚¿¡ ¿¡%¿¡(¿¡*¿¡z¿¡å¿¡œ¿¬¿¬ ¿¬B¿¬r¿¬ò¿¬∑¿¬“¿¬˝¿√!¿√B¿√c¿√É¿√ò¿√∂¿√æ¿√Ÿ¿√¯¿ƒ¿ƒ6¿ƒK¿ƒv¿ƒô¿ƒº¿ƒŸ¿ƒ·¿ƒÊ¿ƒÈ¿ƒÎ¿≈.¿≈c¿≈´¿≈≤¿≈Ì¿∆¿∆¿∆^¿∆°¿∆È¿«¿«&¿«q¿«∑¿«”¿«⁄¿»¿»,¿»\¿»Ç¿»°¿»º¿»‡¿…¿…"¿…@¿…_¿…õ¿…∆¿ ¿ %¿ r¿ ™¿ ∫¿ ﬂ¿À¿À#¿ÀH¿Àv¿À≈¿Àı¿Ã	¿Ã?¿ÃR¿Ãm¿Ãv¿Ã£¿ÃÂ¿Õ¿ÕL¿Õ|¿Õó¿Õ¶¿ÕØ¿Õ±¿Õ÷¿Õ€¿Õ›¿Œ
¿Œ%¿Œ'¿Œ^¿ŒÉ¿ŒÖ¿ŒŒ¿ŒÌ¿ŒÔ¿œ=¿œè¿œµ¿œ∑¿–¿–'¿–P¿–R¿–z¿–ù¿–ü¿–÷¿—¿—¿—2¿—Q¿—S¿—ã¿—∫¿—º¿—…¿—›¿“.¿“F¿“ï¿““¿“ˇ¿”¿”+¿”H¿”\¿”~¿”É¿”Ö¿”í¿”•¿”«¿”Ã¿”Œ¿‘
¿‘K¿‘{¿‘ç¿‘î¿‘ô¿‘õ¿‘®¿‘º¿‘ﬁ¿’ ¿’¿’4¿’9¿’;¿’r¿’¿’∏¿÷¿÷"¿÷$¿÷t¿÷∏¿÷ﬁ¿◊)¿◊N¿◊U¿◊W¿◊ü¿◊º¿ÿ¿ÿ¿ÿ¿ÿR¿ÿs¿ÿü¿ÿ≠¿ÿË¿ÿÔ¿ÿÒ¿Ÿ¿ŸZ¿ŸÖ¿Ÿ∂¿ŸÛ¿⁄¿⁄/¿⁄\¿⁄ç¿⁄¿¿⁄Ã¿⁄Ù¿€#¿€3¿€S¿€z¿€É¿€ä¿€å¿€∞¿€Á¿€˛¿‹¿‹¿‹¿‹>¿‹Y¿‹s¿‹í¿‹¥¿‹’¿‹Ò¿›¿› ¿›@¿›W¿›j¿›á¿›•¿›“¿›‘¿›ı¿ﬁ$¿ﬁY¿ﬁ~¿ﬁ¢¿ﬁ∫¿ﬂ¿ﬂ/¿ﬂJ¿ﬂ_¿ﬂÄ¿ﬂ†¿ﬂ«¿ﬂ˙¿ﬂ¸¿‡	¿‡3¿‡w¿‡ù¿‡º¿‡›¿‡Ï¿‡Û¿‡ı¿·¿·f¿·™¿·◊¿·˝¿‚B¿‚o¿‚∂¿‚‰¿‚Ú¿„@¿„`¿„í¿„Æ¿„Ò¿‰¿‰:¿‰l¿‰º¿‰‹¿Â¿Â+¿Âo¿Âê¿Âπ¿ÂÌ¿ÂÙ¿Âˆ¿Ê
¿ÊK¿Ên¿Ê†¿Ê≈¿Êˇ¿ÁC¿Áp¿Áç¿Áﬂ¿Ë¿ËI¿Ëp¿Ëæ¿È ¿È¿È	¿È?¿È¿È¬¿È˘¿Í¿Í"¿Ím¿Ít¿Íy¿Í{¿Íß¿Í∆¿ÍÊ¿Î¿ÎI¿ÎÉ¿Î∏¿ÎΩ¿Îø¿Îﬁ¿ÎÙ¿Ï¿Ï¿Ï<¿Ï\¿Ïq¿Ïâ¿Ï†¿Ïﬂ¿Ì¿Ì.¿ÌM¿Ì~¿Ì¢¿Ìø¿Ìﬁ¿Ì˝¿Ìˇ¿Ó/¿ÓH¿ÓY¿Ój¿Ó∫¿Ó“¿Ó‘¿Ô¿Ô)¿Ôy¿Ôò¿Ôö¿Ô ¿ÔÃ¿¿>¿\¿®¿œ¿„¿Ò"¿ÒT¿Òî¿Òõ¿Òù¿ÒÂ¿Ú¿Ú3¿Úr¿Úy¿Ú¶¿ÚÛ¿Û9¿Ûe¿Û£¿ÛÈ¿Ù¿ÙT¿Ùz¿Ùß¿Ù„¿ı¿ı.¿ıS¿ıï¿ıû¿ı•¿ıß¿ıÊ¿ıÎ¿ıÌ¿ˆ2¿ˆz¿ˆ®¿ˆ„¿ˆÂ¿˜¿˜F¿˜n¿˜Å¿˜–¿¯ ¿¯5¿¯U¿¯n¿¯p¿¯á¿¯‘¿¯Û¿˘#¿˘%¿˘w¿˘§¿˘¿˙¿˙b¿˙ó¿˙”¿˙Ú¿˚"¿˚i¿˚â¿˚•¿˚¨¿˚Æ¿˚˙¿¸¿¸@¿¸å¿¸ì¿¸ï¿¸¬¿˝¿˝2¿˝H¿˝ñ¿˝€¿˛¿˛+¿˛y¿˛æ¿ˇ¿ˇ3¿ˇq¿ˇó¿ˇƒ¿  ¿ $¿ K¿ p¿ æ¿ «¿ Œ¿ –¿¿¿1¿k¿ä¿ú¿“¿¿0¿T¿¢¿´¿π¿¿¿+¿4¿w¿ô¿Â¿Ï¿Ò¿Û¿¿Y¿q¿ß¿‹¿¿@¿t¿å¿ë¿ì¿†¿”¿Â¿Í¿Ï¿<¿é¿‡¿¿¿D¿^¿à¿ê¿ï¿ó¿§¿‡¿Ú¿˜¿˘¿;¿v¿õ¿º¿‹¿	¿	8¿	[¿	Ö¿	√¿
¿
1¿
=¿
H¿
O¿
Q¿
o¿
t¿
w¿
y¿
√¿¿3¿K¿k¿n¿p¿¿¿¿<¿á¿£¿Õ¿“¿‘¿È¿0¿v¿Ω¿¿P¿ó¿ö¿ú¿›¿˛¿P¿o¿º¿€¿ı¿˙¿¿H¿M¿]¿`¿b¿}¿¬¿›¿¿*¿5¿H¿Z¿p¿ó¿∑¿Ã¿Œ¿¿¿?¿K¿ù¿›¿‚¿
¿ ¿6¿N¿f¿m¿o¿£¿Á¿(¿A¿[¿É¿´¿Ê¿7¿<¿>¿É¿¥¿∑¿π¿¿X¿†¿Í¿<¿i¿õ¿…¿¸¿+¿_¿ë¿»¿¿f¿¿Ç¿Ñ¿¿¿Â¿1¿n¿ö¿ü¿°¿Ÿ¿‹    !_kUnconfirmedRippleSplashDuration_kSplashFadeDuration
SfCalendar_SfCalendarState_OpacityWidget_OpacityWidgetState_PopupWidget_PopupWidgetState_CalendarHeaderView_CalendarHeaderViewState_ScheduleLabelPainter_ScheduleAppointmentView"_AppointmentViewHeaderRenderObject_CustomSplashFactory_CustomSplash_AgendaDateTimePainter_ScheduleViewDetails_getTargetRadius_getClipCallback_getTextWidgetWidth_getCalendarViewsText_getAgendaViewDayLabelWidth ê…