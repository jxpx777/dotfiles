set nocompatible
set clipboard=unnamed
let mapleader=","
set splitright

set rtp+=~/.fzf
" ============================================================
" Vundle
" ============================================================
set rtp+=$DOTFILES/vim/bundle/Vundle.vim
call vundle#begin("$DOTFILES/vim/plugins")

"When vim is resized, equalize the windows. Useful in tmux context
autocmd VimResized * :wincmd =

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'szw/vim-tags'
Plugin 'davidoc/taskpaper.vim'

Plugin 'chriskempson/base16-vim'

Plugin 'rking/ag.vim'

Plugin 'vim-scripts/move'

"Javascript
Plugin 'pangloss/vim-javascript'

"Typescript
Plugin 'leafgarland/typescript-vim'

"ReactJS
Plugin 'mxw/vim-jsx'

"JSON
Plugin 'elzr/vim-json'

" Ruby and Rails
Plugin 'vim-ruby/vim-ruby'

"Lua
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-lua-ftplugin'

" Tim Pope Joints
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-commentary'

"Golang
Plugin 'fatih/vim-go'

"Markdown
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'tmux-plugins/vim-tmux-focus-events'

" Text objects
Plugin 'tommcdo/vim-exchange'
Plugin 'vim-scripts/ReplaceWithRegister'
Plugin 'christoomey/vim-sort-motion'
Plugin 'kana/vim-textobj-user'
Plugin 'kana/vim-textobj-entire'
Plugin 'kana/vim-textobj-indent'
Plugin 'kana/vim-textobj-line'

" All of your Plugins must be added before the following line
cal vundle#end()            " required

function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

"Markdown
let g:vim_markdown_folding_disabled=1
let g:markdown_fenced_languages = ['html', 'ruby', 'javascript', 'go', 'python', 'bash=sh', 'zsh']
let g:vim_markdown_frontmatter=1



nmap j gj
nmap k gk
imap jj <esc>
imap jk <esc>
imap kj <esc>

noremap <C-s> <esc>:w<cr>
inoremap <C-s> <esc>:w<cr>

" Line and selection moving mappings from
" http://vim.wikia.com/wiki/Moving_lines_up_or_down
nnoremap <leader>k :m-2<CR>==
nnoremap <leader>j :m+<CR>==
" inoremap <leader>j <Esc>:m+<CR>==gi
" inoremap <leader>k <Esc>:m-2<CR>==gi
vnoremap <leader>j :m '>+1<CR>gv=gv
vnoremap <leader>k :m '<-2<CR>gv=gv

" Tab creation and navigation
nnoremap <leader><tab> :tabnew<cr>
vnoremap <leader><tab> y :tabnew<cr>P

nmap <leader>[ lysiw"ysa"]hx

" Make CtrlP use ag for listing the files. Way faster and no useless files.
" The Silver Searcher
 if executable('ag')
   " Use ag over grep
     set grepprg=ag\ --nogroup\ --nocolor\ --path-to-agignore=~/.agignore

	" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

	"ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
endif

filetype off                  " required
filetype plugin indent on    " required

set backspace=indent,eol,start " allow backspacing over everything in insert mode

set backupdir=~/.tmp
set directory=~/.tmp " Don't clutter my dirs up with swp and tmp files

set relativenumber 
set number

if filereadable(expand("~/.vimrc_background"))
	let base16colorspace=256
	source ~/.vimrc_background
endif

syntax on

" Sane default code indentation
set tabstop=4
set shiftwidth=4

