set nocompatible
set clipboard=unnamed
let mapleader=","
set splitright
set splitbelow

colorscheme base16-tomorrow

set background=light

" No arrow key movement
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

set rtp+=/usr/local/opt/fzf

"When vim is resized, equalize the windows. Useful in tmux context
autocmd VimResized * :wincmd =

function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

"Markdown
let g:vim_markdown_folding_disabled=1
let g:markdown_fenced_languages = ['html', 'ruby', 'javascript', 'go', 'python', 'bash=sh', 'zsh']
let g:vim_markdown_frontmatter=1

nmap j gj
nmap k gk
imap jj <esc>

noremap <C-s> <esc>:w<cr>
inoremap <C-s> <esc>:w<cr>

" Line and selection moving mappings from
" http://vim.wikia.com/wiki/Moving_lines_up_or_down
nnoremap <leader>k :m-2<CR>==
nnoremap <leader>j :m+<CR>==
" inoremap <leader>j <Esc>:m+<CR>==gi
" inoremap <leader>k <Esc>:m-2<CR>==gi
vnoremap <leader>j :m '>+1<CR>gv=gv
vnoremap <leader>k :m '<-2<CR>gv=gv

" Tab creation and navigation
nnoremap <leader><tab> :tabnew<cr>
vnoremap <leader><tab> y :tabnew<cr>P

nmap <leader>[ lysiw"ysa"]hx

" Make CtrlP use ag for listing the files. Way faster and no useless files.
" The Silver Searcher
 if executable('ag')
   " Use ag over grep
     set grepprg=ag\ --nogroup\ --nocolor\ --path-to-agignore=~/.agignore

	" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

	"ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
	cnoreabbrev ag Ack
	cnoreabbrev aG Ack
	cnoreabbrev Ag Ack
	cnoreabbrev AG Ack  
endif

filetype off                  " required
filetype plugin indent on    " required

set backspace=indent,eol,start " allow backspacing over everything in insert mode

set backupdir=~/.tmp
set directory=~/.tmp " Don't clutter my dirs up with swp and tmp files

set number
set relativenumber 

syntax on

" Golang specific commands
map <C-n> :cnext<CR>
map <C-m> :cprevious<CR>
nnoremap <leader>a :cclose<CR
autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <leader>t  <Plug>(go-test)
autocmd FileType go nmap <Leader>c <Plug>(go-coverage-toggle)

" run :GoBuild or :GoTestCompile based on the go file
function! s:build_go_files()
  let l:file = expand('%')
  if l:file =~# '^\f\+_test\.go$'
    call go#test#Test(0, 1)
  elseif l:file =~# '^\f\+\.go$'
    call go#cmd#Build(0)
  endif
endfunction

autocmd FileType go nmap <leader>b :<C-u>call <SID>build_go_files()<CR>

" Sane default code indentation
set tabstop=4
set shiftwidth=4

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
" Shortcut to rapidly toggle `set list`
nmap <leader><space> :set list!<CR>

set autowrite
set tags=./tags,./.git/tags,tags;
