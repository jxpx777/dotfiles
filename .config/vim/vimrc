set nocompatible
set clipboard=unnamed
let mapleader=","
set splitright
set splitbelow

" Adjust runtime path per https://stackoverflow.com/a/3384476/34386
" set default 'runtimepath' (without ~/.vim folders)
let &runtimepath = printf('%s/vimfiles,%s,%s/vimfiles/after', $VIM, $VIMRUNTIME, $VIM)
" what is the name of the directory containing this file?
let s:portable = expand('<sfile>:p:h')
" add the directory to 'runtimepath'
let &runtimepath = printf('%s,%s,%s/after', s:portable, &runtimepath, s:portable)
set packpath+=$XDG_CONFIG_HOME/vim

set background=light
set termguicolors
set term=xterm-256color
colorscheme base16-tomorrow
let base16colorspace=256

" SuperTab+YouCompleteMe+UltiSnips: https://stackoverflow.com/a/22253548/34386
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" better key bindings for UltiSnipsExpandTrigger
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" No arrow key movement
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" vim-test mappings
nmap <silent> t<C-n> :TestNearest<CR>
nmap <silent> t<C-f> :TestFile<CR>
nmap <silent> t<C-s> :TestSuite<CR>
nmap <silent> t<C-l> :TestLast<CR>
nmap <silent> t<C-g> :TestVisit<CR>

set rtp+=/usr/local/opt/fzf
nmap <C-p> :Files<CR>
nmap <C-e> :Buffers<CR>
let g:fzf_action = {
\'ctrl-e': 'edit',
\'ctrl-t': 'tab split',
\'ctrl-v': 'vsplit',
\'ctrl-x': 'split' }

"When vim is resized, equalize the windows. Useful in tmux context
autocmd VimResized * :wincmd =

"" Tmux Navigator
" Disable when zooming the Vim pane
let g:tmux_navigator_disable_when_zoomed = 1

function! s:DiffWithSaved()
  let filetype=&ft
  diffthis
  vnew | r # | normal! 1Gdd
  diffthis
  exe "setlocal bt=nofile bh=wipe nobl noswf ro ft=" . filetype
endfunction
com! DiffSaved call s:DiffWithSaved()

nmap j gj
nmap k gk
imap jj <esc>

noremap <C-s> <esc>:w<cr>
inoremap <C-s> <esc>:w<cr>

" Line and selection moving mappings from
" http://vim.wikia.com/wiki/Moving_lines_up_or_down
nnoremap <leader>k :m-2<CR>==
nnoremap <leader>j :m+<CR>==
vnoremap <leader>j :m '>+1<CR>gv=gv
vnoremap <leader>k :m '<-2<CR>gv=gv

" Tab creation and navigation
nnoremap <leader><tab> :tabnew<cr>
vnoremap <leader><tab> y :tabnew<cr>P

nmap <leader>[ lysiw"ysa"]hx

noreabbrev Ack Ack!
nnoremap <Leader>a :Ack!<Space>
" The Silver Searcher
if executable('ag')
	set grepprg=ag\ --nogroup\ --nocolor\ --path-to-ignore=~/.agignore

	" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
	let g:ackprg = 'ag --vimgrep'

	"ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
	cnoreabbrev ag Ack!
	cnoreabbrev aG Ack!
	cnoreabbrev Ag Ack!
	cnoreabbrev AG Ack!
endif
let g:ctrlp_working_path_mode = 'ra'

filetype off                  " required
filetype plugin indent on    " required

set backspace=indent,eol,start " allow backspacing over everything in insert mode

set number
set relativenumber 

syntax on
set statusline+=%#warningmsg#
set statusline+=%*

let g:ale_sign_column_always = 1
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_sign_error = '>>'
let g:ale_sign_warning = '~~'
let g:ale_fix_on_save = 1

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬
" Shortcut to rapidly toggle `set list`
nmap <leader><space> :set list!<CR>

source $XDG_CONFIG_HOME/vim/fzf.vim

" Don't clutter my dirs up with swp and tmp files
set backupdir=$XDG_CACHE_HOME/vim/backup
set directory=$XDG_CACHE_HOME/vim/swp 
set undodir=$XDG_CACHE_HOME/vim/undo
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo

set autowrite
set tags=./tags,.git/tags,tags;
